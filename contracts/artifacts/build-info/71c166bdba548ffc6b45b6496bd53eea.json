{
	"id": "71c166bdba548ffc6b45b6496bd53eea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SecuritizeRedemption.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n// asset -\n// LiquidityToken -\n// LiquidityProvider -\n\ninterface ILiquidityProvider {\n    function liquidityToken() external view returns (ERC20);\n}\n\ncontract Erc20Token is ERC20 {\n    uint8 _decimals = 18;\n\n    constructor(uint8 decimals_) ERC20(\"name\", \"symbol\") {\n        _decimals = decimals_;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n}\n\ncontract LiquidityProvider is ILiquidityProvider {\n    ERC20 public liquidityProvider;\n\n    function updateLiquidityProvider(address liquidityProviderAddress)\n        external\n    {\n        liquidityProvider = ERC20(liquidityProviderAddress);\n    }\n\n    function liquidityToken() external view returns (ERC20) {\n        return liquidityProvider;\n    }\n}\n\ncontract SecuritizeRedemption {\n    ILiquidityProvider public liquidityProvider;\n    ERC20 public asset;\n\n    uint256 cachedLiquidityDecimals;\n    uint256 cachedAssetDecimals;\n\n    function updateLiquidityProvider(address _liquidityProvider) external {\n        liquidityProvider = ILiquidityProvider(_liquidityProvider);\n\n        address liquidityTokenAddress = address(\n            liquidityProvider.liquidityToken()\n        );\n\n        cachedLiquidityDecimals = ERC20(liquidityTokenAddress).decimals();\n        cachedAssetDecimals = ERC20(address(asset)).decimals();\n    }\n\n    function updateAsset(address _asset) external {\n        asset = ERC20(_asset);\n    }\n\n    // 15780\n    function calculateOrig() public view returns (uint256) {\n        uint256 _amount = 1000000000000000000;\n        uint256 rate = 2000000;\n\n        address liquidityTokenAddress = address(\n            liquidityProvider.liquidityToken()\n        );\n        uint256 liquidityDecimals = ERC20(liquidityTokenAddress).decimals();\n\n        uint256 assetDecimals = ERC20(address(asset)).decimals();\n\n        if (liquidityDecimals > assetDecimals) {\n            return\n                ((_amount * rate) * (10**(liquidityDecimals - assetDecimals))) /\n                (10**liquidityDecimals);\n        }\n        if (liquidityDecimals < assetDecimals) {\n            return\n                (_amount * rate) /\n                (10**(assetDecimals - liquidityDecimals)) /\n                (10**liquidityDecimals);\n        }\n        return (_amount * rate) / (10**assetDecimals);\n    }\n\n    function calculateWithScalingFactor() public view returns (uint256) {\n        uint256 _amount = 1000000000000000000;\n        uint256 rate = 2000000;\n\n        address liquidityTokenAddress = address(\n            liquidityProvider.liquidityToken()\n        );\n        uint256 liquidityDecimals = ERC20(liquidityTokenAddress).decimals();\n\n        uint256 assetDecimals = ERC20(address(asset)).decimals();\n\n        uint256 scalingFactor;\n        if (liquidityDecimals > assetDecimals) {\n            scalingFactor = 10**(liquidityDecimals - assetDecimals);\n            return ((_amount * rate) * scalingFactor) / (10**liquidityDecimals);\n        }\n        if (liquidityDecimals < assetDecimals) {\n            scalingFactor = 10**(assetDecimals - liquidityDecimals);\n            return (_amount * rate) / scalingFactor / (10**liquidityDecimals);\n        }\n        return (_amount * rate) / (10**assetDecimals);\n    }\n\n    // 15828\n    function calculateWithCachedDecimals() public view returns (uint256) {\n        uint256 _amount = 1000000000000000000;\n        uint256 rate = 2000000;\n\n        uint256 scalingFactor;\n        if (cachedLiquidityDecimals > cachedAssetDecimals) {\n            scalingFactor = 10**(cachedLiquidityDecimals - cachedAssetDecimals);\n            return\n                ((_amount * rate) * scalingFactor) /\n                (10**cachedLiquidityDecimals);\n        }\n        if (cachedLiquidityDecimals < cachedAssetDecimals) {\n            scalingFactor = 10**(cachedAssetDecimals - cachedLiquidityDecimals);\n            return\n                (_amount * rate) /\n                scalingFactor /\n                (10**cachedLiquidityDecimals);\n        }\n        return (_amount * rate) / (10**cachedAssetDecimals);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SecuritizeRedemption.sol": {
				"Erc20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SecuritizeRedemption.sol\":284:543  contract Erc20Token is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SecuritizeRedemption.sol\":337:339  18 */\n  0x12\n    /* \"contracts/SecuritizeRedemption.sol\":319:339  uint8 _decimals = 18 */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SecuritizeRedemption.sol\":346:437  constructor(uint8 decimals_) ERC20(\"name\", \"symbol\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x6e616d6500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x73796d626f6c0000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/SecuritizeRedemption.sol\":421:430  decimals_ */\n  dup1\n    /* \"contracts/SecuritizeRedemption.sol\":409:418  _decimals */\n  0x05\n  0x00\n    /* \"contracts/SecuritizeRedemption.sol\":409:430  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SecuritizeRedemption.sol\":346:437  constructor(uint8 decimals_) ERC20(\"name\", \"symbol\") {... */\n  pop\n    /* \"contracts/SecuritizeRedemption.sol\":284:543  contract Erc20Token is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:420   */\ntag_15:\n    /* \"#utility.yul\":369:376   */\n  0x00\n    /* \"#utility.yul\":409:413   */\n  0xff\n    /* \"#utility.yul\":402:407   */\n  dup3\n    /* \"#utility.yul\":398:414   */\n  and\n    /* \"#utility.yul\":387:414   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:420   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":426:544   */\ntag_16:\n    /* \"#utility.yul\":497:519   */\n  tag_44\n    /* \"#utility.yul\":513:518   */\n  dup2\n    /* \"#utility.yul\":497:519   */\n  tag_15\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":490:495   */\n  dup2\n    /* \"#utility.yul\":487:520   */\n  eq\n    /* \"#utility.yul\":477:538   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":534:535   */\n  0x00\n    /* \"#utility.yul\":531:532   */\n  dup1\n    /* \"#utility.yul\":524:536   */\n  revert\n    /* \"#utility.yul\":477:538   */\ntag_45:\n    /* \"#utility.yul\":426:544   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":550:689   */\ntag_17:\n    /* \"#utility.yul\":605:610   */\n  0x00\n    /* \"#utility.yul\":636:642   */\n  dup2\n    /* \"#utility.yul\":630:643   */\n  mload\n    /* \"#utility.yul\":621:643   */\n  swap1\n  pop\n    /* \"#utility.yul\":652:683   */\n  tag_47\n    /* \"#utility.yul\":677:682   */\n  dup2\n    /* \"#utility.yul\":652:683   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":550:689   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:1042   */\ntag_3:\n    /* \"#utility.yul\":763:769   */\n  0x00\n    /* \"#utility.yul\":812:814   */\n  0x20\n    /* \"#utility.yul\":800:809   */\n  dup3\n    /* \"#utility.yul\":791:798   */\n  dup5\n    /* \"#utility.yul\":787:810   */\n  sub\n    /* \"#utility.yul\":783:815   */\n  slt\n    /* \"#utility.yul\":780:899   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":818:897   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":780:899   */\ntag_49:\n    /* \"#utility.yul\":938:939   */\n  0x00\n    /* \"#utility.yul\":963:1025   */\n  tag_51\n    /* \"#utility.yul\":1017:1024   */\n  dup5\n    /* \"#utility.yul\":1008:1014   */\n  dup3\n    /* \"#utility.yul\":997:1006   */\n  dup6\n    /* \"#utility.yul\":993:1015   */\n  add\n    /* \"#utility.yul\":963:1025   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":953:1025   */\n  swap2\n  pop\n    /* \"#utility.yul\":909:1035   */\n  pop\n    /* \"#utility.yul\":695:1042   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1048:1147   */\ntag_18:\n    /* \"#utility.yul\":1100:1106   */\n  0x00\n    /* \"#utility.yul\":1134:1139   */\n  dup2\n    /* \"#utility.yul\":1128:1140   */\n  mload\n    /* \"#utility.yul\":1118:1140   */\n  swap1\n  pop\n    /* \"#utility.yul\":1048:1147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1153:1333   */\ntag_19:\n    /* \"#utility.yul\":1201:1278   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1198:1199   */\n  0x00\n    /* \"#utility.yul\":1191:1279   */\n  mstore\n    /* \"#utility.yul\":1298:1302   */\n  0x41\n    /* \"#utility.yul\":1295:1296   */\n  0x04\n    /* \"#utility.yul\":1288:1303   */\n  mstore\n    /* \"#utility.yul\":1322:1326   */\n  0x24\n    /* \"#utility.yul\":1319:1320   */\n  0x00\n    /* \"#utility.yul\":1312:1327   */\n  revert\n    /* \"#utility.yul\":1339:1519   */\ntag_20:\n    /* \"#utility.yul\":1387:1464   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1384:1385   */\n  0x00\n    /* \"#utility.yul\":1377:1465   */\n  mstore\n    /* \"#utility.yul\":1484:1488   */\n  0x22\n    /* \"#utility.yul\":1481:1482   */\n  0x04\n    /* \"#utility.yul\":1474:1489   */\n  mstore\n    /* \"#utility.yul\":1508:1512   */\n  0x24\n    /* \"#utility.yul\":1505:1506   */\n  0x00\n    /* \"#utility.yul\":1498:1513   */\n  revert\n    /* \"#utility.yul\":1525:1845   */\ntag_21:\n    /* \"#utility.yul\":1569:1575   */\n  0x00\n    /* \"#utility.yul\":1606:1607   */\n  0x02\n    /* \"#utility.yul\":1600:1604   */\n  dup3\n    /* \"#utility.yul\":1596:1608   */\n  div\n    /* \"#utility.yul\":1586:1608   */\n  swap1\n  pop\n    /* \"#utility.yul\":1653:1654   */\n  0x01\n    /* \"#utility.yul\":1647:1651   */\n  dup3\n    /* \"#utility.yul\":1643:1655   */\n  and\n    /* \"#utility.yul\":1674:1692   */\n  dup1\n    /* \"#utility.yul\":1664:1745   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1730:1734   */\n  0x7f\n    /* \"#utility.yul\":1722:1728   */\n  dup3\n    /* \"#utility.yul\":1718:1735   */\n  and\n    /* \"#utility.yul\":1708:1735   */\n  swap2\n  pop\n    /* \"#utility.yul\":1664:1745   */\ntag_56:\n    /* \"#utility.yul\":1792:1794   */\n  0x20\n    /* \"#utility.yul\":1784:1790   */\n  dup3\n    /* \"#utility.yul\":1781:1795   */\n  lt\n    /* \"#utility.yul\":1761:1779   */\n  dup2\n    /* \"#utility.yul\":1758:1796   */\n  sub\n    /* \"#utility.yul\":1755:1839   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1811:1829   */\n  tag_58\n  tag_20\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1755:1839   */\ntag_57:\n    /* \"#utility.yul\":1576:1845   */\n  pop\n    /* \"#utility.yul\":1525:1845   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1851:1992   */\ntag_22:\n    /* \"#utility.yul\":1900:1904   */\n  0x00\n    /* \"#utility.yul\":1923:1926   */\n  dup2\n    /* \"#utility.yul\":1915:1926   */\n  swap1\n  pop\n    /* \"#utility.yul\":1946:1949   */\n  dup2\n    /* \"#utility.yul\":1943:1944   */\n  0x00\n    /* \"#utility.yul\":1936:1950   */\n  mstore\n    /* \"#utility.yul\":1980:1984   */\n  0x20\n    /* \"#utility.yul\":1977:1978   */\n  0x00\n    /* \"#utility.yul\":1967:1985   */\n  keccak256\n    /* \"#utility.yul\":1959:1985   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1992   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2091   */\ntag_23:\n    /* \"#utility.yul\":2035:2041   */\n  0x00\n    /* \"#utility.yul\":2082:2084   */\n  0x20\n    /* \"#utility.yul\":2077:2079   */\n  0x1f\n    /* \"#utility.yul\":2070:2075   */\n  dup4\n    /* \"#utility.yul\":2066:2080   */\n  add\n    /* \"#utility.yul\":2062:2085   */\n  div\n    /* \"#utility.yul\":2052:2085   */\n  swap1\n  pop\n    /* \"#utility.yul\":1998:2091   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2097:2204   */\ntag_24:\n    /* \"#utility.yul\":2141:2149   */\n  0x00\n    /* \"#utility.yul\":2191:2196   */\n  dup3\n    /* \"#utility.yul\":2185:2189   */\n  dup3\n    /* \"#utility.yul\":2181:2197   */\n  shl\n    /* \"#utility.yul\":2160:2197   */\n  swap1\n  pop\n    /* \"#utility.yul\":2097:2204   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2210:2603   */\ntag_25:\n    /* \"#utility.yul\":2279:2285   */\n  0x00\n    /* \"#utility.yul\":2329:2330   */\n  0x08\n    /* \"#utility.yul\":2317:2327   */\n  dup4\n    /* \"#utility.yul\":2313:2331   */\n  mul\n    /* \"#utility.yul\":2352:2449   */\n  tag_63\n    /* \"#utility.yul\":2382:2448   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2371:2380   */\n  dup3\n    /* \"#utility.yul\":2352:2449   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2470:2509   */\n  tag_64\n    /* \"#utility.yul\":2500:2508   */\n  dup7\n    /* \"#utility.yul\":2489:2498   */\n  dup4\n    /* \"#utility.yul\":2470:2509   */\n  tag_24\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2458:2509   */\n  swap6\n  pop\n    /* \"#utility.yul\":2542:2546   */\n  dup1\n    /* \"#utility.yul\":2538:2547   */\n  not\n    /* \"#utility.yul\":2531:2536   */\n  dup5\n    /* \"#utility.yul\":2527:2548   */\n  and\n    /* \"#utility.yul\":2518:2548   */\n  swap4\n  pop\n    /* \"#utility.yul\":2591:2595   */\n  dup1\n    /* \"#utility.yul\":2581:2589   */\n  dup7\n    /* \"#utility.yul\":2577:2596   */\n  and\n    /* \"#utility.yul\":2570:2575   */\n  dup5\n    /* \"#utility.yul\":2567:2597   */\n  or\n    /* \"#utility.yul\":2557:2597   */\n  swap3\n  pop\n    /* \"#utility.yul\":2286:2603   */\n  pop\n  pop\n    /* \"#utility.yul\":2210:2603   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2609:2686   */\ntag_26:\n    /* \"#utility.yul\":2646:2653   */\n  0x00\n    /* \"#utility.yul\":2675:2680   */\n  dup2\n    /* \"#utility.yul\":2664:2680   */\n  swap1\n  pop\n    /* \"#utility.yul\":2609:2686   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2692:2752   */\ntag_27:\n    /* \"#utility.yul\":2720:2723   */\n  0x00\n    /* \"#utility.yul\":2741:2746   */\n  dup2\n    /* \"#utility.yul\":2734:2746   */\n  swap1\n  pop\n    /* \"#utility.yul\":2692:2752   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2758:2900   */\ntag_28:\n    /* \"#utility.yul\":2808:2817   */\n  0x00\n    /* \"#utility.yul\":2841:2894   */\n  tag_68\n    /* \"#utility.yul\":2859:2893   */\n  tag_69\n    /* \"#utility.yul\":2868:2892   */\n  tag_70\n    /* \"#utility.yul\":2886:2891   */\n  dup5\n    /* \"#utility.yul\":2868:2892   */\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2859:2893   */\n  tag_27\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2841:2894   */\n  tag_26\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2828:2894   */\n  swap1\n  pop\n    /* \"#utility.yul\":2758:2900   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2906:2981   */\ntag_29:\n    /* \"#utility.yul\":2949:2952   */\n  0x00\n    /* \"#utility.yul\":2970:2975   */\n  dup2\n    /* \"#utility.yul\":2963:2975   */\n  swap1\n  pop\n    /* \"#utility.yul\":2906:2981   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2987:3256   */\ntag_30:\n    /* \"#utility.yul\":3097:3136   */\n  tag_73\n    /* \"#utility.yul\":3128:3135   */\n  dup4\n    /* \"#utility.yul\":3097:3136   */\n  tag_28\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3158:3249   */\n  tag_74\n    /* \"#utility.yul\":3207:3248   */\n  tag_75\n    /* \"#utility.yul\":3231:3247   */\n  dup3\n    /* \"#utility.yul\":3207:3248   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3199:3205   */\n  dup5\n    /* \"#utility.yul\":3192:3196   */\n  dup5\n    /* \"#utility.yul\":3186:3197   */\n  sload\n    /* \"#utility.yul\":3158:3249   */\n  tag_25\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3152:3156   */\n  dup3\n    /* \"#utility.yul\":3145:3250   */\n  sstore\n    /* \"#utility.yul\":3063:3256   */\n  pop\n    /* \"#utility.yul\":2987:3256   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3262:3335   */\ntag_31:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3262:3335   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3341:3530   */\ntag_32:\n    /* \"#utility.yul\":3418:3450   */\n  tag_78\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3459:3524   */\n  tag_79\n    /* \"#utility.yul\":3517:3523   */\n  dup2\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3503:3507   */\n  dup5\n    /* \"#utility.yul\":3459:3524   */\n  tag_30\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3394:3530   */\n  pop\n    /* \"#utility.yul\":3341:3530   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3722   */\ntag_33:\n    /* \"#utility.yul\":3596:3716   */\ntag_81:\n    /* \"#utility.yul\":3613:3616   */\n  dup2\n    /* \"#utility.yul\":3606:3611   */\n  dup2\n    /* \"#utility.yul\":3603:3617   */\n  lt\n    /* \"#utility.yul\":3596:3716   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3667:3706   */\n  tag_84\n    /* \"#utility.yul\":3704:3705   */\n  0x00\n    /* \"#utility.yul\":3697:3702   */\n  dup3\n    /* \"#utility.yul\":3667:3706   */\n  tag_32\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3640:3641   */\n  0x01\n    /* \"#utility.yul\":3633:3638   */\n  dup2\n    /* \"#utility.yul\":3629:3642   */\n  add\n    /* \"#utility.yul\":3620:3642   */\n  swap1\n  pop\n    /* \"#utility.yul\":3596:3716   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":3536:3722   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3728:4271   */\ntag_34:\n    /* \"#utility.yul\":3829:3831   */\n  0x1f\n    /* \"#utility.yul\":3824:3827   */\n  dup3\n    /* \"#utility.yul\":3821:3832   */\n  gt\n    /* \"#utility.yul\":3818:4264   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3863:3901   */\n  tag_87\n    /* \"#utility.yul\":3895:3900   */\n  dup2\n    /* \"#utility.yul\":3863:3901   */\n  tag_22\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3947:3976   */\n  tag_88\n    /* \"#utility.yul\":3965:3975   */\n  dup5\n    /* \"#utility.yul\":3947:3976   */\n  tag_23\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3937:3945   */\n  dup2\n    /* \"#utility.yul\":3933:3977   */\n  add\n    /* \"#utility.yul\":4130:4132   */\n  0x20\n    /* \"#utility.yul\":4118:4128   */\n  dup6\n    /* \"#utility.yul\":4115:4133   */\n  lt\n    /* \"#utility.yul\":4112:4161   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4151:4159   */\n  dup2\n    /* \"#utility.yul\":4136:4159   */\n  swap1\n  pop\n    /* \"#utility.yul\":4112:4161   */\ntag_89:\n    /* \"#utility.yul\":4174:4254   */\n  tag_90\n    /* \"#utility.yul\":4230:4252   */\n  tag_91\n    /* \"#utility.yul\":4248:4251   */\n  dup6\n    /* \"#utility.yul\":4230:4252   */\n  tag_23\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4220:4228   */\n  dup4\n    /* \"#utility.yul\":4216:4253   */\n  add\n    /* \"#utility.yul\":4203:4214   */\n  dup3\n    /* \"#utility.yul\":4174:4254   */\n  tag_33\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3833:4264   */\n  pop\n  pop\n    /* \"#utility.yul\":3818:4264   */\ntag_86:\n    /* \"#utility.yul\":3728:4271   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4277:4394   */\ntag_35:\n    /* \"#utility.yul\":4331:4339   */\n  0x00\n    /* \"#utility.yul\":4381:4386   */\n  dup3\n    /* \"#utility.yul\":4375:4379   */\n  dup3\n    /* \"#utility.yul\":4371:4387   */\n  shr\n    /* \"#utility.yul\":4350:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4277:4394   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4400:4569   */\ntag_36:\n    /* \"#utility.yul\":4444:4450   */\n  0x00\n    /* \"#utility.yul\":4477:4528   */\n  tag_94\n    /* \"#utility.yul\":4525:4526   */\n  0x00\n    /* \"#utility.yul\":4521:4527   */\n  not\n    /* \"#utility.yul\":4513:4518   */\n  dup5\n    /* \"#utility.yul\":4510:4511   */\n  0x08\n    /* \"#utility.yul\":4506:4519   */\n  mul\n    /* \"#utility.yul\":4477:4528   */\n  tag_35\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4473:4529   */\n  not\n    /* \"#utility.yul\":4558:4562   */\n  dup1\n    /* \"#utility.yul\":4552:4556   */\n  dup4\n    /* \"#utility.yul\":4548:4563   */\n  and\n    /* \"#utility.yul\":4538:4563   */\n  swap2\n  pop\n    /* \"#utility.yul\":4451:4569   */\n  pop\n    /* \"#utility.yul\":4400:4569   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4574:4869   */\ntag_37:\n    /* \"#utility.yul\":4650:4654   */\n  0x00\n    /* \"#utility.yul\":4796:4825   */\n  tag_96\n    /* \"#utility.yul\":4821:4824   */\n  dup4\n    /* \"#utility.yul\":4815:4819   */\n  dup4\n    /* \"#utility.yul\":4796:4825   */\n  tag_36\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4788:4825   */\n  swap2\n  pop\n    /* \"#utility.yul\":4858:4861   */\n  dup3\n    /* \"#utility.yul\":4855:4856   */\n  0x02\n    /* \"#utility.yul\":4851:4862   */\n  mul\n    /* \"#utility.yul\":4845:4849   */\n  dup3\n    /* \"#utility.yul\":4842:4863   */\n  or\n    /* \"#utility.yul\":4834:4863   */\n  swap1\n  pop\n    /* \"#utility.yul\":4574:4869   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4874:6269   */\ntag_8:\n    /* \"#utility.yul\":4991:5028   */\n  tag_98\n    /* \"#utility.yul\":5024:5027   */\n  dup3\n    /* \"#utility.yul\":4991:5028   */\n  tag_18\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5093:5111   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5085:5091   */\n  dup2\n    /* \"#utility.yul\":5082:5112   */\n  gt\n    /* \"#utility.yul\":5079:5135   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":5115:5133   */\n  tag_100\n  tag_19\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5079:5135   */\ntag_99:\n    /* \"#utility.yul\":5159:5197   */\n  tag_101\n    /* \"#utility.yul\":5191:5195   */\n  dup3\n    /* \"#utility.yul\":5185:5196   */\n  sload\n    /* \"#utility.yul\":5159:5197   */\n  tag_21\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5244:5311   */\n  tag_102\n    /* \"#utility.yul\":5304:5310   */\n  dup3\n    /* \"#utility.yul\":5296:5302   */\n  dup3\n    /* \"#utility.yul\":5290:5294   */\n  dup6\n    /* \"#utility.yul\":5244:5311   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5338:5339   */\n  0x00\n    /* \"#utility.yul\":5362:5366   */\n  0x20\n    /* \"#utility.yul\":5349:5366   */\n  swap1\n  pop\n    /* \"#utility.yul\":5394:5396   */\n  0x1f\n    /* \"#utility.yul\":5386:5392   */\n  dup4\n    /* \"#utility.yul\":5383:5397   */\n  gt\n    /* \"#utility.yul\":5411:5412   */\n  0x01\n    /* \"#utility.yul\":5406:6024   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":6068:6069   */\n  0x00\n    /* \"#utility.yul\":6085:6091   */\n  dup5\n    /* \"#utility.yul\":6082:6159   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":6134:6143   */\n  dup3\n    /* \"#utility.yul\":6129:6132   */\n  dup8\n    /* \"#utility.yul\":6125:6144   */\n  add\n    /* \"#utility.yul\":6119:6145   */\n  mload\n    /* \"#utility.yul\":6110:6145   */\n  swap1\n  pop\n    /* \"#utility.yul\":6082:6159   */\ntag_105:\n    /* \"#utility.yul\":6185:6252   */\n  tag_106\n    /* \"#utility.yul\":6245:6251   */\n  dup6\n    /* \"#utility.yul\":6238:6243   */\n  dup3\n    /* \"#utility.yul\":6185:6252   */\n  tag_37\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":6179:6183   */\n  dup7\n    /* \"#utility.yul\":6172:6253   */\n  sstore\n    /* \"#utility.yul\":6041:6263   */\n  pop\n    /* \"#utility.yul\":5376:6263   */\n  jump(tag_103)\n    /* \"#utility.yul\":5406:6024   */\ntag_104:\n    /* \"#utility.yul\":5458:5462   */\n  0x1f\n    /* \"#utility.yul\":5454:5463   */\n  not\n    /* \"#utility.yul\":5446:5452   */\n  dup5\n    /* \"#utility.yul\":5442:5464   */\n  and\n    /* \"#utility.yul\":5492:5529   */\n  tag_107\n    /* \"#utility.yul\":5524:5528   */\n  dup7\n    /* \"#utility.yul\":5492:5529   */\n  tag_22\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5551:5552   */\n  0x00\n    /* \"#utility.yul\":5565:5773   */\ntag_108:\n    /* \"#utility.yul\":5579:5586   */\n  dup3\n    /* \"#utility.yul\":5576:5577   */\n  dup2\n    /* \"#utility.yul\":5573:5587   */\n  lt\n    /* \"#utility.yul\":5565:5773   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5658:5667   */\n  dup5\n    /* \"#utility.yul\":5653:5656   */\n  dup10\n    /* \"#utility.yul\":5649:5668   */\n  add\n    /* \"#utility.yul\":5643:5669   */\n  mload\n    /* \"#utility.yul\":5635:5641   */\n  dup3\n    /* \"#utility.yul\":5628:5670   */\n  sstore\n    /* \"#utility.yul\":5709:5710   */\n  0x01\n    /* \"#utility.yul\":5701:5707   */\n  dup3\n    /* \"#utility.yul\":5697:5711   */\n  add\n    /* \"#utility.yul\":5687:5711   */\n  swap2\n  pop\n    /* \"#utility.yul\":5756:5758   */\n  0x20\n    /* \"#utility.yul\":5745:5754   */\n  dup6\n    /* \"#utility.yul\":5741:5759   */\n  add\n    /* \"#utility.yul\":5728:5759   */\n  swap5\n  pop\n    /* \"#utility.yul\":5602:5606   */\n  0x20\n    /* \"#utility.yul\":5599:5600   */\n  dup2\n    /* \"#utility.yul\":5595:5607   */\n  add\n    /* \"#utility.yul\":5590:5607   */\n  swap1\n  pop\n    /* \"#utility.yul\":5565:5773   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":5801:5807   */\n  dup7\n    /* \"#utility.yul\":5792:5799   */\n  dup4\n    /* \"#utility.yul\":5789:5808   */\n  lt\n    /* \"#utility.yul\":5786:5965   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5859:5868   */\n  dup5\n    /* \"#utility.yul\":5854:5857   */\n  dup10\n    /* \"#utility.yul\":5850:5869   */\n  add\n    /* \"#utility.yul\":5844:5870   */\n  mload\n    /* \"#utility.yul\":5902:5950   */\n  tag_112\n    /* \"#utility.yul\":5944:5948   */\n  0x1f\n    /* \"#utility.yul\":5936:5942   */\n  dup10\n    /* \"#utility.yul\":5932:5949   */\n  and\n    /* \"#utility.yul\":5921:5930   */\n  dup3\n    /* \"#utility.yul\":5902:5950   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5894:5900   */\n  dup4\n    /* \"#utility.yul\":5887:5951   */\n  sstore\n    /* \"#utility.yul\":5809:5965   */\n  pop\n    /* \"#utility.yul\":5786:5965   */\ntag_111:\n    /* \"#utility.yul\":6011:6012   */\n  0x01\n    /* \"#utility.yul\":6007:6008   */\n  0x02\n    /* \"#utility.yul\":5999:6005   */\n  dup9\n    /* \"#utility.yul\":5995:6009   */\n  mul\n    /* \"#utility.yul\":5991:6013   */\n  add\n    /* \"#utility.yul\":5985:5989   */\n  dup9\n    /* \"#utility.yul\":5978:6014   */\n  sstore\n    /* \"#utility.yul\":5413:6024   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5376:6263   */\ntag_103:\n  pop\n    /* \"#utility.yul\":4966:6269   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4874:6269   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SecuritizeRedemption.sol\":284:543  contract Erc20Token is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SecuritizeRedemption.sol\":284:543  contract Erc20Token is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":443:541  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":443:541  function decimals() public view virtual override returns (uint8) {... */\n    tag_33:\n        /* \"contracts/SecuritizeRedemption.sol\":501:506  uint8 */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":525:534  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":518:534  return _decimals */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":443:541  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_114)\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_122:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_147:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_147)\n    tag_149:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_123:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_124:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_152\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_120\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":818:889   */\n      tag_153\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_121\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_154\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_122\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":988:1017   */\n      tag_155\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_123\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_16:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_157\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_124\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_126:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_128:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_129:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_163\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_128\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_130:\n        /* \"#utility.yul\":1983:2007   */\n      tag_165\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_129\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_166:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_131:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_168\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_130\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_132:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_133:\n        /* \"#utility.yul\":2339:2363   */\n      tag_171\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_132\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_172:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_134:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_174\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_133\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_19:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_177\n      tag_126\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2632:2751   */\n    tag_176:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_178\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_131\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_179\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_135:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_136:\n        /* \"#utility.yul\":3196:3217   */\n      tag_182\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_135\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_22:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_184\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_136\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_137:\n        /* \"#utility.yul\":3533:3557   */\n      tag_186\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_132\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_26:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_188\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_29:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_191\n      tag_126\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3908:4027   */\n    tag_190:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_192\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_131\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_193\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_131\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_194\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_134\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_138:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_139:\n        /* \"#utility.yul\":4598:4620   */\n      tag_197\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_138\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_35:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_199\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_139\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_38:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_202\n      tag_126\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4929:5048   */\n    tag_201:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_203\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_131\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_50:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_206\n      tag_126\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5281:5400   */\n    tag_205:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_207\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_131\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_208\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_131\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_140:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_55:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_211:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_213\n      tag_140\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6084:6168   */\n    tag_212:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6298   */\n    tag_141:\n        /* \"#utility.yul\":6267:6291   */\n      tag_215\n        /* \"#utility.yul\":6285:6290   */\n      dup2\n        /* \"#utility.yul\":6267:6291   */\n      tag_129\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6262:6265   */\n      dup3\n        /* \"#utility.yul\":6255:6292   */\n      mstore\n        /* \"#utility.yul\":6180:6298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6746   */\n    tag_93:\n        /* \"#utility.yul\":6453:6457   */\n      0x00\n        /* \"#utility.yul\":6491:6493   */\n      0x60\n        /* \"#utility.yul\":6480:6489   */\n      dup3\n        /* \"#utility.yul\":6476:6494   */\n      add\n        /* \"#utility.yul\":6468:6494   */\n      swap1\n      pop\n        /* \"#utility.yul\":6504:6575   */\n      tag_217\n        /* \"#utility.yul\":6572:6573   */\n      0x00\n        /* \"#utility.yul\":6561:6570   */\n      dup4\n        /* \"#utility.yul\":6557:6574   */\n      add\n        /* \"#utility.yul\":6548:6554   */\n      dup7\n        /* \"#utility.yul\":6504:6575   */\n      tag_141\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6585:6657   */\n      tag_218\n        /* \"#utility.yul\":6653:6655   */\n      0x20\n        /* \"#utility.yul\":6642:6651   */\n      dup4\n        /* \"#utility.yul\":6638:6656   */\n      add\n        /* \"#utility.yul\":6629:6635   */\n      dup6\n        /* \"#utility.yul\":6585:6657   */\n      tag_137\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6667:6739   */\n      tag_219\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6724:6733   */\n      dup4\n        /* \"#utility.yul\":6720:6738   */\n      add\n        /* \"#utility.yul\":6711:6717   */\n      dup5\n        /* \"#utility.yul\":6667:6739   */\n      tag_137\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6304:6746   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6974   */\n    tag_98:\n        /* \"#utility.yul\":6845:6849   */\n      0x00\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup3\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6860:6886   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6967   */\n      tag_221\n        /* \"#utility.yul\":6964:6965   */\n      0x00\n        /* \"#utility.yul\":6953:6962   */\n      dup4\n        /* \"#utility.yul\":6949:6966   */\n      add\n        /* \"#utility.yul\":6940:6946   */\n      dup5\n        /* \"#utility.yul\":6896:6967   */\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6752:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_142:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_113:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_224\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_132\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_225\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_227\n      tag_142\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7314:7350   */\n    tag_226:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a4c47ad6b0c3adf24aeeb5f36319439600ba87af5f71395ad4def70751dcc4e964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_815": {
									"entryPoint": null,
									"id": 815,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6272:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "387:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "402:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "369:7:6",
														"type": ""
													}
												],
												"src": "334:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:77:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "513:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "497:15:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "497:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:41:6"
															},
															"nodeType": "YulIf",
															"src": "477:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "460:5:6",
														"type": ""
													}
												],
												"src": "426:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:78:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "621:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "636:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "630:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "630:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "621:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "677:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "652:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "652:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "589:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "597:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "605:5:6",
														"type": ""
													}
												],
												"src": "550:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "770:272:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "816:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "818:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "818:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "818:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "791:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "800:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "783:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:32:6"
															},
															"nodeType": "YulIf",
															"src": "780:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "909:126:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "924:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "928:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "953:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "997:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1008:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "993:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1017:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "963:29:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "953:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "740:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "751:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "763:6:6",
														"type": ""
													}
												],
												"src": "695:347:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1107:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1118:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1134:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1128:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1100:6:6",
														"type": ""
													}
												],
												"src": "1048:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1181:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1198:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1191:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1295:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1288:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1319:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1312:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1312:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1153:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1387:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1481:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1474:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1505:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1498:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1498:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1339:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1586:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1600:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1606:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1586:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1617:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1647:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1643:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1621:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1694:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1708:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1722:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1730:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1718:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1718:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1708:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1674:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:26:6"
															},
															"nodeType": "YulIf",
															"src": "1664:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1797:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1811:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1811:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1811:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1761:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1784:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1781:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1758:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:38:6"
															},
															"nodeType": "YulIf",
															"src": "1755:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:6",
														"type": ""
													}
												],
												"src": "1525:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1905:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1915:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "1923:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1915:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1946:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1936:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1967:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1959:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1892:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1900:4:6",
														"type": ""
													}
												],
												"src": "1851:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2042:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2052:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2070:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2077:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2066:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2066:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2082:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2025:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2035:6:6",
														"type": ""
													}
												],
												"src": "1998:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2160:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2185:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2191:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2181:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2160:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2125:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2131:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2141:8:6",
														"type": ""
													}
												],
												"src": "2097:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2286:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2296:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2317:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2313:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2300:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2340:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2371:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2352:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2344:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2489:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2500:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2470:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2458:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2518:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2531:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2542:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2518:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2557:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2570:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2581:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2591:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2577:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2577:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2567:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2557:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2247:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2254:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2266:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2279:6:6",
														"type": ""
													}
												],
												"src": "2210:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2664:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2675:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2664:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2636:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2646:7:6",
														"type": ""
													}
												],
												"src": "2609:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2724:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2734:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2741:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2710:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2720:3:6",
														"type": ""
													}
												],
												"src": "2692:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2828:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2859:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2841:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2828:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2798:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2808:9:6",
														"type": ""
													}
												],
												"src": "2758:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2970:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2963:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2939:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2949:3:6",
														"type": ""
													}
												],
												"src": "2906:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3063:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3073:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3128:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3097:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3097:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3077:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3152:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3192:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3186:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3186:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3231:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3207:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3207:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3158:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3040:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3046:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3054:7:6",
														"type": ""
													}
												],
												"src": "2987:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3311:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3321:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3328:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3307:3:6",
														"type": ""
													}
												],
												"src": "3262:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3394:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3404:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3418:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3408:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3503:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3509:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3517:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3459:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3380:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3386:6:6",
														"type": ""
													}
												],
												"src": "3341:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3653:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3697:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3704:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3667:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3667:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3667:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3606:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3613:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3603:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3618:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3620:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3633:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3640:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3629:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3629:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3620:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3600:2:6",
																"statements": []
															},
															"src": "3596:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3574:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3581:3:6",
														"type": ""
													}
												],
												"src": "3536:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3807:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3833:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3847:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "3895:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "3863:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3863:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "3851:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3914:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "3937:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "3965:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "3947:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3947:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3933:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3933:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "3918:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4134:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4136:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4151:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4136:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4118:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4130:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4115:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4115:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "4112:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4203:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4220:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4248:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4230:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4230:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4216:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4216:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4174:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4174:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3824:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3829:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:11:6"
															},
															"nodeType": "YulIf",
															"src": "3818:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3783:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3790:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3795:10:6",
														"type": ""
													}
												],
												"src": "3728:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4340:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4350:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4375:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4381:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4371:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4350:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4315:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4321:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4331:8:6",
														"type": ""
													}
												],
												"src": "4277:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4451:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4461:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4510:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4513:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4506:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4506:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4525:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4521:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4521:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4477:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4477:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4465:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4538:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4552:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4558:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4548:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4428:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4434:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4444:6:6",
														"type": ""
													}
												],
												"src": "4400:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4788:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4815:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4796:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4788:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4834:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4845:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4855:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "4858:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4851:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4851:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4842:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4834:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4636:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4642:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4650:4:6",
														"type": ""
													}
												],
												"src": "4574:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4966:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4977:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5024:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4991:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "4981:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5113:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5115:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5115:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5115:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5085:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5093:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5082:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:30:6"
															},
															"nodeType": "YulIf",
															"src": "5079:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5145:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5191:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5159:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5149:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5290:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5296:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5304:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5244:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5244:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5321:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5338:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5325:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5349:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5362:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5349:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5413:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5427:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5446:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5458:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5454:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5454:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5442:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5442:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5431:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5478:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5524:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5492:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5492:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5482:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5542:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5551:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5546:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5610:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5635:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5653:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5658:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5649:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5649:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5643:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5643:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5628:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5628:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5628:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5687:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5701:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5709:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5697:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5697:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5687:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5728:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5745:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5741:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5741:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5728:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5576:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5579:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5573:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5573:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5588:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5590:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5599:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5602:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5595:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5595:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5590:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5569:3:6",
																					"statements": []
																				},
																				"src": "5565:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5809:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5827:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5854:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5859:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5850:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5850:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5844:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5844:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5831:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5894:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "5921:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "5936:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "5944:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "5932:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5932:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "5902:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5902:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5887:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5887:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5887:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5792:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5801:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5789:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5789:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "5786:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5985:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "5999:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6007:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "5995:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5995:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6011:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5991:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5991:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5978:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5978:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5978:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5406:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5411:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6041:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6055:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6068:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6059:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6092:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6110:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6129:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6134:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6125:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6125:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6119:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6119:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6110:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6085:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6082:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6179:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6238:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6245:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6185:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6185:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6172:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6172:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6172:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6033:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5386:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5383:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "5376:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4955:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4961:3:6",
														"type": ""
													}
												],
												"src": "4874:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601260055f6101000a81548160ff021916908360ff1602179055503480156200002b575f80fd5b50604051620012d2380380620012d2833981810160405281019062000051919062000143565b6040518060400160405280600481526020017f6e616d65000000000000000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f73796d626f6c00000000000000000000000000000000000000000000000000008152508160039081620000ce9190620003d7565b508060049081620000e09190620003d7565b5050508060055f6101000a81548160ff021916908360ff16021790555050620004bb565b5f80fd5b5f60ff82169050919050565b6200011f8162000108565b81146200012a575f80fd5b50565b5f815190506200013d8162000114565b92915050565b5f602082840312156200015b576200015a62000104565b5b5f6200016a848285016200012d565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620001ef57607f821691505b602082108103620002055762000204620001aa565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200022c565b6200027586836200022c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002bf620002b9620002b3846200028d565b62000296565b6200028d565b9050919050565b5f819050919050565b620002da836200029f565b620002f2620002e982620002c6565b84845462000238565b825550505050565b5f90565b62000308620002fa565b62000315818484620002cf565b505050565b5b818110156200033c57620003305f82620002fe565b6001810190506200031b565b5050565b601f8211156200038b5762000355816200020b565b62000360846200021d565b8101602085101562000370578190505b620003886200037f856200021d565b8301826200031a565b50505b505050565b5f82821c905092915050565b5f620003ad5f198460080262000390565b1980831691505092915050565b5f620003c783836200039c565b9150826002028217905092915050565b620003e28262000173565b67ffffffffffffffff811115620003fe57620003fd6200017d565b5b6200040a8254620001d7565b6200041782828562000340565b5f60209050601f8311600181146200044d575f841562000438578287015190505b620004448582620003ba565b865550620004b3565b601f1984166200045d866200020b565b5f5b8281101562000486578489015182556001820191506020850194506020810190506200045f565b86831015620004a65784890151620004a2601f8916826200039c565b8355505b6001600288020188555050505b505050505050565b610e0980620004c95f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a82565b60405180910390f35b6100cd60048036038101906100c89190610b33565b61028d565b6040516100da9190610b8b565b60405180910390f35b6100eb6102af565b6040516100f89190610bb3565b60405180910390f35b61011b60048036038101906101169190610bcc565b6102b8565b6040516101289190610b8b565b60405180910390f35b6101396102e6565b6040516101469190610c37565b60405180910390f35b61016960048036038101906101649190610c50565b6102fb565b6040516101769190610bb3565b60405180910390f35b610187610340565b6040516101949190610a82565b60405180910390f35b6101b760048036038101906101b29190610b33565b6103d0565b6040516101c49190610b8b565b60405180910390f35b6101e760048036038101906101e29190610c7b565b6103f2565b6040516101f49190610bb3565b60405180910390f35b60606003805461020c90610ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610ce6565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610474565b90506102a481858561047b565b600191505092915050565b5f600254905090565b5f806102c2610474565b90506102cf85828561048d565b6102da858585610520565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034f90610ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610ce6565b80156103c65780601f1061039d576101008083540402835291602001916103c6565b820191905f5260205f20905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b5f806103da610474565b90506103e7818585610520565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104888383836001610610565b505050565b5f61049884846103f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561051a578181101561050b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050293929190610d25565b60405180910390fd5b61051984848484035f610610565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610590575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105879190610d5a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610600575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105f79190610d5a565b60405180910390fd5b61060b8383836107df565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610680575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106779190610d5a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106e79190610d5a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107d9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d09190610bb3565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082f578060025f8282546108239190610da0565b925050819055506108fd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108b8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108af93929190610d25565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610944578060025f828254039250508190555061098e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109eb9190610bb3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a2f578082015181840152602081019050610a14565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610a54826109f8565b610a5e8185610a02565b9350610a6e818560208601610a12565b610a7781610a3a565b840191505092915050565b5f6020820190508181035f830152610a9a8184610a4a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610acf82610aa6565b9050919050565b610adf81610ac5565b8114610ae9575f80fd5b50565b5f81359050610afa81610ad6565b92915050565b5f819050919050565b610b1281610b00565b8114610b1c575f80fd5b50565b5f81359050610b2d81610b09565b92915050565b5f8060408385031215610b4957610b48610aa2565b5b5f610b5685828601610aec565b9250506020610b6785828601610b1f565b9150509250929050565b5f8115159050919050565b610b8581610b71565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b610bad81610b00565b82525050565b5f602082019050610bc65f830184610ba4565b92915050565b5f805f60608486031215610be357610be2610aa2565b5b5f610bf086828701610aec565b9350506020610c0186828701610aec565b9250506040610c1286828701610b1f565b9150509250925092565b5f60ff82169050919050565b610c3181610c1c565b82525050565b5f602082019050610c4a5f830184610c28565b92915050565b5f60208284031215610c6557610c64610aa2565b5b5f610c7284828501610aec565b91505092915050565b5f8060408385031215610c9157610c90610aa2565b5b5f610c9e85828601610aec565b9250506020610caf85828601610aec565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cfd57607f821691505b602082108103610d1057610d0f610cb9565b5b50919050565b610d1f81610ac5565b82525050565b5f606082019050610d385f830186610d16565b610d456020830185610ba4565b610d526040830184610ba4565b949350505050565b5f602082019050610d6d5f830184610d16565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610daa82610b00565b9150610db583610b00565b9250828201905080821115610dcd57610dcc610d73565b5b9291505056fea2646970667358221220a4c47ad6b0c3adf24aeeb5f36319439600ba87af5f71395ad4def70751dcc4e964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12D2 CODESIZE SUB DUP1 PUSH3 0x12D2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x51 SWAP2 SWAP1 PUSH3 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E616D6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73796D626F6C0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCE SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xE0 SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x4BB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x11F DUP2 PUSH3 0x108 JUMP JUMPDEST DUP2 EQ PUSH3 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x13D DUP2 PUSH3 0x114 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x15B JUMPI PUSH3 0x15A PUSH3 0x104 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x16A DUP5 DUP3 DUP6 ADD PUSH3 0x12D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x205 JUMPI PUSH3 0x204 PUSH3 0x1AA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x269 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x22C JUMP JUMPDEST PUSH3 0x275 DUP7 DUP4 PUSH3 0x22C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2BF PUSH3 0x2B9 PUSH3 0x2B3 DUP5 PUSH3 0x28D JUMP JUMPDEST PUSH3 0x296 JUMP JUMPDEST PUSH3 0x28D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DA DUP4 PUSH3 0x29F JUMP JUMPDEST PUSH3 0x2F2 PUSH3 0x2E9 DUP3 PUSH3 0x2C6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x238 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x308 PUSH3 0x2FA JUMP JUMPDEST PUSH3 0x315 DUP2 DUP5 DUP5 PUSH3 0x2CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x33C JUMPI PUSH3 0x330 PUSH0 DUP3 PUSH3 0x2FE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x31B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x38B JUMPI PUSH3 0x355 DUP2 PUSH3 0x20B JUMP JUMPDEST PUSH3 0x360 DUP5 PUSH3 0x21D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x370 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x388 PUSH3 0x37F DUP6 PUSH3 0x21D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x31A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3AD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x390 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3C7 DUP4 DUP4 PUSH3 0x39C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3E2 DUP3 PUSH3 0x173 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3FE JUMPI PUSH3 0x3FD PUSH3 0x17D JUMP JUMPDEST JUMPDEST PUSH3 0x40A DUP3 SLOAD PUSH3 0x1D7 JUMP JUMPDEST PUSH3 0x417 DUP3 DUP3 DUP6 PUSH3 0x340 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x44D JUMPI PUSH0 DUP5 ISZERO PUSH3 0x438 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x444 DUP6 DUP3 PUSH3 0x3BA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4B3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x45D DUP7 PUSH3 0x20B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x486 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x45F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4A6 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4A2 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x39C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE09 DUP1 PUSH3 0x4C9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3DA PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E7 DUP2 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x488 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x610 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x610 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x590 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x600 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60B DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x680 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x944 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA14 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA54 DUP3 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0xA5E DUP2 DUP6 PUSH2 0xA02 JUMP JUMPDEST SWAP4 POP PUSH2 0xA6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0xA3A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA9A DUP2 DUP5 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xACF DUP3 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADF DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAFA DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0xB00 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB2D DUP2 PUSH2 0xB09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB56 DUP6 DUP3 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB67 DUP6 DUP3 DUP7 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBE2 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF0 DUP7 DUP3 DUP8 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC01 DUP7 DUP3 DUP8 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC12 DUP7 DUP3 DUP8 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC31 DUP2 PUSH2 0xC1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC4A PUSH0 DUP4 ADD DUP5 PUSH2 0xC28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC72 DUP5 DUP3 DUP6 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9E DUP6 DUP3 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAF DUP6 DUP3 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCFD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xCB9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1F DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD38 PUSH0 DUP4 ADD DUP7 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0xD45 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0xD52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6D PUSH0 DUP4 ADD DUP5 PUSH2 0xD16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0xB00 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0xB00 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xC4 PUSH27 0xD6B0C3ADF24AEEB5F36319439600BA87AF5F71395AD4DEF70751DC 0xC4 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "284:259:5:-:0;;;337:2;319:20;;;;;;;;;;;;;;;;;;;;346:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;421:9:5::1;409;;:21;;;;;;;;;;;;;;;;;;346:91:::0;284:259;;88:117:6;197:1;194;187:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:139::-;605:5;636:6;630:13;621:22;;652:31;677:5;652:31;:::i;:::-;550:139;;;;:::o;695:347::-;763:6;812:2;800:9;791:7;787:23;783:32;780:119;;;818:79;;:::i;:::-;780:119;938:1;963:62;1017:7;1008:6;997:9;993:22;963:62;:::i;:::-;953:72;;909:126;695:347;;;;:::o;1048:99::-;1100:6;1134:5;1128:12;1118:22;;1048:99;;;:::o;1153:180::-;1201:77;1198:1;1191:88;1298:4;1295:1;1288:15;1322:4;1319:1;1312:15;1339:180;1387:77;1384:1;1377:88;1484:4;1481:1;1474:15;1508:4;1505:1;1498:15;1525:320;1569:6;1606:1;1600:4;1596:12;1586:22;;1653:1;1647:4;1643:12;1674:18;1664:81;;1730:4;1722:6;1718:17;1708:27;;1664:81;1792:2;1784:6;1781:14;1761:18;1758:38;1755:84;;1811:18;;:::i;:::-;1755:84;1576:269;1525:320;;;:::o;1851:141::-;1900:4;1923:3;1915:11;;1946:3;1943:1;1936:14;1980:4;1977:1;1967:18;1959:26;;1851:141;;;:::o;1998:93::-;2035:6;2082:2;2077;2070:5;2066:14;2062:23;2052:33;;1998:93;;;:::o;2097:107::-;2141:8;2191:5;2185:4;2181:16;2160:37;;2097:107;;;;:::o;2210:393::-;2279:6;2329:1;2317:10;2313:18;2352:97;2382:66;2371:9;2352:97;:::i;:::-;2470:39;2500:8;2489:9;2470:39;:::i;:::-;2458:51;;2542:4;2538:9;2531:5;2527:21;2518:30;;2591:4;2581:8;2577:19;2570:5;2567:30;2557:40;;2286:317;;2210:393;;;;;:::o;2609:77::-;2646:7;2675:5;2664:16;;2609:77;;;:::o;2692:60::-;2720:3;2741:5;2734:12;;2692:60;;;:::o;2758:142::-;2808:9;2841:53;2859:34;2868:24;2886:5;2868:24;:::i;:::-;2859:34;:::i;:::-;2841:53;:::i;:::-;2828:66;;2758:142;;;:::o;2906:75::-;2949:3;2970:5;2963:12;;2906:75;;;:::o;2987:269::-;3097:39;3128:7;3097:39;:::i;:::-;3158:91;3207:41;3231:16;3207:41;:::i;:::-;3199:6;3192:4;3186:11;3158:91;:::i;:::-;3152:4;3145:105;3063:193;2987:269;;;:::o;3262:73::-;3307:3;3262:73;:::o;3341:189::-;3418:32;;:::i;:::-;3459:65;3517:6;3509;3503:4;3459:65;:::i;:::-;3394:136;3341:189;;:::o;3536:186::-;3596:120;3613:3;3606:5;3603:14;3596:120;;;3667:39;3704:1;3697:5;3667:39;:::i;:::-;3640:1;3633:5;3629:13;3620:22;;3596:120;;;3536:186;;:::o;3728:543::-;3829:2;3824:3;3821:11;3818:446;;;3863:38;3895:5;3863:38;:::i;:::-;3947:29;3965:10;3947:29;:::i;:::-;3937:8;3933:44;4130:2;4118:10;4115:18;4112:49;;;4151:8;4136:23;;4112:49;4174:80;4230:22;4248:3;4230:22;:::i;:::-;4220:8;4216:37;4203:11;4174:80;:::i;:::-;3833:431;;3818:446;3728:543;;;:::o;4277:117::-;4331:8;4381:5;4375:4;4371:16;4350:37;;4277:117;;;;:::o;4400:169::-;4444:6;4477:51;4525:1;4521:6;4513:5;4510:1;4506:13;4477:51;:::i;:::-;4473:56;4558:4;4552;4548:15;4538:25;;4451:118;4400:169;;;;:::o;4574:295::-;4650:4;4796:29;4821:3;4815:4;4796:29;:::i;:::-;4788:37;;4858:3;4855:1;4851:11;4845:4;4842:21;4834:29;;4574:295;;;;:::o;4874:1395::-;4991:37;5024:3;4991:37;:::i;:::-;5093:18;5085:6;5082:30;5079:56;;;5115:18;;:::i;:::-;5079:56;5159:38;5191:4;5185:11;5159:38;:::i;:::-;5244:67;5304:6;5296;5290:4;5244:67;:::i;:::-;5338:1;5362:4;5349:17;;5394:2;5386:6;5383:14;5411:1;5406:618;;;;6068:1;6085:6;6082:77;;;6134:9;6129:3;6125:19;6119:26;6110:35;;6082:77;6185:67;6245:6;6238:5;6185:67;:::i;:::-;6179:4;6172:81;6041:222;5376:887;;5406:618;5458:4;5454:9;5446:6;5442:22;5492:37;5524:4;5492:37;:::i;:::-;5551:1;5565:208;5579:7;5576:1;5573:14;5565:208;;;5658:9;5653:3;5649:19;5643:26;5635:6;5628:42;5709:1;5701:6;5697:14;5687:24;;5756:2;5745:9;5741:18;5728:31;;5602:4;5599:1;5595:12;5590:17;;5565:208;;;5801:6;5792:7;5789:19;5786:179;;;5859:9;5854:3;5850:19;5844:26;5902:48;5944:4;5936:6;5932:17;5921:9;5902:48;:::i;:::-;5894:6;5887:64;5809:156;5786:179;6011:1;6007;5999:6;5995:14;5991:22;5985:4;5978:36;5413:611;;;5376:887;;4966:1303;;;4874:1395;;:::o;284:259:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1147,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1552,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1140,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1165,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1312,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2015,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1010,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 653,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 763,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_824": {
									"entryPoint": 742,
									"id": 824,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 509,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 832,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 687,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 696,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 976,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7360:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6245:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6262:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6285:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6267:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6255:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6233:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6240:3:6",
														"type": ""
													}
												],
												"src": "6180:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6480:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6491:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6476:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6561:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6572:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6557:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6504:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6585:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6585:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6667:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6414:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6426:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6434:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6442:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6453:4:6",
														"type": ""
													}
												],
												"src": "6304:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6850:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6860:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6872:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6883:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6860:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6953:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6964:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6896:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6896:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6896:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6822:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6834:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6845:4:6",
														"type": ""
													}
												],
												"src": "6752:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7210:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7220:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7254:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7259:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7288:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7328:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:10:6"
															},
															"nodeType": "YulIf",
															"src": "7314:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7197:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7200:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7206:3:6",
														"type": ""
													}
												],
												"src": "7166:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a82565b60405180910390f35b6100cd60048036038101906100c89190610b33565b61028d565b6040516100da9190610b8b565b60405180910390f35b6100eb6102af565b6040516100f89190610bb3565b60405180910390f35b61011b60048036038101906101169190610bcc565b6102b8565b6040516101289190610b8b565b60405180910390f35b6101396102e6565b6040516101469190610c37565b60405180910390f35b61016960048036038101906101649190610c50565b6102fb565b6040516101769190610bb3565b60405180910390f35b610187610340565b6040516101949190610a82565b60405180910390f35b6101b760048036038101906101b29190610b33565b6103d0565b6040516101c49190610b8b565b60405180910390f35b6101e760048036038101906101e29190610c7b565b6103f2565b6040516101f49190610bb3565b60405180910390f35b60606003805461020c90610ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610ce6565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610474565b90506102a481858561047b565b600191505092915050565b5f600254905090565b5f806102c2610474565b90506102cf85828561048d565b6102da858585610520565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034f90610ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610ce6565b80156103c65780601f1061039d576101008083540402835291602001916103c6565b820191905f5260205f20905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b5f806103da610474565b90506103e7818585610520565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104888383836001610610565b505050565b5f61049884846103f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561051a578181101561050b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050293929190610d25565b60405180910390fd5b61051984848484035f610610565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610590575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105879190610d5a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610600575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105f79190610d5a565b60405180910390fd5b61060b8383836107df565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610680575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106779190610d5a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106e79190610d5a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107d9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d09190610bb3565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082f578060025f8282546108239190610da0565b925050819055506108fd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108b8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108af93929190610d25565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610944578060025f828254039250508190555061098e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109eb9190610bb3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a2f578082015181840152602081019050610a14565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610a54826109f8565b610a5e8185610a02565b9350610a6e818560208601610a12565b610a7781610a3a565b840191505092915050565b5f6020820190508181035f830152610a9a8184610a4a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610acf82610aa6565b9050919050565b610adf81610ac5565b8114610ae9575f80fd5b50565b5f81359050610afa81610ad6565b92915050565b5f819050919050565b610b1281610b00565b8114610b1c575f80fd5b50565b5f81359050610b2d81610b09565b92915050565b5f8060408385031215610b4957610b48610aa2565b5b5f610b5685828601610aec565b9250506020610b6785828601610b1f565b9150509250929050565b5f8115159050919050565b610b8581610b71565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b610bad81610b00565b82525050565b5f602082019050610bc65f830184610ba4565b92915050565b5f805f60608486031215610be357610be2610aa2565b5b5f610bf086828701610aec565b9350506020610c0186828701610aec565b9250506040610c1286828701610b1f565b9150509250925092565b5f60ff82169050919050565b610c3181610c1c565b82525050565b5f602082019050610c4a5f830184610c28565b92915050565b5f60208284031215610c6557610c64610aa2565b5b5f610c7284828501610aec565b91505092915050565b5f8060408385031215610c9157610c90610aa2565b5b5f610c9e85828601610aec565b9250506020610caf85828601610aec565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cfd57607f821691505b602082108103610d1057610d0f610cb9565b5b50919050565b610d1f81610ac5565b82525050565b5f606082019050610d385f830186610d16565b610d456020830185610ba4565b610d526040830184610ba4565b949350505050565b5f602082019050610d6d5f830184610d16565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610daa82610b00565b9150610db583610b00565b9250828201905080821115610dcd57610dcc610d73565b5b9291505056fea2646970667358221220a4c47ad6b0c3adf24aeeb5f36319439600ba87af5f71395ad4def70751dcc4e964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0xCE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3DA PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E7 DUP2 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x488 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x610 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x610 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x590 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x600 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60B DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x680 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x944 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA14 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA54 DUP3 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0xA5E DUP2 DUP6 PUSH2 0xA02 JUMP JUMPDEST SWAP4 POP PUSH2 0xA6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0xA3A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA9A DUP2 DUP5 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xACF DUP3 PUSH2 0xAA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADF DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAFA DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0xB00 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB2D DUP2 PUSH2 0xB09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB56 DUP6 DUP3 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB67 DUP6 DUP3 DUP7 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBE2 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBF0 DUP7 DUP3 DUP8 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC01 DUP7 DUP3 DUP8 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC12 DUP7 DUP3 DUP8 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC31 DUP2 PUSH2 0xC1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC4A PUSH0 DUP4 ADD DUP5 PUSH2 0xC28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC64 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC72 DUP5 DUP3 DUP6 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH2 0xC90 PUSH2 0xAA2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9E DUP6 DUP3 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAF DUP6 DUP3 DUP7 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCFD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xCB9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1F DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD38 PUSH0 DUP4 ADD DUP7 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0xD45 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0xD52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6D PUSH0 DUP4 ADD DUP5 PUSH2 0xD16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0xB00 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0xB00 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xC4 PUSH27 0xD6B0C3ADF24AEEB5F36319439600BA87AF5F71395AD4DEF70751DC 0xC4 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "284:259:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;443:98:5:-;501:5;525:9;;;;;;;;;;;518:16;;443:98;:::o;2985:116:1:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "718600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "2473",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 337,
									"end": 339,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 319,
									"end": 339,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 319,
									"end": 339,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 339,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 319,
									"end": 339,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 319,
									"end": 339,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 319,
									"end": 339,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 319,
									"end": 339,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 346,
									"end": 437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 346,
									"end": 437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "6E616D6500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "73796D626F6C0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 421,
									"end": 430,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 409,
									"end": 418,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 409,
									"end": 418,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 409,
									"end": 430,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 437,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 420,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 420,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 369,
									"end": 376,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 413,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 414,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 387,
									"end": 414,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 387,
									"end": 414,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 420,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 420,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 426,
									"end": 544,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 544,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 497,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 513,
									"end": 518,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 497,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 497,
									"end": 519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 497,
									"end": 519,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 497,
									"end": 519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 495,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 487,
									"end": 520,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 477,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 477,
									"end": 538,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 534,
									"end": 535,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 532,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 524,
									"end": 536,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 477,
									"end": 538,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 477,
									"end": 538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 426,
									"end": 544,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 426,
									"end": 544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 550,
									"end": 689,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 550,
									"end": 689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 605,
									"end": 610,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 630,
									"end": 643,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 621,
									"end": 643,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 621,
									"end": 643,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 652,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 677,
									"end": 682,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 652,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 652,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 652,
									"end": 683,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 652,
									"end": 683,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 550,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 550,
									"end": 689,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 550,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 550,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 550,
									"end": 689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 695,
									"end": 1042,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 695,
									"end": 1042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 763,
									"end": 769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 809,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 791,
									"end": 798,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 787,
									"end": 810,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 783,
									"end": 815,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 780,
									"end": 899,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 780,
									"end": 899,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 780,
									"end": 899,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 818,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 818,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 818,
									"end": 897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 818,
									"end": 897,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 818,
									"end": 897,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 780,
									"end": 899,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 780,
									"end": 899,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 938,
									"end": 939,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 963,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1017,
									"end": 1024,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1008,
									"end": 1014,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1006,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 993,
									"end": 1015,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 963,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 963,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 963,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 963,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 953,
									"end": 1025,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 953,
									"end": 1025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 909,
									"end": 1035,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 695,
									"end": 1042,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 695,
									"end": 1042,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 695,
									"end": 1042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 695,
									"end": 1042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 695,
									"end": 1042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1147,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1048,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1139,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1128,
									"end": 1140,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1140,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1140,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1147,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1147,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1153,
									"end": 1333,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1153,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1201,
									"end": 1278,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1198,
									"end": 1199,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1279,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1302,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1295,
									"end": 1296,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1288,
									"end": 1303,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1326,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1319,
									"end": 1320,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1312,
									"end": 1327,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1339,
									"end": 1519,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1339,
									"end": 1519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1464,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1384,
									"end": 1385,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1377,
									"end": 1465,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1488,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1481,
									"end": 1482,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1474,
									"end": 1489,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1512,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 1506,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1513,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1845,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1525,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1575,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 1607,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1600,
									"end": 1604,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1608,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1608,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1653,
									"end": 1654,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1647,
									"end": 1651,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1692,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1664,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1664,
									"end": 1745,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1735,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1735,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1664,
									"end": 1745,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1664,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1792,
									"end": 1794,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1784,
									"end": 1790,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1795,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1758,
									"end": 1796,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1755,
									"end": 1839,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1811,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1811,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1811,
									"end": 1829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1811,
									"end": 1829,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1811,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1839,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1755,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1845,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1845,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1845,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1845,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1851,
									"end": 1992,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1851,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1904,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1923,
									"end": 1926,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 1926,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 1926,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1949,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 1944,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1936,
									"end": 1950,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 1984,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1977,
									"end": 1978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1967,
									"end": 1985,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1959,
									"end": 1985,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1959,
									"end": 1985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1851,
									"end": 1992,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1851,
									"end": 1992,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1851,
									"end": 1992,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1851,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2091,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1998,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2084,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2077,
									"end": 2079,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2070,
									"end": 2075,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2080,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2062,
									"end": 2085,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2085,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2091,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2091,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1998,
									"end": 2091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2204,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2097,
									"end": 2204,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2149,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2191,
									"end": 2196,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2185,
									"end": 2189,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2197,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2197,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2197,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2204,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2204,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2204,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2204,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2279,
									"end": 2285,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2329,
									"end": 2330,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2317,
									"end": 2327,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2313,
									"end": 2331,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2352,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2382,
									"end": 2448,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2380,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2352,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2352,
									"end": 2449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2352,
									"end": 2449,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2352,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2500,
									"end": 2508,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2489,
									"end": 2498,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2470,
									"end": 2509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2509,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2470,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2458,
									"end": 2509,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2458,
									"end": 2509,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2546,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2538,
									"end": 2547,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2531,
									"end": 2536,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2548,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2518,
									"end": 2548,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2518,
									"end": 2548,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2591,
									"end": 2595,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2581,
									"end": 2589,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2575,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2557,
									"end": 2597,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2557,
									"end": 2597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2286,
									"end": 2603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2286,
									"end": 2603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2609,
									"end": 2686,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2609,
									"end": 2686,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2646,
									"end": 2653,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2675,
									"end": 2680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2664,
									"end": 2680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2664,
									"end": 2680,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2609,
									"end": 2686,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2609,
									"end": 2686,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2609,
									"end": 2686,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2609,
									"end": 2686,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2752,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2692,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 2723,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2741,
									"end": 2746,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2734,
									"end": 2746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2734,
									"end": 2746,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2752,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2752,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 2752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2758,
									"end": 2900,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2758,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2817,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2894,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2859,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2868,
									"end": 2892,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2886,
									"end": 2891,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2868,
									"end": 2892,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2868,
									"end": 2892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2868,
									"end": 2892,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2868,
									"end": 2892,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2859,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2859,
									"end": 2893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2859,
									"end": 2893,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2859,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2894,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2841,
									"end": 2894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2894,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2841,
									"end": 2894,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2828,
									"end": 2894,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2828,
									"end": 2894,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2758,
									"end": 2900,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2758,
									"end": 2900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2758,
									"end": 2900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2758,
									"end": 2900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2981,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2906,
									"end": 2981,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2949,
									"end": 2952,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2970,
									"end": 2975,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2963,
									"end": 2975,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2963,
									"end": 2975,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2981,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2981,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2981,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3256,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2987,
									"end": 3256,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3097,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3128,
									"end": 3135,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3097,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3097,
									"end": 3136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3097,
									"end": 3136,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3097,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3158,
									"end": 3249,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3207,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3231,
									"end": 3247,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3207,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3207,
									"end": 3248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3207,
									"end": 3248,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3207,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3205,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3196,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3186,
									"end": 3197,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3158,
									"end": 3249,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3158,
									"end": 3249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3158,
									"end": 3249,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3158,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3152,
									"end": 3156,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3145,
									"end": 3250,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2987,
									"end": 3256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3335,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3262,
									"end": 3335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3262,
									"end": 3335,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3341,
									"end": 3530,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3341,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3418,
									"end": 3450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3418,
									"end": 3450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3418,
									"end": 3450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3418,
									"end": 3450,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3418,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3459,
									"end": 3524,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3517,
									"end": 3523,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3507,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3459,
									"end": 3524,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3459,
									"end": 3524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3459,
									"end": 3524,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3459,
									"end": 3524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3341,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3341,
									"end": 3530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3341,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3722,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3536,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3613,
									"end": 3616,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3603,
									"end": 3617,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3704,
									"end": 3705,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3697,
									"end": 3702,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3667,
									"end": 3706,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3667,
									"end": 3706,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3640,
									"end": 3641,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3633,
									"end": 3638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3629,
									"end": 3642,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3620,
									"end": 3642,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3620,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3596,
									"end": 3716,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 4271,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3728,
									"end": 4271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3829,
									"end": 3831,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3824,
									"end": 3827,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3821,
									"end": 3832,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3818,
									"end": 4264,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3818,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3818,
									"end": 4264,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3863,
									"end": 3901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3895,
									"end": 3900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3863,
									"end": 3901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3863,
									"end": 3901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3863,
									"end": 3901,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3863,
									"end": 3901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3947,
									"end": 3976,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3965,
									"end": 3975,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3947,
									"end": 3976,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3947,
									"end": 3976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3947,
									"end": 3976,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3947,
									"end": 3976,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3945,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3933,
									"end": 3977,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4130,
									"end": 4132,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4128,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4161,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4112,
									"end": 4161,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4151,
									"end": 4159,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4136,
									"end": 4159,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4136,
									"end": 4159,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4161,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4112,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4174,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4230,
									"end": 4252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 4230,
									"end": 4252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4252,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4230,
									"end": 4252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4228,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4216,
									"end": 4253,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4174,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4174,
									"end": 4254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4174,
									"end": 4254,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4174,
									"end": 4254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 4264,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 4264,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3818,
									"end": 4264,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3818,
									"end": 4264,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 4271,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 4271,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 4271,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3728,
									"end": 4271,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4277,
									"end": 4394,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4277,
									"end": 4394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4339,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4381,
									"end": 4386,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4375,
									"end": 4379,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4387,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4350,
									"end": 4387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4350,
									"end": 4387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4277,
									"end": 4394,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4277,
									"end": 4394,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4277,
									"end": 4394,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4277,
									"end": 4394,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4277,
									"end": 4394,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4569,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4400,
									"end": 4569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4450,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4477,
									"end": 4528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4525,
									"end": 4526,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4521,
									"end": 4527,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 4518,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4506,
									"end": 4519,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4528,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4477,
									"end": 4528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4477,
									"end": 4528,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4477,
									"end": 4528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4473,
									"end": 4529,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4558,
									"end": 4562,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4552,
									"end": 4556,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4548,
									"end": 4563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4569,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4569,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4574,
									"end": 4869,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4574,
									"end": 4869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4654,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4796,
									"end": 4825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4821,
									"end": 4824,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4819,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4796,
									"end": 4825,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4796,
									"end": 4825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4796,
									"end": 4825,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4796,
									"end": 4825,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4788,
									"end": 4825,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4788,
									"end": 4825,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4858,
									"end": 4861,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4855,
									"end": 4856,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4851,
									"end": 4862,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4845,
									"end": 4849,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4842,
									"end": 4863,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4834,
									"end": 4863,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4834,
									"end": 4863,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4574,
									"end": 4869,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4574,
									"end": 4869,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4574,
									"end": 4869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4574,
									"end": 4869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4574,
									"end": 4869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4874,
									"end": 6269,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4874,
									"end": 6269,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4991,
									"end": 5028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 5024,
									"end": 5027,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4991,
									"end": 5028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 4991,
									"end": 5028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4991,
									"end": 5028,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4991,
									"end": 5028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5111,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5085,
									"end": 5091,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5082,
									"end": 5112,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5135,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5079,
									"end": 5135,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5115,
									"end": 5133,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5115,
									"end": 5133,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 5115,
									"end": 5133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5115,
									"end": 5133,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5115,
									"end": 5133,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5135,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 5079,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5159,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5191,
									"end": 5195,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5196,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5159,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 5159,
									"end": 5197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5159,
									"end": 5197,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5159,
									"end": 5197,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5244,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5304,
									"end": 5310,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 5302,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5290,
									"end": 5294,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5244,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5244,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5244,
									"end": 5311,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5244,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5339,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5362,
									"end": 5366,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5349,
									"end": 5366,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5349,
									"end": 5366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5394,
									"end": 5396,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5386,
									"end": 5392,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5383,
									"end": 5397,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5411,
									"end": 5412,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5406,
									"end": 6024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5406,
									"end": 6024,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5406,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5406,
									"end": 6024,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6068,
									"end": 6069,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6085,
									"end": 6091,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6159,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 6082,
									"end": 6159,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6134,
									"end": 6143,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6132,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6125,
									"end": 6144,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6119,
									"end": 6145,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6110,
									"end": 6145,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6110,
									"end": 6145,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6159,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 6082,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6185,
									"end": 6252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 6245,
									"end": 6251,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6238,
									"end": 6243,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6185,
									"end": 6252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6185,
									"end": 6252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6185,
									"end": 6252,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 6185,
									"end": 6252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6183,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6172,
									"end": 6253,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6041,
									"end": 6263,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5376,
									"end": 6263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5376,
									"end": 6263,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5406,
									"end": 6024,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5406,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5458,
									"end": 5462,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5454,
									"end": 5463,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5446,
									"end": 5452,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5442,
									"end": 5464,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5492,
									"end": 5529,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5524,
									"end": 5528,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5492,
									"end": 5529,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 5492,
									"end": 5529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5492,
									"end": 5529,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5492,
									"end": 5529,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5551,
									"end": 5552,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5579,
									"end": 5586,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5576,
									"end": 5577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5573,
									"end": 5587,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5658,
									"end": 5667,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5656,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5649,
									"end": 5668,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5643,
									"end": 5669,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5635,
									"end": 5641,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5628,
									"end": 5670,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5709,
									"end": 5710,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5701,
									"end": 5707,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5711,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5687,
									"end": 5711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5687,
									"end": 5711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5756,
									"end": 5758,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5745,
									"end": 5754,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5741,
									"end": 5759,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5728,
									"end": 5759,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5728,
									"end": 5759,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5602,
									"end": 5606,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5599,
									"end": 5600,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5595,
									"end": 5607,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5590,
									"end": 5607,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5590,
									"end": 5607,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5565,
									"end": 5773,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5801,
									"end": 5807,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5792,
									"end": 5799,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5789,
									"end": 5808,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5965,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5965,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5786,
									"end": 5965,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5859,
									"end": 5868,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5854,
									"end": 5857,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5850,
									"end": 5869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5844,
									"end": 5870,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5902,
									"end": 5950,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5944,
									"end": 5948,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5936,
									"end": 5942,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5932,
									"end": 5949,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5921,
									"end": 5930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5902,
									"end": 5950,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5902,
									"end": 5950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5902,
									"end": 5950,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5902,
									"end": 5950,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5894,
									"end": 5900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5951,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5809,
									"end": 5965,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5786,
									"end": 5965,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5786,
									"end": 5965,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6011,
									"end": 6012,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6007,
									"end": 6008,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5999,
									"end": 6005,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5995,
									"end": 6009,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5991,
									"end": 6013,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5985,
									"end": 5989,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6014,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5413,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5413,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5413,
									"end": 6024,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5376,
									"end": 6263,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5376,
									"end": 6263,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5376,
									"end": 6263,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 6269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 6269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 6269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4874,
									"end": 6269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4874,
									"end": 6269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4874,
									"end": 6269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 284,
									"end": 543,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 284,
									"end": 543,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 543,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4c47ad6b0c3adf24aeeb5f36319439600ba87af5f71395ad4def70751dcc4e964736f6c63430008140033",
									".code": [
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 284,
											"end": 543,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 443,
											"end": 541,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 443,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 443,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 541,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 443,
											"end": 541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 525,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 518,
											"end": 534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 443,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6267,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6504,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6585,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6667,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6896,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SecuritizeRedemption.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SecuritizeRedemption.sol\":\"Erc20Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SecuritizeRedemption.sol\":{\"keccak256\":\"0xfd5ea805c4efd2463c611498a43c389a4ad23dadc3169b718355e6d34f4d5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://893b3fafff2a4cb9ab62c85ba0df6e47326a5487e62d41ae3e5d9f4bc22a9fbb\",\"dweb:/ipfs/QmfRC5U3DDuWzn9DZrc8iL8yfFbocxHSkj3eFhQ6Fsisyn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/SecuritizeRedemption.sol:Erc20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/SecuritizeRedemption.sol:Erc20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/SecuritizeRedemption.sol:Erc20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/SecuritizeRedemption.sol:Erc20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/SecuritizeRedemption.sol:Erc20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 801,
								"contract": "contracts/SecuritizeRedemption.sol:Erc20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ILiquidityProvider": {
					"abi": [
						{
							"inputs": [],
							"name": "liquidityToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"liquidityToken()": "43cd8f7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SecuritizeRedemption.sol\":\"ILiquidityProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SecuritizeRedemption.sol\":{\"keccak256\":\"0xfd5ea805c4efd2463c611498a43c389a4ad23dadc3169b718355e6d34f4d5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://893b3fafff2a4cb9ab62c85ba0df6e47326a5487e62d41ae3e5d9f4bc22a9fbb\",\"dweb:/ipfs/QmfRC5U3DDuWzn9DZrc8iL8yfFbocxHSkj3eFhQ6Fsisyn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LiquidityProvider": {
					"abi": [
						{
							"inputs": [],
							"name": "liquidityProvider",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "liquidityProviderAddress",
									"type": "address"
								}
							],
							"name": "updateLiquidityProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SecuritizeRedemption.sol\":545:898  contract LiquidityProvider is ILiquidityProvider {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SecuritizeRedemption.sol\":545:898  contract LiquidityProvider is ILiquidityProvider {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x43cd8f7e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5b8bec55\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcd5c645c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SecuritizeRedemption.sol\":799:896  function liquidityToken() external view returns (ERC20) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":600:630  ERC20 public liquidityProvider */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":637:793  function updateLiquidityProvider(address liquidityProviderAddress)... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/SecuritizeRedemption.sol\":799:896  function liquidityToken() external view returns (ERC20) {... */\n    tag_7:\n        /* \"contracts/SecuritizeRedemption.sol\":848:853  ERC20 */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":872:889  liquidityProvider */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":865:889  return liquidityProvider */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":799:896  function liquidityToken() external view returns (ERC20) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":600:630  ERC20 public liquidityProvider */\n    tag_11:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":637:793  function updateLiquidityProvider(address liquidityProviderAddress)... */\n    tag_16:\n        /* \"contracts/SecuritizeRedemption.sol\":761:785  liquidityProviderAddress */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":735:752  liquidityProvider */\n      0x00\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":735:786  liquidityProvider = ERC20(liquidityProviderAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":637:793  function updateLiquidityProvider(address liquidityProviderAddress)... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_19:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_20:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_21:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_35\n        /* \"#utility.yul\":306:340   */\n      tag_36\n        /* \"#utility.yul\":315:339   */\n      tag_37\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_19\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":306:340   */\n      tag_20\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":288:341   */\n      tag_19\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_22:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_39\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_21\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:624   */\n    tag_23:\n        /* \"#utility.yul\":548:557   */\n      0x00\n        /* \"#utility.yul\":581:618   */\n      tag_41\n        /* \"#utility.yul\":612:617   */\n      dup3\n        /* \"#utility.yul\":581:618   */\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":568:618   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:787   */\n    tag_24:\n        /* \"#utility.yul\":730:780   */\n      tag_43\n        /* \"#utility.yul\":774:779   */\n      dup2\n        /* \"#utility.yul\":730:780   */\n      tag_23\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":725:728   */\n      dup3\n        /* \"#utility.yul\":718:781   */\n      mstore\n        /* \"#utility.yul\":630:787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1041   */\n    tag_9:\n        /* \"#utility.yul\":899:903   */\n      0x00\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup3\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:940   */\n      swap1\n      pop\n        /* \"#utility.yul\":950:1034   */\n      tag_45\n        /* \"#utility.yul\":1031:1032   */\n      0x00\n        /* \"#utility.yul\":1020:1029   */\n      dup4\n        /* \"#utility.yul\":1016:1033   */\n      add\n        /* \"#utility.yul\":1007:1013   */\n      dup5\n        /* \"#utility.yul\":950:1034   */\n      tag_24\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":793:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1245   */\n    tag_26:\n        /* \"#utility.yul\":1237:1238   */\n      0x00\n        /* \"#utility.yul\":1234:1235   */\n      dup1\n        /* \"#utility.yul\":1227:1239   */\n      revert\n        /* \"#utility.yul\":1374:1470   */\n    tag_28:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1440:1464   */\n      tag_50\n        /* \"#utility.yul\":1458:1463   */\n      dup3\n        /* \"#utility.yul\":1440:1464   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1429:1464   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1598   */\n    tag_29:\n        /* \"#utility.yul\":1549:1573   */\n      tag_52\n        /* \"#utility.yul\":1567:1572   */\n      dup2\n        /* \"#utility.yul\":1549:1573   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1542:1547   */\n      dup2\n        /* \"#utility.yul\":1539:1574   */\n      eq\n        /* \"#utility.yul\":1529:1592   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1588:1589   */\n      0x00\n        /* \"#utility.yul\":1585:1586   */\n      dup1\n        /* \"#utility.yul\":1578:1590   */\n      revert\n        /* \"#utility.yul\":1529:1592   */\n    tag_53:\n        /* \"#utility.yul\":1476:1598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:1743   */\n    tag_30:\n        /* \"#utility.yul\":1650:1655   */\n      0x00\n        /* \"#utility.yul\":1688:1694   */\n      dup2\n        /* \"#utility.yul\":1675:1695   */\n      calldataload\n        /* \"#utility.yul\":1666:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1704:1737   */\n      tag_55\n        /* \"#utility.yul\":1731:1736   */\n      dup2\n        /* \"#utility.yul\":1704:1737   */\n      tag_29\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1604:1743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1749:2078   */\n    tag_15:\n        /* \"#utility.yul\":1808:1814   */\n      0x00\n        /* \"#utility.yul\":1857:1859   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1832:1855   */\n      sub\n        /* \"#utility.yul\":1828:1860   */\n      slt\n        /* \"#utility.yul\":1825:1944   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1863:1942   */\n      tag_58\n      tag_26\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1825:1944   */\n    tag_57:\n        /* \"#utility.yul\":1983:1984   */\n      0x00\n        /* \"#utility.yul\":2008:2061   */\n      tag_59\n        /* \"#utility.yul\":2053:2060   */\n      dup5\n        /* \"#utility.yul\":2044:2050   */\n      dup3\n        /* \"#utility.yul\":2033:2042   */\n      dup6\n        /* \"#utility.yul\":2029:2051   */\n      add\n        /* \"#utility.yul\":2008:2061   */\n      tag_30\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1998:2061   */\n      swap2\n      pop\n        /* \"#utility.yul\":1954:2071   */\n      pop\n        /* \"#utility.yul\":1749:2078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb03a661de19a746cfec931ab6389555e4f6ddd8840f70b6c211898806291e8964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061025a8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806343cd8f7e146100435780635b8bec5514610061578063cd5c645c1461007f575b5f80fd5b61004b61009b565b60405161005891906101a1565b60405180910390f35b6100696100c2565b60405161007691906101a1565b60405180910390f35b610099600480360381019061009491906101f9565b6100e5565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61016961016461015f84610127565b610146565b610127565b9050919050565b5f61017a8261014f565b9050919050565b5f61018b82610170565b9050919050565b61019b81610181565b82525050565b5f6020820190506101b45f830184610192565b92915050565b5f80fd5b5f6101c882610127565b9050919050565b6101d8816101be565b81146101e2575f80fd5b50565b5f813590506101f3816101cf565b92915050565b5f6020828403121561020e5761020d6101ba565b5b5f61021b848285016101e5565b9150509291505056fea2646970667358221220eb03a661de19a746cfec931ab6389555e4f6ddd8840f70b6c211898806291e8964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25A DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43CD8F7E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x169 PUSH2 0x164 PUSH2 0x15F DUP5 PUSH2 0x127 JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17A DUP3 PUSH2 0x14F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B DUP3 PUSH2 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B DUP2 PUSH2 0x181 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C8 DUP3 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP2 EQ PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3 DUP2 PUSH2 0x1CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E JUMPI PUSH2 0x20D PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B DUP5 DUP3 DUP6 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SUB 0xA6 PUSH2 0xDE19 0xA7 CHAINID 0xCF 0xEC SWAP4 BYTE 0xB6 CODESIZE SWAP6 SSTORE 0xE4 0xF6 0xDD 0xD8 DUP5 0xF PUSH17 0xB6C211898806291E8964736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "545:353:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@liquidityProvider_830": {
									"entryPoint": 194,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityToken_851": {
									"entryPoint": 155,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@updateLiquidityProvider_842": {
									"entryPoint": 229,
									"id": 842,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2081:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "558:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "568:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "612:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "581:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "568:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "538:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "548:9:6",
														"type": ""
													}
												],
												"src": "485:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "708:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "725:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "730:43:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "718:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "696:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "703:3:6",
														"type": ""
													}
												],
												"src": "630:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "904:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "914:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "914:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1031:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "950:56:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:84:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "876:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "888:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "899:4:6",
														"type": ""
													}
												],
												"src": "793:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1087:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1097:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1113:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1080:6:6",
														"type": ""
													}
												],
												"src": "1047:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1237:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1227:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1128:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1350:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1251:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1419:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1429:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1458:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1440:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1401:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1411:7:6",
														"type": ""
													}
												],
												"src": "1374:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1576:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1585:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1588:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1578:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1578:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1578:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1542:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1567:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1549:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1549:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1539:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:43:6"
															},
															"nodeType": "YulIf",
															"src": "1529:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1512:5:6",
														"type": ""
													}
												],
												"src": "1476:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1666:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1675:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1666:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1731:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1704:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1704:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1634:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1642:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1650:5:6",
														"type": ""
													}
												],
												"src": "1604:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1861:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1863:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1863:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1863:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1845:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1828:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:32:6"
															},
															"nodeType": "YulIf",
															"src": "1825:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1954:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1969:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1973:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1998:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2033:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2044:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2029:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2029:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2053:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2008:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2008:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1998:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1785:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1796:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1808:6:6",
														"type": ""
													}
												],
												"src": "1749:329:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806343cd8f7e146100435780635b8bec5514610061578063cd5c645c1461007f575b5f80fd5b61004b61009b565b60405161005891906101a1565b60405180910390f35b6100696100c2565b60405161007691906101a1565b60405180910390f35b610099600480360381019061009491906101f9565b6100e5565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61016961016461015f84610127565b610146565b610127565b9050919050565b5f61017a8261014f565b9050919050565b5f61018b82610170565b9050919050565b61019b81610181565b82525050565b5f6020820190506101b45f830184610192565b92915050565b5f80fd5b5f6101c882610127565b9050919050565b6101d8816101be565b81146101e2575f80fd5b50565b5f813590506101f3816101cf565b92915050565b5f6020828403121561020e5761020d6101ba565b5b5f61021b848285016101e5565b9150509291505056fea2646970667358221220eb03a661de19a746cfec931ab6389555e4f6ddd8840f70b6c211898806291e8964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43CD8F7E EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x169 PUSH2 0x164 PUSH2 0x15F DUP5 PUSH2 0x127 JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17A DUP3 PUSH2 0x14F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B DUP3 PUSH2 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B DUP2 PUSH2 0x181 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C8 DUP3 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP2 EQ PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3 DUP2 PUSH2 0x1CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E JUMPI PUSH2 0x20D PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21B DUP5 DUP3 DUP6 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SUB 0xA6 PUSH2 0xDE19 0xA7 CHAINID 0xCF 0xEC SWAP4 BYTE 0xB6 CODESIZE SWAP6 SSTORE 0xE4 0xF6 0xDD 0xD8 DUP5 0xF PUSH17 0xB6C211898806291E8964736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "545:353:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;637:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;799:97;848:5;872:17;;;;;;;;;;;865:24;;799:97;:::o;600:30::-;;;;;;;;;;;;:::o;637:156::-;761:24;735:17;;:51;;;;;;;;;;;;;;;;;;637:156;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1128:117::-;1237:1;1234;1227:12;1374:96;1411:7;1440:24;1458:5;1440:24;:::i;:::-;1429:35;;1374:96;;;:::o;1476:122::-;1549:24;1567:5;1549:24;:::i;:::-;1542:5;1539:35;1529:63;;1588:1;1585;1578:12;1529:63;1476:122;:::o;1604:139::-;1650:5;1688:6;1675:20;1666:29;;1704:33;1731:5;1704:33;:::i;:::-;1604:139;;;;:::o;1749:329::-;1808:6;1857:2;1845:9;1836:7;1832:23;1828:32;1825:119;;;1863:79;;:::i;:::-;1825:119;1983:1;2008:53;2053:7;2044:6;2033:9;2029:22;2008:53;:::i;:::-;1998:63;;1954:117;1749:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "120400",
								"executionCost": "163",
								"totalCost": "120563"
							},
							"external": {
								"liquidityProvider()": "infinite",
								"liquidityToken()": "infinite",
								"updateLiquidityProvider(address)": "24737"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 545,
									"end": 898,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 898,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb03a661de19a746cfec931ab6389555e4f6ddd8840f70b6c211898806291e8964736f6c63430008140033",
									".code": [
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "43CD8F7E"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "5B8BEC55"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "CD5C645C"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 545,
											"end": 898,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 799,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 799,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 637,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 799,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 848,
											"end": 853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 872,
											"end": 889,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 872,
											"end": 889,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 865,
											"end": 889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 637,
											"end": 793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 761,
											"end": 785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 735,
											"end": 786,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 735,
											"end": 786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 485,
											"end": 624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 548,
											"end": 557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 581,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 618,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 568,
											"end": 618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 630,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 730,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 730,
											"end": 780,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 730,
											"end": 780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 718,
											"end": 781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 914,
											"end": 940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 914,
											"end": 940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 950,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1128,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1440,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1476,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1567,
											"end": 1572,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1549,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1573,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1549,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1574,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1529,
											"end": 1592,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1529,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1604,
											"end": 1743,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1604,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1695,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1704,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1704,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1604,
											"end": 1743,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1604,
											"end": 1743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1604,
											"end": 1743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1604,
											"end": 1743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1604,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 2078,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1749,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1860,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1944,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1825,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1863,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1863,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1863,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1944,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1825,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2042,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2008,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2061,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2008,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 2078,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 2078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 2078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 2078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 2078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SecuritizeRedemption.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"liquidityProvider()": "5b8bec55",
							"liquidityToken()": "43cd8f7e",
							"updateLiquidityProvider(address)": "cd5c645c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"liquidityProvider\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityProviderAddress\",\"type\":\"address\"}],\"name\":\"updateLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SecuritizeRedemption.sol\":\"LiquidityProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SecuritizeRedemption.sol\":{\"keccak256\":\"0xfd5ea805c4efd2463c611498a43c389a4ad23dadc3169b718355e6d34f4d5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://893b3fafff2a4cb9ab62c85ba0df6e47326a5487e62d41ae3e5d9f4bc22a9fbb\",\"dweb:/ipfs/QmfRC5U3DDuWzn9DZrc8iL8yfFbocxHSkj3eFhQ6Fsisyn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 830,
								"contract": "contracts/SecuritizeRedemption.sol:LiquidityProvider",
								"label": "liquidityProvider",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20)651"
							}
						],
						"types": {
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SecuritizeRedemption": {
					"abi": [
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateOrig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateWithCachedDecimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateWithScalingFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityProvider",
							"outputs": [
								{
									"internalType": "contract ILiquidityProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_asset",
									"type": "address"
								}
							],
							"name": "updateAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								}
							],
							"name": "updateLiquidityProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SecuritizeRedemption.sol\":900:4186  contract SecuritizeRedemption {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SecuritizeRedemption.sol\":900:4186  contract SecuritizeRedemption {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83781fa9\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x83781fa9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9b3e9ab8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcd5c645c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf141b52b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x38d52e0f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5b8bec55\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5d0b41f8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SecuritizeRedemption.sol\":985:1003  ERC20 public asset */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":936:979  ILiquidityProvider public liquidityProvider */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":2452:3361  function calculateWithScalingFactor() public view returns (uint256) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":1583:2446  function calculateOrig() public view returns (uint256) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":3380:4184  function calculateWithCachedDecimals() public view returns (uint256) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SecuritizeRedemption.sol\":1081:1474  function updateLiquidityProvider(address _liquidityProvider) external {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/SecuritizeRedemption.sol\":1480:1564  function updateAsset(address _asset) external {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/SecuritizeRedemption.sol\":985:1003  ERC20 public asset */\n    tag_12:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":936:979  ILiquidityProvider public liquidityProvider */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":2452:3361  function calculateWithScalingFactor() public view returns (uint256) {... */\n    tag_20:\n        /* \"contracts/SecuritizeRedemption.sol\":2511:2518  uint256 */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":2530:2545  uint256 _amount */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":2548:2567  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SecuritizeRedemption.sol\":2530:2567  uint256 _amount = 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2577:2589  uint256 rate */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":2592:2599  2000000 */\n      0x1e8480\n        /* \"contracts/SecuritizeRedemption.sol\":2577:2599  uint256 rate = 2000000 */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2610:2639  address liquidityTokenAddress */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":2663:2680  liquidityProvider */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":2663:2695  liquidityProvider.liquidityToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x43cd8f7e\n        /* \"contracts/SecuritizeRedemption.sol\":2663:2697  liquidityProvider.liquidityToken() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/SecuritizeRedemption.sol\":2610:2707  address liquidityTokenAddress = address(... */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2717:2742  uint256 liquidityDecimals */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":2751:2772  liquidityTokenAddress */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":2745:2782  ERC20(liquidityTokenAddress).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/SecuritizeRedemption.sol\":2745:2784  ERC20(liquidityTokenAddress).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"contracts/SecuritizeRedemption.sol\":2717:2784  uint256 liquidityDecimals = ERC20(liquidityTokenAddress).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2795:2816  uint256 assetDecimals */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":2833:2838  asset */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":2819:2849  ERC20(address(asset)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/SecuritizeRedemption.sol\":2819:2851  ERC20(address(asset)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n        /* \"contracts/SecuritizeRedemption.sol\":2795:2851  uint256 assetDecimals = ERC20(address(asset)).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2862:2883  uint256 scalingFactor */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":2917:2930  assetDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":2897:2914  liquidityDecimals */\n      dup4\n        /* \"contracts/SecuritizeRedemption.sol\":2897:2930  liquidityDecimals > assetDecimals */\n      gt\n        /* \"contracts/SecuritizeRedemption.sol\":2893:3093  if (liquidityDecimals > assetDecimals) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"contracts/SecuritizeRedemption.sol\":2987:3000  assetDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":2967:2984  liquidityDecimals */\n      dup4\n        /* \"contracts/SecuritizeRedemption.sol\":2967:3000  liquidityDecimals - assetDecimals */\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/SecuritizeRedemption.sol\":2962:2964  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":2962:3001  10**(liquidityDecimals - assetDecimals) */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/SecuritizeRedemption.sol\":2946:3001  scalingFactor = 10**(liquidityDecimals - assetDecimals) */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":3064:3081  liquidityDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":3060:3062  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3060:3081  10**liquidityDecimals */\n      tag_53\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_53:\n        /* \"contracts/SecuritizeRedemption.sol\":3042:3055  scalingFactor */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":3034:3038  rate */\n      dup7\n        /* \"contracts/SecuritizeRedemption.sol\":3024:3031  _amount */\n      dup9\n        /* \"contracts/SecuritizeRedemption.sol\":3024:3038  _amount * rate */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/SecuritizeRedemption.sol\":3023:3055  (_amount * rate) * scalingFactor */\n      tag_56\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n        /* \"contracts/SecuritizeRedemption.sol\":3022:3082  ((_amount * rate) * scalingFactor) / (10**liquidityDecimals) */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/SecuritizeRedemption.sol\":3015:3082  return ((_amount * rate) * scalingFactor) / (10**liquidityDecimals) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_36)\n        /* \"contracts/SecuritizeRedemption.sol\":2893:3093  if (liquidityDecimals > assetDecimals) {... */\n    tag_48:\n        /* \"contracts/SecuritizeRedemption.sol\":3126:3139  assetDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":3106:3123  liquidityDecimals */\n      dup4\n        /* \"contracts/SecuritizeRedemption.sol\":3106:3139  liquidityDecimals < assetDecimals */\n      lt\n        /* \"contracts/SecuritizeRedemption.sol\":3102:3300  if (liquidityDecimals < assetDecimals) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/SecuritizeRedemption.sol\":3192:3209  liquidityDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":3176:3189  assetDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":3176:3209  assetDecimals - liquidityDecimals */\n      tag_60\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_60:\n        /* \"contracts/SecuritizeRedemption.sol\":3171:3173  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3171:3210  10**(assetDecimals - liquidityDecimals) */\n      tag_61\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_61:\n        /* \"contracts/SecuritizeRedemption.sol\":3155:3210  scalingFactor = 10**(assetDecimals - liquidityDecimals) */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":3271:3288  liquidityDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":3267:3269  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3267:3288  10**liquidityDecimals */\n      tag_62\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_62:\n        /* \"contracts/SecuritizeRedemption.sol\":3250:3263  scalingFactor */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":3242:3246  rate */\n      dup7\n        /* \"contracts/SecuritizeRedemption.sol\":3232:3239  _amount */\n      dup9\n        /* \"contracts/SecuritizeRedemption.sol\":3232:3246  _amount * rate */\n      tag_63\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n        /* \"contracts/SecuritizeRedemption.sol\":3231:3263  (_amount * rate) / scalingFactor */\n      tag_64\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_64:\n        /* \"contracts/SecuritizeRedemption.sol\":3231:3289  (_amount * rate) / scalingFactor / (10**liquidityDecimals) */\n      tag_65\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_65:\n        /* \"contracts/SecuritizeRedemption.sol\":3224:3289  return (_amount * rate) / scalingFactor / (10**liquidityDecimals) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_36)\n        /* \"contracts/SecuritizeRedemption.sol\":3102:3300  if (liquidityDecimals < assetDecimals) {... */\n    tag_59:\n        /* \"contracts/SecuritizeRedemption.sol\":3340:3353  assetDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":3336:3338  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3336:3353  10**assetDecimals */\n      tag_66\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_66:\n        /* \"contracts/SecuritizeRedemption.sol\":3327:3331  rate */\n      dup6\n        /* \"contracts/SecuritizeRedemption.sol\":3317:3324  _amount */\n      dup8\n        /* \"contracts/SecuritizeRedemption.sol\":3317:3331  _amount * rate */\n      tag_67\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"contracts/SecuritizeRedemption.sol\":3316:3354  (_amount * rate) / (10**assetDecimals) */\n      tag_68\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_68:\n        /* \"contracts/SecuritizeRedemption.sol\":3309:3354  return (_amount * rate) / (10**assetDecimals) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2452:3361  function calculateWithScalingFactor() public view returns (uint256) {... */\n    tag_36:\n      swap1\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":1583:2446  function calculateOrig() public view returns (uint256) {... */\n    tag_24:\n        /* \"contracts/SecuritizeRedemption.sol\":1629:1636  uint256 */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1648:1663  uint256 _amount */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":1666:1685  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SecuritizeRedemption.sol\":1648:1685  uint256 _amount = 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1695:1707  uint256 rate */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1710:1717  2000000 */\n      0x1e8480\n        /* \"contracts/SecuritizeRedemption.sol\":1695:1717  uint256 rate = 2000000 */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1728:1757  address liquidityTokenAddress */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1781:1798  liquidityProvider */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":1781:1813  liquidityProvider.liquidityToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x43cd8f7e\n        /* \"contracts/SecuritizeRedemption.sol\":1781:1815  liquidityProvider.liquidityToken() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_72:\n        /* \"contracts/SecuritizeRedemption.sol\":1728:1825  address liquidityTokenAddress = address(... */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1835:1860  uint256 liquidityDecimals */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1869:1890  liquidityTokenAddress */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":1863:1900  ERC20(liquidityTokenAddress).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/SecuritizeRedemption.sol\":1863:1902  ERC20(liquidityTokenAddress).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_75:\n        /* \"contracts/SecuritizeRedemption.sol\":1835:1902  uint256 liquidityDecimals = ERC20(liquidityTokenAddress).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1913:1934  uint256 assetDecimals */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1951:1956  asset */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":1937:1967  ERC20(address(asset)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/SecuritizeRedemption.sol\":1937:1969  ERC20(address(asset)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_78:\n        /* \"contracts/SecuritizeRedemption.sol\":1913:1969  uint256 assetDecimals = ERC20(address(asset)).decimals() */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":2004:2017  assetDecimals */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":1984:2001  liquidityDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":1984:2017  liquidityDecimals > assetDecimals */\n      gt\n        /* \"contracts/SecuritizeRedemption.sol\":1980:2171  if (liquidityDecimals > assetDecimals) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/SecuritizeRedemption.sol\":2142:2159  liquidityDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":2138:2140  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":2138:2159  10**liquidityDecimals */\n      tag_80\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_80:\n        /* \"contracts/SecuritizeRedemption.sol\":2102:2115  assetDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":2082:2099  liquidityDecimals */\n      dup4\n        /* \"contracts/SecuritizeRedemption.sol\":2082:2115  liquidityDecimals - assetDecimals */\n      tag_81\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_81:\n        /* \"contracts/SecuritizeRedemption.sol\":2077:2079  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":2077:2116  10**(liquidityDecimals - assetDecimals) */\n      tag_82\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_82:\n        /* \"contracts/SecuritizeRedemption.sol\":2068:2072  rate */\n      dup6\n        /* \"contracts/SecuritizeRedemption.sol\":2058:2065  _amount */\n      dup8\n        /* \"contracts/SecuritizeRedemption.sol\":2058:2072  _amount * rate */\n      tag_83\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_83:\n        /* \"contracts/SecuritizeRedemption.sol\":2057:2117  (_amount * rate) * (10**(liquidityDecimals - assetDecimals)) */\n      tag_84\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_84:\n        /* \"contracts/SecuritizeRedemption.sol\":2056:2160  ((_amount * rate) * (10**(liquidityDecimals - assetDecimals))) /... */\n      tag_85\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_85:\n        /* \"contracts/SecuritizeRedemption.sol\":2033:2160  return... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_69)\n        /* \"contracts/SecuritizeRedemption.sol\":1980:2171  if (liquidityDecimals > assetDecimals) {... */\n    tag_79:\n        /* \"contracts/SecuritizeRedemption.sol\":2204:2217  assetDecimals */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":2184:2201  liquidityDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":2184:2217  liquidityDecimals < assetDecimals */\n      lt\n        /* \"contracts/SecuritizeRedemption.sol\":2180:2385  if (liquidityDecimals < assetDecimals) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/SecuritizeRedemption.sol\":2356:2373  liquidityDecimals */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":2352:2354  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":2352:2373  10**liquidityDecimals */\n      tag_87\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_87:\n        /* \"contracts/SecuritizeRedemption.sol\":2313:2330  liquidityDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":2297:2310  assetDecimals */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":2297:2330  assetDecimals - liquidityDecimals */\n      tag_88\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_88:\n        /* \"contracts/SecuritizeRedemption.sol\":2292:2294  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":2292:2331  10**(assetDecimals - liquidityDecimals) */\n      tag_89\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_89:\n        /* \"contracts/SecuritizeRedemption.sol\":2267:2271  rate */\n      dup6\n        /* \"contracts/SecuritizeRedemption.sol\":2257:2264  _amount */\n      dup8\n        /* \"contracts/SecuritizeRedemption.sol\":2257:2271  _amount * rate */\n      tag_90\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_90:\n        /* \"contracts/SecuritizeRedemption.sol\":2256:2332  (_amount * rate) /... */\n      tag_91\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_91:\n        /* \"contracts/SecuritizeRedemption.sol\":2256:2374  (_amount * rate) /... */\n      tag_92\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_92:\n        /* \"contracts/SecuritizeRedemption.sol\":2233:2374  return... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_69)\n        /* \"contracts/SecuritizeRedemption.sol\":2180:2385  if (liquidityDecimals < assetDecimals) {... */\n    tag_86:\n        /* \"contracts/SecuritizeRedemption.sol\":2425:2438  assetDecimals */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":2421:2423  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":2421:2438  10**assetDecimals */\n      tag_93\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_93:\n        /* \"contracts/SecuritizeRedemption.sol\":2412:2416  rate */\n      dup5\n        /* \"contracts/SecuritizeRedemption.sol\":2402:2409  _amount */\n      dup7\n        /* \"contracts/SecuritizeRedemption.sol\":2402:2416  _amount * rate */\n      tag_94\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_94:\n        /* \"contracts/SecuritizeRedemption.sol\":2401:2439  (_amount * rate) / (10**assetDecimals) */\n      tag_95\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_95:\n        /* \"contracts/SecuritizeRedemption.sol\":2394:2439  return (_amount * rate) / (10**assetDecimals) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1583:2446  function calculateOrig() public view returns (uint256) {... */\n    tag_69:\n      swap1\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":3380:4184  function calculateWithCachedDecimals() public view returns (uint256) {... */\n    tag_27:\n        /* \"contracts/SecuritizeRedemption.sol\":3440:3447  uint256 */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":3459:3474  uint256 _amount */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":3477:3496  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/SecuritizeRedemption.sol\":3459:3496  uint256 _amount = 1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":3506:3518  uint256 rate */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":3521:3528  2000000 */\n      0x1e8480\n        /* \"contracts/SecuritizeRedemption.sol\":3506:3528  uint256 rate = 2000000 */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":3539:3560  uint256 scalingFactor */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":3600:3619  cachedAssetDecimals */\n      sload(0x03)\n        /* \"contracts/SecuritizeRedemption.sol\":3574:3597  cachedLiquidityDecimals */\n      sload(0x02)\n        /* \"contracts/SecuritizeRedemption.sol\":3574:3619  cachedLiquidityDecimals > cachedAssetDecimals */\n      gt\n        /* \"contracts/SecuritizeRedemption.sol\":3570:3832  if (cachedLiquidityDecimals > cachedAssetDecimals) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"contracts/SecuritizeRedemption.sol\":3682:3701  cachedAssetDecimals */\n      sload(0x03)\n        /* \"contracts/SecuritizeRedemption.sol\":3656:3679  cachedLiquidityDecimals */\n      sload(0x02)\n        /* \"contracts/SecuritizeRedemption.sol\":3656:3701  cachedLiquidityDecimals - cachedAssetDecimals */\n      tag_98\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_98:\n        /* \"contracts/SecuritizeRedemption.sol\":3651:3653  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3651:3702  10**(cachedLiquidityDecimals - cachedAssetDecimals) */\n      tag_99\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_99:\n        /* \"contracts/SecuritizeRedemption.sol\":3635:3702  scalingFactor = 10**(cachedLiquidityDecimals - cachedAssetDecimals) */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":3797:3820  cachedLiquidityDecimals */\n      sload(0x02)\n        /* \"contracts/SecuritizeRedemption.sol\":3793:3795  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3793:3820  10**cachedLiquidityDecimals */\n      tag_100\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_100:\n        /* \"contracts/SecuritizeRedemption.sol\":3759:3772  scalingFactor */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":3751:3755  rate */\n      dup4\n        /* \"contracts/SecuritizeRedemption.sol\":3741:3748  _amount */\n      dup6\n        /* \"contracts/SecuritizeRedemption.sol\":3741:3755  _amount * rate */\n      tag_101\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_101:\n        /* \"contracts/SecuritizeRedemption.sol\":3740:3772  (_amount * rate) * scalingFactor */\n      tag_102\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"contracts/SecuritizeRedemption.sol\":3739:3821  ((_amount * rate) * scalingFactor) /... */\n      tag_103\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_103:\n        /* \"contracts/SecuritizeRedemption.sol\":3716:3821  return... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"contracts/SecuritizeRedemption.sol\":3570:3832  if (cachedLiquidityDecimals > cachedAssetDecimals) {... */\n    tag_97:\n        /* \"contracts/SecuritizeRedemption.sol\":3871:3890  cachedAssetDecimals */\n      sload(0x03)\n        /* \"contracts/SecuritizeRedemption.sol\":3845:3868  cachedLiquidityDecimals */\n      sload(0x02)\n        /* \"contracts/SecuritizeRedemption.sol\":3845:3890  cachedLiquidityDecimals < cachedAssetDecimals */\n      lt\n        /* \"contracts/SecuritizeRedemption.sol\":3841:4117  if (cachedLiquidityDecimals < cachedAssetDecimals) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/SecuritizeRedemption.sol\":3949:3972  cachedLiquidityDecimals */\n      sload(0x02)\n        /* \"contracts/SecuritizeRedemption.sol\":3927:3946  cachedAssetDecimals */\n      sload(0x03)\n        /* \"contracts/SecuritizeRedemption.sol\":3927:3972  cachedAssetDecimals - cachedLiquidityDecimals */\n      tag_105\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_105:\n        /* \"contracts/SecuritizeRedemption.sol\":3922:3924  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":3922:3973  10**(cachedAssetDecimals - cachedLiquidityDecimals) */\n      tag_106\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_106:\n        /* \"contracts/SecuritizeRedemption.sol\":3906:3973  scalingFactor = 10**(cachedAssetDecimals - cachedLiquidityDecimals) */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":4082:4105  cachedLiquidityDecimals */\n      sload(0x02)\n        /* \"contracts/SecuritizeRedemption.sol\":4078:4080  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":4078:4105  10**cachedLiquidityDecimals */\n      tag_107\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_107:\n        /* \"contracts/SecuritizeRedemption.sol\":4045:4058  scalingFactor */\n      dup2\n        /* \"contracts/SecuritizeRedemption.sol\":4021:4025  rate */\n      dup4\n        /* \"contracts/SecuritizeRedemption.sol\":4011:4018  _amount */\n      dup6\n        /* \"contracts/SecuritizeRedemption.sol\":4011:4025  _amount * rate */\n      tag_108\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_108:\n        /* \"contracts/SecuritizeRedemption.sol\":4010:4058  (_amount * rate) /... */\n      tag_109\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_109:\n        /* \"contracts/SecuritizeRedemption.sol\":4010:4106  (_amount * rate) /... */\n      tag_110\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_110:\n        /* \"contracts/SecuritizeRedemption.sol\":3987:4106  return... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"contracts/SecuritizeRedemption.sol\":3841:4117  if (cachedLiquidityDecimals < cachedAssetDecimals) {... */\n    tag_104:\n        /* \"contracts/SecuritizeRedemption.sol\":4157:4176  cachedAssetDecimals */\n      sload(0x03)\n        /* \"contracts/SecuritizeRedemption.sol\":4153:4155  10 */\n      0x0a\n        /* \"contracts/SecuritizeRedemption.sol\":4153:4176  10**cachedAssetDecimals */\n      tag_111\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_111:\n        /* \"contracts/SecuritizeRedemption.sol\":4144:4148  rate */\n      dup3\n        /* \"contracts/SecuritizeRedemption.sol\":4134:4141  _amount */\n      dup5\n        /* \"contracts/SecuritizeRedemption.sol\":4134:4148  _amount * rate */\n      tag_112\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_112:\n        /* \"contracts/SecuritizeRedemption.sol\":4133:4177  (_amount * rate) / (10**cachedAssetDecimals) */\n      tag_113\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_113:\n        /* \"contracts/SecuritizeRedemption.sol\":4126:4177  return (_amount * rate) / (10**cachedAssetDecimals) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":3380:4184  function calculateWithCachedDecimals() public view returns (uint256) {... */\n    tag_96:\n      swap1\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":1081:1474  function updateLiquidityProvider(address _liquidityProvider) external {... */\n    tag_32:\n        /* \"contracts/SecuritizeRedemption.sol\":1200:1218  _liquidityProvider */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":1161:1178  liquidityProvider */\n      0x00\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":1161:1219  liquidityProvider = ILiquidityProvider(_liquidityProvider) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1230:1259  address liquidityTokenAddress */\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1283:1300  liquidityProvider */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":1283:1315  liquidityProvider.liquidityToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x43cd8f7e\n        /* \"contracts/SecuritizeRedemption.sol\":1283:1317  liquidityProvider.liquidityToken() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_117:\n        /* \"contracts/SecuritizeRedemption.sol\":1230:1327  address liquidityTokenAddress = address(... */\n      swap1\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1370:1391  liquidityTokenAddress */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":1364:1401  ERC20(liquidityTokenAddress).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/SecuritizeRedemption.sol\":1364:1403  ERC20(liquidityTokenAddress).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_120:\n        /* \"contracts/SecuritizeRedemption.sol\":1338:1403  cachedLiquidityDecimals = ERC20(liquidityTokenAddress).decimals() */\n      0xff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":1338:1361  cachedLiquidityDecimals */\n      0x02\n        /* \"contracts/SecuritizeRedemption.sol\":1338:1403  cachedLiquidityDecimals = ERC20(liquidityTokenAddress).decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1449:1454  asset */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":1435:1465  ERC20(address(asset)).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/SecuritizeRedemption.sol\":1435:1467  ERC20(address(asset)).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_123:\n        /* \"contracts/SecuritizeRedemption.sol\":1413:1467  cachedAssetDecimals = ERC20(address(asset)).decimals() */\n      0xff\n      and\n        /* \"contracts/SecuritizeRedemption.sol\":1413:1432  cachedAssetDecimals */\n      0x03\n        /* \"contracts/SecuritizeRedemption.sol\":1413:1467  cachedAssetDecimals = ERC20(address(asset)).decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1151:1474  {... */\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1081:1474  function updateLiquidityProvider(address _liquidityProvider) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SecuritizeRedemption.sol\":1480:1564  function updateAsset(address _asset) external {... */\n    tag_35:\n        /* \"contracts/SecuritizeRedemption.sol\":1550:1556  _asset */\n      dup1\n        /* \"contracts/SecuritizeRedemption.sol\":1536:1541  asset */\n      0x01\n      0x00\n        /* \"contracts/SecuritizeRedemption.sol\":1536:1557  asset = ERC20(_asset) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SecuritizeRedemption.sol\":1480:1564  function updateAsset(address _asset) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_125:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_126:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_127:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_156\n        /* \"#utility.yul\":306:340   */\n      tag_157\n        /* \"#utility.yul\":315:339   */\n      tag_158\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_125\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":306:340   */\n      tag_126\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":288:341   */\n      tag_125\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_128:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_160\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_127\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:624   */\n    tag_129:\n        /* \"#utility.yul\":548:557   */\n      0x00\n        /* \"#utility.yul\":581:618   */\n      tag_162\n        /* \"#utility.yul\":612:617   */\n      dup3\n        /* \"#utility.yul\":581:618   */\n      tag_128\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":568:618   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:787   */\n    tag_130:\n        /* \"#utility.yul\":730:780   */\n      tag_164\n        /* \"#utility.yul\":774:779   */\n      dup2\n        /* \"#utility.yul\":730:780   */\n      tag_129\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":725:728   */\n      dup3\n        /* \"#utility.yul\":718:781   */\n      mstore\n        /* \"#utility.yul\":630:787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1041   */\n    tag_14:\n        /* \"#utility.yul\":899:903   */\n      0x00\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup3\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:940   */\n      swap1\n      pop\n        /* \"#utility.yul\":950:1034   */\n      tag_166\n        /* \"#utility.yul\":1031:1032   */\n      0x00\n        /* \"#utility.yul\":1020:1029   */\n      dup4\n        /* \"#utility.yul\":1016:1033   */\n      add\n        /* \"#utility.yul\":1007:1013   */\n      dup5\n        /* \"#utility.yul\":950:1034   */\n      tag_130\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":793:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1199   */\n    tag_131:\n        /* \"#utility.yul\":1123:1132   */\n      0x00\n        /* \"#utility.yul\":1156:1193   */\n      tag_168\n        /* \"#utility.yul\":1187:1192   */\n      dup3\n        /* \"#utility.yul\":1156:1193   */\n      tag_128\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1143:1193   */\n      swap1\n      pop\n        /* \"#utility.yul\":1047:1199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1205:1388   */\n    tag_132:\n        /* \"#utility.yul\":1318:1381   */\n      tag_170\n        /* \"#utility.yul\":1375:1380   */\n      dup2\n        /* \"#utility.yul\":1318:1381   */\n      tag_131\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1313:1316   */\n      dup3\n        /* \"#utility.yul\":1306:1382   */\n      mstore\n        /* \"#utility.yul\":1205:1388   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1394:1668   */\n    tag_18:\n        /* \"#utility.yul\":1513:1517   */\n      0x00\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1540:1549   */\n      dup3\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"#utility.yul\":1528:1554   */\n      swap1\n      pop\n        /* \"#utility.yul\":1564:1661   */\n      tag_172\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1647:1656   */\n      dup4\n        /* \"#utility.yul\":1643:1660   */\n      add\n        /* \"#utility.yul\":1634:1640   */\n      dup5\n        /* \"#utility.yul\":1564:1661   */\n      tag_132\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1394:1668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1674:1751   */\n    tag_133:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1740:1745   */\n      dup2\n        /* \"#utility.yul\":1729:1745   */\n      swap1\n      pop\n        /* \"#utility.yul\":1674:1751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:1875   */\n    tag_134:\n        /* \"#utility.yul\":1844:1868   */\n      tag_175\n        /* \"#utility.yul\":1862:1867   */\n      dup2\n        /* \"#utility.yul\":1844:1868   */\n      tag_133\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1839:1842   */\n      dup3\n        /* \"#utility.yul\":1832:1869   */\n      mstore\n        /* \"#utility.yul\":1757:1875   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1881:2103   */\n    tag_22:\n        /* \"#utility.yul\":1974:1978   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2001:2010   */\n      dup3\n        /* \"#utility.yul\":1997:2015   */\n      add\n        /* \"#utility.yul\":1989:2015   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2096   */\n      tag_177\n        /* \"#utility.yul\":2093:2094   */\n      0x00\n        /* \"#utility.yul\":2082:2091   */\n      dup4\n        /* \"#utility.yul\":2078:2095   */\n      add\n        /* \"#utility.yul\":2069:2075   */\n      dup5\n        /* \"#utility.yul\":2025:2096   */\n      tag_134\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1881:2103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2190:2307   */\n    tag_136:\n        /* \"#utility.yul\":2299:2300   */\n      0x00\n        /* \"#utility.yul\":2296:2297   */\n      dup1\n        /* \"#utility.yul\":2289:2301   */\n      revert\n        /* \"#utility.yul\":2436:2532   */\n    tag_138:\n        /* \"#utility.yul\":2473:2480   */\n      0x00\n        /* \"#utility.yul\":2502:2526   */\n      tag_182\n        /* \"#utility.yul\":2520:2525   */\n      dup3\n        /* \"#utility.yul\":2502:2526   */\n      tag_125\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2491:2526   */\n      swap1\n      pop\n        /* \"#utility.yul\":2436:2532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2538:2660   */\n    tag_139:\n        /* \"#utility.yul\":2611:2635   */\n      tag_184\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_138\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2604:2609   */\n      dup2\n        /* \"#utility.yul\":2601:2636   */\n      eq\n        /* \"#utility.yul\":2591:2654   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      dup1\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2591:2654   */\n    tag_185:\n        /* \"#utility.yul\":2538:2660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2666:2805   */\n    tag_140:\n        /* \"#utility.yul\":2712:2717   */\n      0x00\n        /* \"#utility.yul\":2750:2756   */\n      dup2\n        /* \"#utility.yul\":2737:2757   */\n      calldataload\n        /* \"#utility.yul\":2728:2757   */\n      swap1\n      pop\n        /* \"#utility.yul\":2766:2799   */\n      tag_187\n        /* \"#utility.yul\":2793:2798   */\n      dup2\n        /* \"#utility.yul\":2766:2799   */\n      tag_139\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2666:2805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:3140   */\n    tag_31:\n        /* \"#utility.yul\":2870:2876   */\n      0x00\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2907:2916   */\n      dup3\n        /* \"#utility.yul\":2898:2905   */\n      dup5\n        /* \"#utility.yul\":2894:2917   */\n      sub\n        /* \"#utility.yul\":2890:2922   */\n      slt\n        /* \"#utility.yul\":2887:3006   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2925:3004   */\n      tag_190\n      tag_136\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2887:3006   */\n    tag_189:\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3070:3123   */\n      tag_191\n        /* \"#utility.yul\":3115:3122   */\n      dup5\n        /* \"#utility.yul\":3106:3112   */\n      dup3\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3091:3113   */\n      add\n        /* \"#utility.yul\":3070:3123   */\n      tag_140\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3060:3123   */\n      swap2\n      pop\n        /* \"#utility.yul\":3016:3133   */\n      pop\n        /* \"#utility.yul\":2811:3140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3146:3255   */\n    tag_141:\n        /* \"#utility.yul\":3196:3203   */\n      0x00\n        /* \"#utility.yul\":3225:3249   */\n      tag_193\n        /* \"#utility.yul\":3243:3248   */\n      dup3\n        /* \"#utility.yul\":3225:3249   */\n      tag_138\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3214:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3146:3255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3409   */\n    tag_142:\n        /* \"#utility.yul\":3347:3384   */\n      tag_195\n        /* \"#utility.yul\":3378:3383   */\n      dup2\n        /* \"#utility.yul\":3347:3384   */\n      tag_141\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3340:3345   */\n      dup2\n        /* \"#utility.yul\":3337:3385   */\n      eq\n        /* \"#utility.yul\":3327:3403   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":3399:3400   */\n      0x00\n        /* \"#utility.yul\":3396:3397   */\n      dup1\n        /* \"#utility.yul\":3389:3401   */\n      revert\n        /* \"#utility.yul\":3327:3403   */\n    tag_196:\n        /* \"#utility.yul\":3261:3409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3584   */\n    tag_143:\n        /* \"#utility.yul\":3485:3490   */\n      0x00\n        /* \"#utility.yul\":3516:3522   */\n      dup2\n        /* \"#utility.yul\":3510:3523   */\n      mload\n        /* \"#utility.yul\":3501:3523   */\n      swap1\n      pop\n        /* \"#utility.yul\":3532:3578   */\n      tag_198\n        /* \"#utility.yul\":3572:3577   */\n      dup2\n        /* \"#utility.yul\":3532:3578   */\n      tag_142\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3415:3584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3590:3967   */\n    tag_40:\n        /* \"#utility.yul\":3673:3679   */\n      0x00\n        /* \"#utility.yul\":3722:3724   */\n      0x20\n        /* \"#utility.yul\":3710:3719   */\n      dup3\n        /* \"#utility.yul\":3701:3708   */\n      dup5\n        /* \"#utility.yul\":3697:3720   */\n      sub\n        /* \"#utility.yul\":3693:3725   */\n      slt\n        /* \"#utility.yul\":3690:3809   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":3728:3807   */\n      tag_201\n      tag_136\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3690:3809   */\n    tag_200:\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3873:3950   */\n      tag_202\n        /* \"#utility.yul\":3942:3949   */\n      dup5\n        /* \"#utility.yul\":3933:3939   */\n      dup3\n        /* \"#utility.yul\":3922:3931   */\n      dup6\n        /* \"#utility.yul\":3918:3940   */\n      add\n        /* \"#utility.yul\":3873:3950   */\n      tag_143\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3863:3950   */\n      swap2\n      pop\n        /* \"#utility.yul\":3819:3960   */\n      pop\n        /* \"#utility.yul\":3590:3967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4059   */\n    tag_144:\n        /* \"#utility.yul\":4008:4015   */\n      0x00\n        /* \"#utility.yul\":4048:4052   */\n      0xff\n        /* \"#utility.yul\":4041:4046   */\n      dup3\n        /* \"#utility.yul\":4037:4053   */\n      and\n        /* \"#utility.yul\":4026:4053   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4065:4183   */\n    tag_145:\n        /* \"#utility.yul\":4136:4158   */\n      tag_205\n        /* \"#utility.yul\":4152:4157   */\n      dup2\n        /* \"#utility.yul\":4136:4158   */\n      tag_144\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4129:4134   */\n      dup2\n        /* \"#utility.yul\":4126:4159   */\n      eq\n        /* \"#utility.yul\":4116:4177   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4173:4174   */\n      0x00\n        /* \"#utility.yul\":4170:4171   */\n      dup1\n        /* \"#utility.yul\":4163:4175   */\n      revert\n        /* \"#utility.yul\":4116:4177   */\n    tag_206:\n        /* \"#utility.yul\":4065:4183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4189:4328   */\n    tag_146:\n        /* \"#utility.yul\":4244:4249   */\n      0x00\n        /* \"#utility.yul\":4275:4281   */\n      dup2\n        /* \"#utility.yul\":4269:4282   */\n      mload\n        /* \"#utility.yul\":4260:4282   */\n      swap1\n      pop\n        /* \"#utility.yul\":4291:4322   */\n      tag_208\n        /* \"#utility.yul\":4316:4321   */\n      dup2\n        /* \"#utility.yul\":4291:4322   */\n      tag_145\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4189:4328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4334:4681   */\n    tag_44:\n        /* \"#utility.yul\":4402:4408   */\n      0x00\n        /* \"#utility.yul\":4451:4453   */\n      0x20\n        /* \"#utility.yul\":4439:4448   */\n      dup3\n        /* \"#utility.yul\":4430:4437   */\n      dup5\n        /* \"#utility.yul\":4426:4449   */\n      sub\n        /* \"#utility.yul\":4422:4454   */\n      slt\n        /* \"#utility.yul\":4419:4538   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4457:4536   */\n      tag_211\n      tag_136\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4419:4538   */\n    tag_210:\n        /* \"#utility.yul\":4577:4578   */\n      0x00\n        /* \"#utility.yul\":4602:4664   */\n      tag_212\n        /* \"#utility.yul\":4656:4663   */\n      dup5\n        /* \"#utility.yul\":4647:4653   */\n      dup3\n        /* \"#utility.yul\":4636:4645   */\n      dup6\n        /* \"#utility.yul\":4632:4654   */\n      add\n        /* \"#utility.yul\":4602:4664   */\n      tag_146\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4592:4664   */\n      swap2\n      pop\n        /* \"#utility.yul\":4548:4674   */\n      pop\n        /* \"#utility.yul\":4334:4681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4687:4867   */\n    tag_147:\n        /* \"#utility.yul\":4735:4812   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4732:4733   */\n      0x00\n        /* \"#utility.yul\":4725:4813   */\n      mstore\n        /* \"#utility.yul\":4832:4836   */\n      0x11\n        /* \"#utility.yul\":4829:4830   */\n      0x04\n        /* \"#utility.yul\":4822:4837   */\n      mstore\n        /* \"#utility.yul\":4856:4860   */\n      0x24\n        /* \"#utility.yul\":4853:4854   */\n      0x00\n        /* \"#utility.yul\":4846:4861   */\n      revert\n        /* \"#utility.yul\":4873:5067   */\n    tag_50:\n        /* \"#utility.yul\":4913:4917   */\n      0x00\n        /* \"#utility.yul\":4933:4953   */\n      tag_215\n        /* \"#utility.yul\":4951:4952   */\n      dup3\n        /* \"#utility.yul\":4933:4953   */\n      tag_133\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4928:4953   */\n      swap2\n      pop\n        /* \"#utility.yul\":4967:4987   */\n      tag_216\n        /* \"#utility.yul\":4985:4986   */\n      dup4\n        /* \"#utility.yul\":4967:4987   */\n      tag_133\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4962:4987   */\n      swap3\n      pop\n        /* \"#utility.yul\":5011:5012   */\n      dup3\n        /* \"#utility.yul\":5008:5009   */\n      dup3\n        /* \"#utility.yul\":5004:5013   */\n      sub\n        /* \"#utility.yul\":4996:5013   */\n      swap1\n      pop\n        /* \"#utility.yul\":5035:5036   */\n      dup2\n        /* \"#utility.yul\":5029:5033   */\n      dup2\n        /* \"#utility.yul\":5026:5037   */\n      gt\n        /* \"#utility.yul\":5023:5060   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":5040:5058   */\n      tag_218\n      tag_147\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5023:5060   */\n    tag_217:\n        /* \"#utility.yul\":4873:5067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5073:5175   */\n    tag_148:\n        /* \"#utility.yul\":5115:5123   */\n      0x00\n        /* \"#utility.yul\":5162:5167   */\n      dup2\n        /* \"#utility.yul\":5159:5160   */\n      0x01\n        /* \"#utility.yul\":5155:5168   */\n      shr\n        /* \"#utility.yul\":5134:5168   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:6029   */\n    tag_149:\n        /* \"#utility.yul\":5242:5247   */\n      0x00\n        /* \"#utility.yul\":5249:5253   */\n      dup1\n        /* \"#utility.yul\":5273:5279   */\n      dup3\n        /* \"#utility.yul\":5264:5279   */\n      swap2\n      pop\n        /* \"#utility.yul\":5297:5302   */\n      dup4\n        /* \"#utility.yul\":5288:5302   */\n      swap1\n      pop\n        /* \"#utility.yul\":5311:6023   */\n    tag_221:\n        /* \"#utility.yul\":5332:5333   */\n      0x01\n        /* \"#utility.yul\":5322:5330   */\n      dup6\n        /* \"#utility.yul\":5319:5334   */\n      gt\n        /* \"#utility.yul\":5311:6023   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5427:5431   */\n      dup1\n        /* \"#utility.yul\":5422:5425   */\n      dup7\n        /* \"#utility.yul\":5418:5432   */\n      div\n        /* \"#utility.yul\":5412:5416   */\n      dup2\n        /* \"#utility.yul\":5409:5433   */\n      gt\n        /* \"#utility.yul\":5406:5456   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":5436:5454   */\n      tag_225\n      tag_147\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5406:5456   */\n    tag_224:\n        /* \"#utility.yul\":5486:5487   */\n      0x01\n        /* \"#utility.yul\":5476:5484   */\n      dup6\n        /* \"#utility.yul\":5472:5488   */\n      and\n        /* \"#utility.yul\":5469:5920   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":5901:5905   */\n      dup1\n        /* \"#utility.yul\":5894:5899   */\n      dup3\n        /* \"#utility.yul\":5890:5906   */\n      mul\n        /* \"#utility.yul\":5881:5906   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5920   */\n    tag_226:\n        /* \"#utility.yul\":5951:5955   */\n      dup1\n        /* \"#utility.yul\":5945:5949   */\n      dup2\n        /* \"#utility.yul\":5941:5956   */\n      mul\n        /* \"#utility.yul\":5933:5956   */\n      swap1\n      pop\n        /* \"#utility.yul\":5981:6013   */\n      tag_227\n        /* \"#utility.yul\":6004:6012   */\n      dup6\n        /* \"#utility.yul\":5981:6013   */\n      tag_148\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5969:6013   */\n      swap5\n      pop\n        /* \"#utility.yul\":5311:6023   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":5181:6029   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6035:7108   */\n    tag_150:\n        /* \"#utility.yul\":6089:6094   */\n      0x00\n        /* \"#utility.yul\":6280:6288   */\n      dup3\n        /* \"#utility.yul\":6270:6310   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6301:6302   */\n      0x01\n        /* \"#utility.yul\":6292:6302   */\n      swap1\n      pop\n        /* \"#utility.yul\":6303:6308   */\n      jump(tag_228)\n        /* \"#utility.yul\":6270:6310   */\n    tag_229:\n        /* \"#utility.yul\":6329:6333   */\n      dup2\n        /* \"#utility.yul\":6319:6355   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6337:6347   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6353   */\n      jump(tag_228)\n        /* \"#utility.yul\":6319:6355   */\n    tag_230:\n        /* \"#utility.yul\":6415:6419   */\n      dup2\n        /* \"#utility.yul\":6463:6464   */\n      0x01\n        /* \"#utility.yul\":6458:6485   */\n      dup2\n      eq\n      tag_232\n      jumpi\n        /* \"#utility.yul\":6499:6500   */\n      0x02\n        /* \"#utility.yul\":6494:6685   */\n      dup2\n      eq\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6408:6685   */\n      jump(tag_231)\n        /* \"#utility.yul\":6458:6485   */\n    tag_232:\n        /* \"#utility.yul\":6476:6477   */\n      0x01\n        /* \"#utility.yul\":6467:6477   */\n      swap2\n      pop\n        /* \"#utility.yul\":6478:6483   */\n      pop\n      jump(tag_228)\n        /* \"#utility.yul\":6494:6685   */\n    tag_233:\n        /* \"#utility.yul\":6539:6542   */\n      0xff\n        /* \"#utility.yul\":6529:6537   */\n      dup5\n        /* \"#utility.yul\":6526:6543   */\n      gt\n        /* \"#utility.yul\":6523:6566   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":6546:6564   */\n      tag_235\n      tag_147\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6523:6566   */\n    tag_234:\n        /* \"#utility.yul\":6595:6603   */\n      dup4\n        /* \"#utility.yul\":6592:6593   */\n      0x02\n        /* \"#utility.yul\":6588:6604   */\n      exp\n        /* \"#utility.yul\":6579:6604   */\n      swap2\n      pop\n        /* \"#utility.yul\":6630:6633   */\n      dup5\n        /* \"#utility.yul\":6623:6628   */\n      dup3\n        /* \"#utility.yul\":6620:6634   */\n      gt\n        /* \"#utility.yul\":6617:6657   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6637:6655   */\n      tag_237\n      tag_147\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6617:6657   */\n    tag_236:\n        /* \"#utility.yul\":6670:6675   */\n      pop\n      jump(tag_228)\n        /* \"#utility.yul\":6408:6685   */\n    tag_231:\n      pop\n        /* \"#utility.yul\":6794:6796   */\n      0x20\n        /* \"#utility.yul\":6784:6792   */\n      dup4\n        /* \"#utility.yul\":6781:6797   */\n      lt\n        /* \"#utility.yul\":6775:6778   */\n      0x0133\n        /* \"#utility.yul\":6769:6773   */\n      dup4\n        /* \"#utility.yul\":6766:6779   */\n      lt\n        /* \"#utility.yul\":6762:6798   */\n      and\n        /* \"#utility.yul\":6744:6746   */\n      0x4e\n        /* \"#utility.yul\":6734:6742   */\n      dup5\n        /* \"#utility.yul\":6731:6747   */\n      lt\n        /* \"#utility.yul\":6726:6728   */\n      0x0b\n        /* \"#utility.yul\":6720:6724   */\n      dup5\n        /* \"#utility.yul\":6717:6729   */\n      lt\n        /* \"#utility.yul\":6713:6748   */\n      and\n        /* \"#utility.yul\":6697:6808   */\n      or\n        /* \"#utility.yul\":6694:6940   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":6850:6858   */\n      dup3\n        /* \"#utility.yul\":6844:6848   */\n      dup3\n        /* \"#utility.yul\":6840:6859   */\n      exp\n        /* \"#utility.yul\":6831:6859   */\n      swap1\n      pop\n        /* \"#utility.yul\":6885:6888   */\n      dup4\n        /* \"#utility.yul\":6878:6883   */\n      dup2\n        /* \"#utility.yul\":6875:6889   */\n      gt\n        /* \"#utility.yul\":6872:6912   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6892:6910   */\n      tag_240\n      tag_147\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6872:6912   */\n    tag_239:\n        /* \"#utility.yul\":6925:6930   */\n      jump(tag_228)\n        /* \"#utility.yul\":6694:6940   */\n    tag_238:\n        /* \"#utility.yul\":6965:7007   */\n      tag_241\n        /* \"#utility.yul\":7003:7006   */\n      dup5\n        /* \"#utility.yul\":6993:7001   */\n      dup5\n        /* \"#utility.yul\":6987:6991   */\n      dup5\n        /* \"#utility.yul\":6984:6985   */\n      0x01\n        /* \"#utility.yul\":6965:7007   */\n      tag_149\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6950:7007   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":7039:7043   */\n      dup2\n        /* \"#utility.yul\":7034:7037   */\n      dup5\n        /* \"#utility.yul\":7030:7044   */\n      div\n        /* \"#utility.yul\":7023:7028   */\n      dup2\n        /* \"#utility.yul\":7020:7045   */\n      gt\n        /* \"#utility.yul\":7017:7068   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7048:7066   */\n      tag_243\n      tag_147\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7017:7068   */\n    tag_242:\n        /* \"#utility.yul\":7097:7101   */\n      dup2\n        /* \"#utility.yul\":7090:7095   */\n      dup2\n        /* \"#utility.yul\":7086:7102   */\n      mul\n        /* \"#utility.yul\":7077:7102   */\n      swap1\n      pop\n        /* \"#utility.yul\":6035:7108   */\n    tag_228:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7114:7399   */\n    tag_52:\n        /* \"#utility.yul\":7174:7179   */\n      0x00\n        /* \"#utility.yul\":7198:7221   */\n      tag_245\n        /* \"#utility.yul\":7216:7220   */\n      dup3\n        /* \"#utility.yul\":7198:7221   */\n      tag_133\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7190:7221   */\n      swap2\n      pop\n        /* \"#utility.yul\":7242:7269   */\n      tag_246\n        /* \"#utility.yul\":7260:7268   */\n      dup4\n        /* \"#utility.yul\":7242:7269   */\n      tag_133\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7230:7269   */\n      swap3\n      pop\n        /* \"#utility.yul\":7288:7392   */\n      tag_247\n        /* \"#utility.yul\":7325:7391   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7315:7323   */\n      dup5\n        /* \"#utility.yul\":7309:7313   */\n      dup5\n        /* \"#utility.yul\":7288:7392   */\n      tag_150\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7279:7392   */\n      swap1\n      pop\n        /* \"#utility.yul\":7114:7399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7405:7815   */\n    tag_55:\n        /* \"#utility.yul\":7445:7452   */\n      0x00\n        /* \"#utility.yul\":7468:7488   */\n      tag_249\n        /* \"#utility.yul\":7486:7487   */\n      dup3\n        /* \"#utility.yul\":7468:7488   */\n      tag_133\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7463:7488   */\n      swap2\n      pop\n        /* \"#utility.yul\":7502:7522   */\n      tag_250\n        /* \"#utility.yul\":7520:7521   */\n      dup4\n        /* \"#utility.yul\":7502:7522   */\n      tag_133\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7497:7522   */\n      swap3\n      pop\n        /* \"#utility.yul\":7557:7558   */\n      dup3\n        /* \"#utility.yul\":7554:7555   */\n      dup3\n        /* \"#utility.yul\":7550:7559   */\n      mul\n        /* \"#utility.yul\":7579:7609   */\n      tag_251\n        /* \"#utility.yul\":7597:7608   */\n      dup2\n        /* \"#utility.yul\":7579:7609   */\n      tag_133\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7568:7609   */\n      swap2\n      pop\n        /* \"#utility.yul\":7758:7759   */\n      dup3\n        /* \"#utility.yul\":7749:7756   */\n      dup3\n        /* \"#utility.yul\":7745:7760   */\n      div\n        /* \"#utility.yul\":7742:7743   */\n      dup5\n        /* \"#utility.yul\":7739:7761   */\n      eq\n        /* \"#utility.yul\":7719:7720   */\n      dup4\n        /* \"#utility.yul\":7712:7721   */\n      iszero\n        /* \"#utility.yul\":7692:7775   */\n      or\n        /* \"#utility.yul\":7669:7808   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":7788:7806   */\n      tag_253\n      tag_147\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7669:7808   */\n    tag_252:\n        /* \"#utility.yul\":7453:7815   */\n      pop\n        /* \"#utility.yul\":7405:7815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7821:8001   */\n    tag_151:\n        /* \"#utility.yul\":7869:7946   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7866:7867   */\n      0x00\n        /* \"#utility.yul\":7859:7947   */\n      mstore\n        /* \"#utility.yul\":7966:7970   */\n      0x12\n        /* \"#utility.yul\":7963:7964   */\n      0x04\n        /* \"#utility.yul\":7956:7971   */\n      mstore\n        /* \"#utility.yul\":7990:7994   */\n      0x24\n        /* \"#utility.yul\":7987:7988   */\n      0x00\n        /* \"#utility.yul\":7980:7995   */\n      revert\n        /* \"#utility.yul\":8007:8192   */\n    tag_58:\n        /* \"#utility.yul\":8047:8048   */\n      0x00\n        /* \"#utility.yul\":8064:8084   */\n      tag_256\n        /* \"#utility.yul\":8082:8083   */\n      dup3\n        /* \"#utility.yul\":8064:8084   */\n      tag_133\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8059:8084   */\n      swap2\n      pop\n        /* \"#utility.yul\":8098:8118   */\n      tag_257\n        /* \"#utility.yul\":8116:8117   */\n      dup4\n        /* \"#utility.yul\":8098:8118   */\n      tag_133\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8093:8118   */\n      swap3\n      pop\n        /* \"#utility.yul\":8137:8138   */\n      dup3\n        /* \"#utility.yul\":8127:8162   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":8142:8160   */\n      tag_259\n      tag_151\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8127:8162   */\n    tag_258:\n        /* \"#utility.yul\":8184:8185   */\n      dup3\n        /* \"#utility.yul\":8181:8182   */\n      dup3\n        /* \"#utility.yul\":8177:8186   */\n      div\n        /* \"#utility.yul\":8172:8186   */\n      swap1\n      pop\n        /* \"#utility.yul\":8007:8192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220993d71bb92f2659513d94eb6777b50094a91e4f788410b28c954f5c761d903a164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610ebe8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c806383781fa91161005957806383781fa9146100d95780639b3e9ab8146100f7578063cd5c645c14610115578063f141b52b146101315761007b565b806338d52e0f1461007f5780635b8bec551461009d5780635d0b41f8146100bb575b5f80fd5b61008761014d565b6040516100949190610a5d565b60405180910390f35b6100a5610172565b6040516100b29190610a96565b60405180910390f35b6100c3610195565b6040516100d09190610ac7565b60405180910390f35b6100e161042a565b6040516100ee9190610ac7565b60405180910390f35b6100ff6106b5565b60405161010c9190610ac7565b60405180910390f35b61012f600480360381019061012a9190610b1f565b6107c0565b005b61014b60048036038101906101469190610b1f565b6109a0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102379190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610283573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a79190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033b9190610be6565b60ff1690505f8183111561039e5781836103559190610c3e565b600a6103619190610da0565b905082600a6103709190610da0565b81868861037d9190610dea565b6103879190610dea565b6103919190610e58565b9650505050505050610427565b818310156103fb5782826103b29190610c3e565b600a6103be9190610da0565b905082600a6103cd9190610da0565b8186886103da9190610dea565b6103e49190610e58565b6103ee9190610e58565b9650505050505050610427565b81600a6104089190610da0565b85876104149190610dea565b61041e9190610e58565b96505050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104cc9190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610518573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053c9190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d09190610be6565b60ff1690508082111561062e5781600a6105ea9190610da0565b81836105f69190610c3e565b600a6106029190610da0565b858761060e9190610dea565b6106189190610dea565b6106229190610e58565b955050505050506106b2565b808210156106875781600a6106439190610da0565b828261064f9190610c3e565b600a61065b9190610da0565b85876106679190610dea565b6106719190610e58565b61067b9190610e58565b955050505050506106b2565b80600a6106949190610da0565b84866106a09190610dea565b6106aa9190610e58565b955050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f600354600254111561072e576003546002546106e69190610c3e565b600a6106f29190610da0565b9050600254600a6107039190610da0565b8183856107109190610dea565b61071a9190610dea565b6107249190610e58565b93505050506107bd565b60035460025410156107925760025460035461074a9190610c3e565b600a6107569190610da0565b9050600254600a6107679190610da0565b8183856107749190610dea565b61077e9190610e58565b6107889190610e58565b93505050506107bd565b600354600a6107a19190610da0565b82846107ad9190610dea565b6107b79190610e58565b93505050505b90565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088d9190610b85565b90508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108fc9190610be6565b60ff1660028190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109939190610be6565b60ff166003819055505050565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a25610a20610a1b846109e3565b610a02565b6109e3565b9050919050565b5f610a3682610a0b565b9050919050565b5f610a4782610a2c565b9050919050565b610a5781610a3d565b82525050565b5f602082019050610a705f830184610a4e565b92915050565b5f610a8082610a2c565b9050919050565b610a9081610a76565b82525050565b5f602082019050610aa95f830184610a87565b92915050565b5f819050919050565b610ac181610aaf565b82525050565b5f602082019050610ada5f830184610ab8565b92915050565b5f80fd5b5f610aee826109e3565b9050919050565b610afe81610ae4565b8114610b08575f80fd5b50565b5f81359050610b1981610af5565b92915050565b5f60208284031215610b3457610b33610ae0565b5b5f610b4184828501610b0b565b91505092915050565b5f610b5482610ae4565b9050919050565b610b6481610b4a565b8114610b6e575f80fd5b50565b5f81519050610b7f81610b5b565b92915050565b5f60208284031215610b9a57610b99610ae0565b5b5f610ba784828501610b71565b91505092915050565b5f60ff82169050919050565b610bc581610bb0565b8114610bcf575f80fd5b50565b5f81519050610be081610bbc565b92915050565b5f60208284031215610bfb57610bfa610ae0565b5b5f610c0884828501610bd2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c4882610aaf565b9150610c5383610aaf565b9250828203905081811115610c6b57610c6a610c11565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115610cc657808604811115610ca257610ca1610c11565b5b6001851615610cb15780820291505b8081029050610cbf85610c71565b9450610c86565b94509492505050565b5f82610cde5760019050610d99565b81610ceb575f9050610d99565b8160018114610d015760028114610d0b57610d3a565b6001915050610d99565b60ff841115610d1d57610d1c610c11565b5b8360020a915084821115610d3457610d33610c11565b5b50610d99565b5060208310610133831016604e8410600b8410161715610d6f5782820a905083811115610d6a57610d69610c11565b5b610d99565b610d7c8484846001610c7d565b92509050818404811115610d9357610d92610c11565b5b81810290505b9392505050565b5f610daa82610aaf565b9150610db583610aaf565b9250610de27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ccf565b905092915050565b5f610df482610aaf565b9150610dff83610aaf565b9250828202610e0d81610aaf565b91508282048414831517610e2457610e23610c11565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e6282610aaf565b9150610e6d83610aaf565b925082610e7d57610e7c610e2b565b5b82820490509291505056fea2646970667358221220993d71bb92f2659513d94eb6777b50094a91e4f788410b28c954f5c761d903a164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEBE DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83781FA9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x83781FA9 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9B3E9AB8 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF141B52B EQ PUSH2 0x131 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5D0B41F8 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x39E JUMPI DUP2 DUP4 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x370 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3FB JUMPI DUP3 DUP3 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x62E JUMPI DUP2 PUSH1 0xA PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x618 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x687 JUMPI DUP2 PUSH1 0xA PUSH2 0x643 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x703 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x71A SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x756 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 PUSH2 0xA20 PUSH2 0xA1B DUP5 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 DUP3 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA47 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA70 PUSH0 DUP4 ADD DUP5 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA80 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0xA76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC1 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADA PUSH0 DUP4 ADD DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xAEE DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFE DUP2 PUSH2 0xAE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xB08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB19 DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB33 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB54 DUP3 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0xB4A JUMP JUMPDEST DUP2 EQ PUSH2 0xB6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA7 DUP5 DUP3 DUP6 ADD PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC5 DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE0 DUP2 PUSH2 0xBBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC08 DUP5 DUP3 DUP6 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC48 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xC53 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6A PUSH2 0xC11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCBF DUP6 PUSH2 0xC71 JUMP JUMPDEST SWAP5 POP PUSH2 0xC86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xCDE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH2 0xCEB JUMPI PUSH0 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD0B JUMPI PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD99 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xD7C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC7D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP PUSH2 0xDE2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF4 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDFF DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE0D DUP2 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE62 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xE6D DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0xE2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 RETURNDATASIZE PUSH18 0xBB92F2659513D94EB6777B50094A91E4F788 COINBASE SIGNEXTEND 0x28 0xC9 SLOAD CREATE2 0xC7 PUSH2 0xD903 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "900:3286:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@asset_858": {
									"entryPoint": 333,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateOrig_1013": {
									"entryPoint": 1066,
									"id": 1013,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateWithCachedDecimals_1201": {
									"entryPoint": 1717,
									"id": 1201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateWithScalingFactor_1121": {
									"entryPoint": 405,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidityProvider_855": {
									"entryPoint": 370,
									"id": 855,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateAsset_914": {
									"entryPoint": 2464,
									"id": 914,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateLiquidityProvider_902": {
									"entryPoint": 1984,
									"id": 902,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ERC20_$651_fromMemory": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$651_fromMemory": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$651": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ILiquidityProvider_$796_to_t_address": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$651": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8195:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "558:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "568:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "612:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "581:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "568:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "538:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "548:9:6",
														"type": ""
													}
												],
												"src": "485:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "708:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "725:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "730:43:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "718:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "696:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "703:3:6",
														"type": ""
													}
												],
												"src": "630:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "904:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "914:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "914:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1031:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "950:56:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:84:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "876:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "888:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "899:4:6",
														"type": ""
													}
												],
												"src": "793:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1156:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1143:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ILiquidityProvider_$796_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1123:9:6",
														"type": ""
													}
												],
												"src": "1047:152:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1296:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1313:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1375:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ILiquidityProvider_$796_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1318:56:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:63:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:76:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1306:76:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1284:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1291:3:6",
														"type": ""
													}
												],
												"src": "1205:183:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:150:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1528:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1540:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1528:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1647:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1658:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1643:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1643:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1564:69:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1564:97:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1490:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1502:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1513:4:6",
														"type": ""
													}
												],
												"src": "1394:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1740:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1701:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1711:7:6",
														"type": ""
													}
												],
												"src": "1674:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1822:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1839:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1862:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1844:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1844:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1810:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1817:3:6",
														"type": ""
													}
												],
												"src": "1757:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1979:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1989:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2001:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1989:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2069:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2082:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2093:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2078:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2025:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2025:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1951:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1963:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1974:4:6",
														"type": ""
													}
												],
												"src": "1881:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2149:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2159:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2169:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2159:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2142:6:6",
														"type": ""
													}
												],
												"src": "2109:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2289:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2190:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2402:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2419:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2412:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2412:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2313:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2481:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2491:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2520:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2502:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2491:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2473:7:6",
														"type": ""
													}
												],
												"src": "2436:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2638:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2604:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2629:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2611:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2611:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2601:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:43:6"
															},
															"nodeType": "YulIf",
															"src": "2591:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2574:5:6",
														"type": ""
													}
												],
												"src": "2538:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2728:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2737:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2728:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2793:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2766:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2766:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2696:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2704:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2712:5:6",
														"type": ""
													}
												],
												"src": "2666:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2923:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2925:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2925:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2925:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2898:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2907:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2894:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2894:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:32:6"
															},
															"nodeType": "YulIf",
															"src": "2887:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3016:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3031:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3035:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3060:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3095:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3106:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3091:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3091:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3115:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3070:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3070:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3060:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2847:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2858:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2870:6:6",
														"type": ""
													}
												],
												"src": "2811:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3204:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3214:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3243:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3225:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3214:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$651",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3186:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3196:7:6",
														"type": ""
													}
												],
												"src": "3146:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3317:92:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3387:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3396:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3399:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3389:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3389:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3389:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3340:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3378:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$651",
																					"nodeType": "YulIdentifier",
																					"src": "3347:30:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3347:37:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3337:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3337:48:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:56:6"
															},
															"nodeType": "YulIf",
															"src": "3327:76:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$651",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3310:5:6",
														"type": ""
													}
												],
												"src": "3261:148:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3491:93:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3501:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3516:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3510:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3501:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3572:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$651",
																	"nodeType": "YulIdentifier",
																	"src": "3532:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3532:46:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3469:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3477:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3485:5:6",
														"type": ""
													}
												],
												"src": "3415:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3680:287:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3726:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3728:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3728:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3701:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3710:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3697:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:32:6"
															},
															"nodeType": "YulIf",
															"src": "3690:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3819:141:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3834:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3838:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3863:87:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3922:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3933:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3918:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3918:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3942:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3873:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:77:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3863:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$651_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3650:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3661:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3673:6:6",
														"type": ""
													}
												],
												"src": "3590:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4016:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4026:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4041:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4026:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3998:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4008:7:6",
														"type": ""
													}
												],
												"src": "3973:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4106:77:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4161:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4173:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4163:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4163:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4163:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4129:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4152:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "4136:15:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4136:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4126:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:41:6"
															},
															"nodeType": "YulIf",
															"src": "4116:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4099:5:6",
														"type": ""
													}
												],
												"src": "4065:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4250:78:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4260:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4275:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4269:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4260:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4316:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4291:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4228:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4236:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4244:5:6",
														"type": ""
													}
												],
												"src": "4189:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4409:272:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4455:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4457:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4457:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4457:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4430:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4439:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4426:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4422:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:32:6"
															},
															"nodeType": "YulIf",
															"src": "4419:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4548:126:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4563:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4577:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4567:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4592:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4636:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4647:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4632:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4632:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4602:29:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4602:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4592:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4379:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4390:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4402:6:6",
														"type": ""
													}
												],
												"src": "4334:347:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4715:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4735:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4832:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4822:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4822:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4856:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4846:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4687:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4918:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4928:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4951:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4933:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4933:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4928:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4962:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4985:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4967:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4962:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4996:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5008:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5011:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4996:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5038:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5040:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5040:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5040:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5029:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5035:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5026:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:11:6"
															},
															"nodeType": "YulIf",
															"src": "5023:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4904:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4907:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4913:4:6",
														"type": ""
													}
												],
												"src": "4873:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5124:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5134:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5159:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5162:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5155:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5134:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5105:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5115:8:6",
														"type": ""
													}
												],
												"src": "5073:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:775:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5264:15:6",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5273:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5264:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5288:14:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5297:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5288:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5346:677:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5434:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5436:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5436:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5436:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5412:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5422:3:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5427:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5418:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5418:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5409:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5409:24:6"
																		},
																		"nodeType": "YulIf",
																		"src": "5406:50:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5501:419:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5881:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "5894:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "5901:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "5890:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5890:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "5881:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5476:8:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5486:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5472:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5472:16:6"
																		},
																		"nodeType": "YulIf",
																		"src": "5469:451:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5933:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5945:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5951:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "5941:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5941:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5933:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5969:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6004:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "5981:22:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5969:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5322:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5319:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5335:2:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5315:3:6",
																"statements": []
															},
															"src": "5311:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5209:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5217:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5224:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5234:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5242:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5249:4:6",
														"type": ""
													}
												],
												"src": "5181:848:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6095:1013:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6290:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6292:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6301:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6292:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6303:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6280:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6273:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6273:16:6"
															},
															"nodeType": "YulIf",
															"src": "6270:40:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6335:20:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6337:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6346:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6337:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6348:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6329:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:12:6"
															},
															"nodeType": "YulIf",
															"src": "6319:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6465:20:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6467:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6476:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6467:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6478:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6458:27:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6463:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6509:176:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6544:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6546:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6546:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6546:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6529:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6539:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6526:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6526:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6523:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6579:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6592:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6595:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6588:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6588:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6579:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6635:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6637:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6637:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6637:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6623:5:6"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6630:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6620:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6620:14:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6617:40:6"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6670:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6494:191:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6499:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6415:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "6408:277:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6817:123:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6831:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6844:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6850:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "6840:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6840:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6831:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6890:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6892:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6892:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6892:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "6878:5:6"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "6885:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6875:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6875:14:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6872:40:6"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6925:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6720:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6726:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6717:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6717:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6734:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6744:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6731:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6731:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6713:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6713:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6769:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6775:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6766:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6766:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6784:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6794:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6781:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6781:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6762:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6762:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6697:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:111:6"
															},
															"nodeType": "YulIf",
															"src": "6694:246:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6950:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6984:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6987:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6993:8:6"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7003:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "6965:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6950:5:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6957:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7046:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7048:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7048:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7048:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7023:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7034:3:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7039:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7030:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7030:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7020:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:25:6"
															},
															"nodeType": "YulIf",
															"src": "7017:51:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7077:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7090:5:6"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7097:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7086:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7077:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6065:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6071:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6081:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6089:5:6",
														"type": ""
													}
												],
												"src": "6035:1073:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7180:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7190:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7216:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7198:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7190:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7230:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7260:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7242:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:27:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7230:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7279:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7309:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7315:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7288:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7288:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7279:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7155:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7161:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7174:5:6",
														"type": ""
													}
												],
												"src": "7114:285:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7463:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7486:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7468:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7468:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7463:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7502:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7497:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7531:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7554:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7557:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7550:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7550:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7535:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7568:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7597:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7579:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7579:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7568:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7786:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7788:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7788:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7788:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7719:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7712:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7712:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7742:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7749:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7758:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7745:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7745:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7739:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7739:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7692:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:113:6"
															},
															"nodeType": "YulIf",
															"src": "7669:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7436:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7439:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7445:7:6",
														"type": ""
													}
												],
												"src": "7405:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7849:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7866:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7869:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7859:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7859:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7966:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7956:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7980:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7980:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7821:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8049:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8059:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8082:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8064:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8059:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8093:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8116:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8098:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8093:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8140:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8142:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8142:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8142:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8137:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8130:9:6"
															},
															"nodeType": "YulIf",
															"src": "8127:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8172:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8181:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8184:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8177:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8172:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8038:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8041:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8047:1:6",
														"type": ""
													}
												],
												"src": "8007:185:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILiquidityProvider_$796_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILiquidityProvider_$796_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_ERC20_$651(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$651(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$651(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$651_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$651(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$651_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$651_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c806383781fa91161005957806383781fa9146100d95780639b3e9ab8146100f7578063cd5c645c14610115578063f141b52b146101315761007b565b806338d52e0f1461007f5780635b8bec551461009d5780635d0b41f8146100bb575b5f80fd5b61008761014d565b6040516100949190610a5d565b60405180910390f35b6100a5610172565b6040516100b29190610a96565b60405180910390f35b6100c3610195565b6040516100d09190610ac7565b60405180910390f35b6100e161042a565b6040516100ee9190610ac7565b60405180910390f35b6100ff6106b5565b60405161010c9190610ac7565b60405180910390f35b61012f600480360381019061012a9190610b1f565b6107c0565b005b61014b60048036038101906101469190610b1f565b6109a0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102379190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610283573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a79190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033b9190610be6565b60ff1690505f8183111561039e5781836103559190610c3e565b600a6103619190610da0565b905082600a6103709190610da0565b81868861037d9190610dea565b6103879190610dea565b6103919190610e58565b9650505050505050610427565b818310156103fb5782826103b29190610c3e565b600a6103be9190610da0565b905082600a6103cd9190610da0565b8186886103da9190610dea565b6103e49190610e58565b6103ee9190610e58565b9650505050505050610427565b81600a6104089190610da0565b85876104149190610dea565b61041e9190610e58565b96505050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104cc9190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610518573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053c9190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d09190610be6565b60ff1690508082111561062e5781600a6105ea9190610da0565b81836105f69190610c3e565b600a6106029190610da0565b858761060e9190610dea565b6106189190610dea565b6106229190610e58565b955050505050506106b2565b808210156106875781600a6106439190610da0565b828261064f9190610c3e565b600a61065b9190610da0565b85876106679190610dea565b6106719190610e58565b61067b9190610e58565b955050505050506106b2565b80600a6106949190610da0565b84866106a09190610dea565b6106aa9190610e58565b955050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f600354600254111561072e576003546002546106e69190610c3e565b600a6106f29190610da0565b9050600254600a6107039190610da0565b8183856107109190610dea565b61071a9190610dea565b6107249190610e58565b93505050506107bd565b60035460025410156107925760025460035461074a9190610c3e565b600a6107569190610da0565b9050600254600a6107679190610da0565b8183856107749190610dea565b61077e9190610e58565b6107889190610e58565b93505050506107bd565b600354600a6107a19190610da0565b82846107ad9190610dea565b6107b79190610e58565b93505050505b90565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088d9190610b85565b90508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108fc9190610be6565b60ff1660028190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109939190610be6565b60ff166003819055505050565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a25610a20610a1b846109e3565b610a02565b6109e3565b9050919050565b5f610a3682610a0b565b9050919050565b5f610a4782610a2c565b9050919050565b610a5781610a3d565b82525050565b5f602082019050610a705f830184610a4e565b92915050565b5f610a8082610a2c565b9050919050565b610a9081610a76565b82525050565b5f602082019050610aa95f830184610a87565b92915050565b5f819050919050565b610ac181610aaf565b82525050565b5f602082019050610ada5f830184610ab8565b92915050565b5f80fd5b5f610aee826109e3565b9050919050565b610afe81610ae4565b8114610b08575f80fd5b50565b5f81359050610b1981610af5565b92915050565b5f60208284031215610b3457610b33610ae0565b5b5f610b4184828501610b0b565b91505092915050565b5f610b5482610ae4565b9050919050565b610b6481610b4a565b8114610b6e575f80fd5b50565b5f81519050610b7f81610b5b565b92915050565b5f60208284031215610b9a57610b99610ae0565b5b5f610ba784828501610b71565b91505092915050565b5f60ff82169050919050565b610bc581610bb0565b8114610bcf575f80fd5b50565b5f81519050610be081610bbc565b92915050565b5f60208284031215610bfb57610bfa610ae0565b5b5f610c0884828501610bd2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c4882610aaf565b9150610c5383610aaf565b9250828203905081811115610c6b57610c6a610c11565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115610cc657808604811115610ca257610ca1610c11565b5b6001851615610cb15780820291505b8081029050610cbf85610c71565b9450610c86565b94509492505050565b5f82610cde5760019050610d99565b81610ceb575f9050610d99565b8160018114610d015760028114610d0b57610d3a565b6001915050610d99565b60ff841115610d1d57610d1c610c11565b5b8360020a915084821115610d3457610d33610c11565b5b50610d99565b5060208310610133831016604e8410600b8410161715610d6f5782820a905083811115610d6a57610d69610c11565b5b610d99565b610d7c8484846001610c7d565b92509050818404811115610d9357610d92610c11565b5b81810290505b9392505050565b5f610daa82610aaf565b9150610db583610aaf565b9250610de27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ccf565b905092915050565b5f610df482610aaf565b9150610dff83610aaf565b9250828202610e0d81610aaf565b91508282048414831517610e2457610e23610c11565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e6282610aaf565b9150610e6d83610aaf565b925082610e7d57610e7c610e2b565b5b82820490509291505056fea2646970667358221220993d71bb92f2659513d94eb6777b50094a91e4f788410b28c954f5c761d903a164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83781FA9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x83781FA9 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9B3E9AB8 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF141B52B EQ PUSH2 0x131 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5D0B41F8 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x39E JUMPI DUP2 DUP4 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x370 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3FB JUMPI DUP3 DUP3 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x62E JUMPI DUP2 PUSH1 0xA PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x618 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x687 JUMPI DUP2 PUSH1 0xA PUSH2 0x643 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x703 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x71A SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x756 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 PUSH2 0xA20 PUSH2 0xA1B DUP5 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 DUP3 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA47 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA70 PUSH0 DUP4 ADD DUP5 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA80 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0xA76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC1 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADA PUSH0 DUP4 ADD DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xAEE DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFE DUP2 PUSH2 0xAE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xB08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB19 DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB33 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB54 DUP3 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0xB4A JUMP JUMPDEST DUP2 EQ PUSH2 0xB6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA7 DUP5 DUP3 DUP6 ADD PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC5 DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE0 DUP2 PUSH2 0xBBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC08 DUP5 DUP3 DUP6 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC48 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xC53 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6A PUSH2 0xC11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCBF DUP6 PUSH2 0xC71 JUMP JUMPDEST SWAP5 POP PUSH2 0xC86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xCDE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH2 0xCEB JUMPI PUSH0 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD0B JUMPI PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD99 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xD7C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC7D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP PUSH2 0xDE2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF4 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDFF DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE0D DUP2 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE62 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xE6D DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0xE2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 RETURNDATASIZE PUSH18 0xBB92F2659513D94EB6777B50094A91E4F788 COINBASE SIGNEXTEND 0x28 0xC9 SLOAD CREATE2 0xC7 PUSH2 0xD903 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "900:3286:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;936:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2452:909;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1583:863;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:804;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1081:393;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1480:84;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;985:18;;;;;;;;;;;;;:::o;936:43::-;;;;;;;;;;;;:::o;2452:909::-;2511:7;2530:15;2548:19;2530:37;;2577:12;2592:7;2577:22;;2610:29;2663:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2610:97;;2717:25;2751:21;2745:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2717:67;;;;2795:21;2833:5;;;;;;;;;;;2819:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2795:56;;;;2862:21;2917:13;2897:17;:33;2893:200;;;2987:13;2967:17;:33;;;;:::i;:::-;2962:2;:39;;;;:::i;:::-;2946:55;;3064:17;3060:2;:21;;;;:::i;:::-;3042:13;3034:4;3024:7;:14;;;;:::i;:::-;3023:32;;;;:::i;:::-;3022:60;;;;:::i;:::-;3015:67;;;;;;;;;;2893:200;3126:13;3106:17;:33;3102:198;;;3192:17;3176:13;:33;;;;:::i;:::-;3171:2;:39;;;;:::i;:::-;3155:55;;3271:17;3267:2;:21;;;;:::i;:::-;3250:13;3242:4;3232:7;:14;;;;:::i;:::-;3231:32;;;;:::i;:::-;:58;;;;:::i;:::-;3224:65;;;;;;;;;;3102:198;3340:13;3336:2;:17;;;;:::i;:::-;3327:4;3317:7;:14;;;;:::i;:::-;3316:38;;;;:::i;:::-;3309:45;;;;;;;;2452:909;;:::o;1583:863::-;1629:7;1648:15;1666:19;1648:37;;1695:12;1710:7;1695:22;;1728:29;1781:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:97;;1835:25;1869:21;1863:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1835:67;;;;1913:21;1951:5;;;;;;;;;;;1937:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1913:56;;;;2004:13;1984:17;:33;1980:191;;;2142:17;2138:2;:21;;;;:::i;:::-;2102:13;2082:17;:33;;;;:::i;:::-;2077:2;:39;;;;:::i;:::-;2068:4;2058:7;:14;;;;:::i;:::-;2057:60;;;;:::i;:::-;2056:104;;;;:::i;:::-;2033:127;;;;;;;;;1980:191;2204:13;2184:17;:33;2180:205;;;2356:17;2352:2;:21;;;;:::i;:::-;2313:17;2297:13;:33;;;;:::i;:::-;2292:2;:39;;;;:::i;:::-;2267:4;2257:7;:14;;;;:::i;:::-;2256:76;;;;:::i;:::-;:118;;;;:::i;:::-;2233:141;;;;;;;;;2180:205;2425:13;2421:2;:17;;;;:::i;:::-;2412:4;2402:7;:14;;;;:::i;:::-;2401:38;;;;:::i;:::-;2394:45;;;;;;;1583:863;;:::o;3380:804::-;3440:7;3459:15;3477:19;3459:37;;3506:12;3521:7;3506:22;;3539:21;3600:19;;3574:23;;:45;3570:262;;;3682:19;;3656:23;;:45;;;;:::i;:::-;3651:2;:51;;;;:::i;:::-;3635:67;;3797:23;;3793:2;:27;;;;:::i;:::-;3759:13;3751:4;3741:7;:14;;;;:::i;:::-;3740:32;;;;:::i;:::-;3739:82;;;;:::i;:::-;3716:105;;;;;;;3570:262;3871:19;;3845:23;;:45;3841:276;;;3949:23;;3927:19;;:45;;;;:::i;:::-;3922:2;:51;;;;:::i;:::-;3906:67;;4082:23;;4078:2;:27;;;;:::i;:::-;4045:13;4021:4;4011:7;:14;;;;:::i;:::-;4010:48;;;;:::i;:::-;:96;;;;:::i;:::-;3987:119;;;;;;;3841:276;4157:19;;4153:2;:23;;;;:::i;:::-;4144:4;4134:7;:14;;;;:::i;:::-;4133:44;;;;:::i;:::-;4126:51;;;;;3380:804;;:::o;1081:393::-;1200:18;1161:17;;:58;;;;;;;;;;;;;;;;;;1230:29;1283:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1230:97;;1370:21;1364:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1338:65;;:23;:65;;;;1449:5;;;;;;;;;;;1435:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1413:54;;:19;:54;;;;1151:323;1081:393;:::o;1480:84::-;1550:6;1536:5;;:21;;;;;;;;;;;;;;;;;;1480:84;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1047:152::-;1123:9;1156:37;1187:5;1156:37;:::i;:::-;1143:50;;1047:152;;;:::o;1205:183::-;1318:63;1375:5;1318:63;:::i;:::-;1313:3;1306:76;1205:183;;:::o;1394:274::-;1513:4;1551:2;1540:9;1536:18;1528:26;;1564:97;1658:1;1647:9;1643:17;1634:6;1564:97;:::i;:::-;1394:274;;;;:::o;1674:77::-;1711:7;1740:5;1729:16;;1674:77;;;:::o;1757:118::-;1844:24;1862:5;1844:24;:::i;:::-;1839:3;1832:37;1757:118;;:::o;1881:222::-;1974:4;2012:2;2001:9;1997:18;1989:26;;2025:71;2093:1;2082:9;2078:17;2069:6;2025:71;:::i;:::-;1881:222;;;;:::o;2190:117::-;2299:1;2296;2289:12;2436:96;2473:7;2502:24;2520:5;2502:24;:::i;:::-;2491:35;;2436:96;;;:::o;2538:122::-;2611:24;2629:5;2611:24;:::i;:::-;2604:5;2601:35;2591:63;;2650:1;2647;2640:12;2591:63;2538:122;:::o;2666:139::-;2712:5;2750:6;2737:20;2728:29;;2766:33;2793:5;2766:33;:::i;:::-;2666:139;;;;:::o;2811:329::-;2870:6;2919:2;2907:9;2898:7;2894:23;2890:32;2887:119;;;2925:79;;:::i;:::-;2887:119;3045:1;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3016:117;2811:329;;;;:::o;3146:109::-;3196:7;3225:24;3243:5;3225:24;:::i;:::-;3214:35;;3146:109;;;:::o;3261:148::-;3347:37;3378:5;3347:37;:::i;:::-;3340:5;3337:48;3327:76;;3399:1;3396;3389:12;3327:76;3261:148;:::o;3415:169::-;3485:5;3516:6;3510:13;3501:22;;3532:46;3572:5;3532:46;:::i;:::-;3415:169;;;;:::o;3590:377::-;3673:6;3722:2;3710:9;3701:7;3697:23;3693:32;3690:119;;;3728:79;;:::i;:::-;3690:119;3848:1;3873:77;3942:7;3933:6;3922:9;3918:22;3873:77;:::i;:::-;3863:87;;3819:141;3590:377;;;;:::o;3973:86::-;4008:7;4048:4;4041:5;4037:16;4026:27;;3973:86;;;:::o;4065:118::-;4136:22;4152:5;4136:22;:::i;:::-;4129:5;4126:33;4116:61;;4173:1;4170;4163:12;4116:61;4065:118;:::o;4189:139::-;4244:5;4275:6;4269:13;4260:22;;4291:31;4316:5;4291:31;:::i;:::-;4189:139;;;;:::o;4334:347::-;4402:6;4451:2;4439:9;4430:7;4426:23;4422:32;4419:119;;;4457:79;;:::i;:::-;4419:119;4577:1;4602:62;4656:7;4647:6;4636:9;4632:22;4602:62;:::i;:::-;4592:72;;4548:126;4334:347;;;;:::o;4687:180::-;4735:77;4732:1;4725:88;4832:4;4829:1;4822:15;4856:4;4853:1;4846:15;4873:194;4913:4;4933:20;4951:1;4933:20;:::i;:::-;4928:25;;4967:20;4985:1;4967:20;:::i;:::-;4962:25;;5011:1;5008;5004:9;4996:17;;5035:1;5029:4;5026:11;5023:37;;;5040:18;;:::i;:::-;5023:37;4873:194;;;;:::o;5073:102::-;5115:8;5162:5;5159:1;5155:13;5134:34;;5073:102;;;:::o;5181:848::-;5242:5;5249:4;5273:6;5264:15;;5297:5;5288:14;;5311:712;5332:1;5322:8;5319:15;5311:712;;;5427:4;5422:3;5418:14;5412:4;5409:24;5406:50;;;5436:18;;:::i;:::-;5406:50;5486:1;5476:8;5472:16;5469:451;;;5901:4;5894:5;5890:16;5881:25;;5469:451;5951:4;5945;5941:15;5933:23;;5981:32;6004:8;5981:32;:::i;:::-;5969:44;;5311:712;;;5181:848;;;;;;;:::o;6035:1073::-;6089:5;6280:8;6270:40;;6301:1;6292:10;;6303:5;;6270:40;6329:4;6319:36;;6346:1;6337:10;;6348:5;;6319:36;6415:4;6463:1;6458:27;;;;6499:1;6494:191;;;;6408:277;;6458:27;6476:1;6467:10;;6478:5;;;6494:191;6539:3;6529:8;6526:17;6523:43;;;6546:18;;:::i;:::-;6523:43;6595:8;6592:1;6588:16;6579:25;;6630:3;6623:5;6620:14;6617:40;;;6637:18;;:::i;:::-;6617:40;6670:5;;;6408:277;;6794:2;6784:8;6781:16;6775:3;6769:4;6766:13;6762:36;6744:2;6734:8;6731:16;6726:2;6720:4;6717:12;6713:35;6697:111;6694:246;;;6850:8;6844:4;6840:19;6831:28;;6885:3;6878:5;6875:14;6872:40;;;6892:18;;:::i;:::-;6872:40;6925:5;;6694:246;6965:42;7003:3;6993:8;6987:4;6984:1;6965:42;:::i;:::-;6950:57;;;;7039:4;7034:3;7030:14;7023:5;7020:25;7017:51;;;7048:18;;:::i;:::-;7017:51;7097:4;7090:5;7086:16;7077:25;;6035:1073;;;;;;:::o;7114:285::-;7174:5;7198:23;7216:4;7198:23;:::i;:::-;7190:31;;7242:27;7260:8;7242:27;:::i;:::-;7230:39;;7288:104;7325:66;7315:8;7309:4;7288:104;:::i;:::-;7279:113;;7114:285;;;;:::o;7405:410::-;7445:7;7468:20;7486:1;7468:20;:::i;:::-;7463:25;;7502:20;7520:1;7502:20;:::i;:::-;7497:25;;7557:1;7554;7550:9;7579:30;7597:11;7579:30;:::i;:::-;7568:41;;7758:1;7749:7;7745:15;7742:1;7739:22;7719:1;7712:9;7692:83;7669:139;;7788:18;;:::i;:::-;7669:139;7453:362;7405:410;;;;:::o;7821:180::-;7869:77;7866:1;7859:88;7966:4;7963:1;7956:15;7990:4;7987:1;7980:15;8007:185;8047:1;8064:20;8082:1;8064:20;:::i;:::-;8059:25;;8098:20;8116:1;8098:20;:::i;:::-;8093:25;;8137:1;8127:35;;8142:18;;:::i;:::-;8127:35;8184:1;8181;8177:9;8172:14;;8007:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "754800",
								"executionCost": "784",
								"totalCost": "755584"
							},
							"external": {
								"asset()": "infinite",
								"calculateOrig()": "infinite",
								"calculateWithCachedDecimals()": "infinite",
								"calculateWithScalingFactor()": "infinite",
								"liquidityProvider()": "infinite",
								"updateAsset(address)": "24781",
								"updateLiquidityProvider(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 4186,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220993d71bb92f2659513d94eb6777b50094a91e4f788410b28c954f5c761d903a164736f6c63430008140033",
									".code": [
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "83781FA9"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "83781FA9"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "9B3E9AB8"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "CD5C645C"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "F141B52B"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "38D52E0F"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "5B8BEC55"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "5D0B41F8"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 4186,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 985,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 985,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2452,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1583,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1583,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3380,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3380,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1081,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1081,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1480,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1480,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 936,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2545,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2567,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2530,
											"end": 2567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2530,
											"end": 2567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "1E8480"
										},
										{
											"begin": 2577,
											"end": 2599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "43CD8F7E"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2745,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2745,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2717,
											"end": 2784,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2819,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2795,
											"end": 2851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2883,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2930,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 3093,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2893,
											"end": 3093,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2987,
											"end": 3000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2984,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2967,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2967,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2962,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2962,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 3001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3060,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3038,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3024,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3023,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3022,
											"end": 3082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3022,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3082,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3022,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3015,
											"end": 3082,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 3093,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2893,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3300,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3102,
											"end": 3300,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3189,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3176,
											"end": 3209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3176,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3176,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3171,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3271,
											"end": 3288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3267,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3239,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3232,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3232,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3231,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3231,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3231,
											"end": 3289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3231,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3231,
											"end": 3289,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3231,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3224,
											"end": 3289,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3300,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3102,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3336,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3336,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3331,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3324,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3317,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3316,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3316,
											"end": 3354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3316,
											"end": 3354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3316,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3316,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3316,
											"end": 3354,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3316,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1663,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1648,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1E8480"
										},
										{
											"begin": 1695,
											"end": 1717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "43CD8F7E"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1781,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1900,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1863,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1863,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1902,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1835,
											"end": 1902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1967,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1967,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1967,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1937,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1913,
											"end": 1969,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 1969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 1969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2171,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1980,
											"end": 2171,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2138,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2138,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2082,
											"end": 2115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2082,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2082,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2077,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2058,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2057,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2057,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2056,
											"end": 2160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2056,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2160,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2056,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2033,
											"end": 2160,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2171,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1980,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2217,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2180,
											"end": 2385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2354,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2352,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2297,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2292,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2292,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2257,
											"end": 2271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2256,
											"end": 2332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2256,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2256,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2256,
											"end": 2374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2256,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2374,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2256,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2374,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2385,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2180,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2421,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2421,
											"end": 2438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2421,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2438,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2421,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2416,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2409,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2402,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2401,
											"end": 2439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2401,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2439,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2401,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3496,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3459,
											"end": 3496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "PUSH",
											"source": 5,
											"value": "1E8480"
										},
										{
											"begin": 3506,
											"end": 3528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3597,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3574,
											"end": 3597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3619,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3832,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3570,
											"end": 3832,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3682,
											"end": 3701,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3679,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3656,
											"end": 3679,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3656,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3656,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3701,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3656,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3651,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3651,
											"end": 3702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3651,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3702,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3651,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3793,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3793,
											"end": 3820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3793,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3820,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3793,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 3755,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3741,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3741,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3739,
											"end": 3821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3739,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3821,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3739,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3716,
											"end": 3821,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3832,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3570,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3890,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3871,
											"end": 3890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3868,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3845,
											"end": 3868,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 4117,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3841,
											"end": 4117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3972,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3949,
											"end": 3972,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3927,
											"end": 3946,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3927,
											"end": 3972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3927,
											"end": 3972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3972,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3927,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3922,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3922,
											"end": 3973,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3973,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3922,
											"end": 3973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3973,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3922,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3973,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3906,
											"end": 3973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4082,
											"end": 4105,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4078,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4078,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4011,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4010,
											"end": 4058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4010,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4058,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4010,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4010,
											"end": 4106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4010,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4106,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4010,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3987,
											"end": 4106,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 4117,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3841,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4176,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4157,
											"end": 4176,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4153,
											"end": 4176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4141,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4134,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4133,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4133,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4133,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "PUSH",
											"source": 5,
											"value": "43CD8F7E"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1283,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1401,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1364,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1364,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1338,
											"end": 1403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1338,
											"end": 1403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1403,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1435,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1467,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1413,
											"end": 1467,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1413,
											"end": 1467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1467,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 485,
											"end": 624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 548,
											"end": 557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 581,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 581,
											"end": 618,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 568,
											"end": 618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 630,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 730,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 730,
											"end": 780,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 730,
											"end": 780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 718,
											"end": 781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 630,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 914,
											"end": 940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 914,
											"end": 940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 950,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 793,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1199,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1047,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1156,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1388,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1205,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1375,
											"end": 1380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1318,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1668,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1394,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1564,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1661,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1564,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1394,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1751,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1674,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1875,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1757,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1844,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1844,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1757,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 2103,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1881,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2001,
											"end": 2010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2093,
											"end": 2094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2025,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 2103,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 2103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 2103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 2103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 2103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2190,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2502,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2636,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2766,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2905,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2925,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3070,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3255,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3146,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3225,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3249,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3225,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3409,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3261,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3347,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3347,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3345,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3385,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3327,
											"end": 3403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3327,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3584,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3415,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3532,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3578,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3532,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3584,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3967,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3708,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3725,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3728,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3728,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3690,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3873,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3950,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3873,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3967,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4059,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3973,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4183,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4065,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4152,
											"end": 4157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4136,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4158,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4136,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4159,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4116,
											"end": 4177,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4177,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4116,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4328,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4189,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4282,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4316,
											"end": 4321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4291,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4291,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4328,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4681,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4334,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4422,
											"end": 4454,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4538,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4419,
											"end": 4538,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4457,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4457,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4536,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4457,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4538,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4419,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4645,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4602,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4664,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4602,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4664,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4681,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4867,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4687,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4829,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4822,
											"end": 4837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 5067,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4873,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4933,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4985,
											"end": 4986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4967,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4962,
											"end": 4987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4962,
											"end": 4987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5013,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5037,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5060,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5023,
											"end": 5060,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5040,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5060,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5023,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 5067,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 5067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 5067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 5067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5175,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5073,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5115,
											"end": 5123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5155,
											"end": 5168,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5322,
											"end": 5330,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5334,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5425,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5432,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5433,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5456,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5406,
											"end": 5456,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5436,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5456,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5406,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5476,
											"end": 5484,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5469,
											"end": 5920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5906,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5920,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5469,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 6004,
											"end": 6012,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5981,
											"end": 6013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6013,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 6013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5311,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 6029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6270,
											"end": 6310,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6292,
											"end": 6302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6303,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6303,
											"end": 6308,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6310,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6270,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6464,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6494,
											"end": 6685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6685,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6494,
											"end": 6685,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6408,
											"end": 6685,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 6458,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6478,
											"end": 6483,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6685,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6494,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6539,
											"end": 6542,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6529,
											"end": 6537,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6543,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6523,
											"end": 6566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6546,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6523,
											"end": 6566,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6523,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6603,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6588,
											"end": 6604,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6633,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6634,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6637,
											"end": 6655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6617,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6685,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6408,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6794,
											"end": 6796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6792,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6781,
											"end": 6797,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6769,
											"end": 6773,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6779,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6744,
											"end": 6746,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 6734,
											"end": 6742,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6747,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6808,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6940,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6694,
											"end": 6940,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6859,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6889,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6912,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6872,
											"end": 6912,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6892,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6912,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6872,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6925,
											"end": 6930,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6940,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6694,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 6991,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6965,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6965,
											"end": 7007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7007,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6965,
											"end": 7007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 7007,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 7007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 7007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 7007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7037,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7030,
											"end": 7044,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 7028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7020,
											"end": 7045,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7048,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7048,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7102,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 7108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7399,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7114,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7198,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7198,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7198,
											"end": 7221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7198,
											"end": 7221,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7198,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7260,
											"end": 7268,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7242,
											"end": 7269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7269,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7242,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7325,
											"end": 7391,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7323,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7288,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7392,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7288,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7399,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7815,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7405,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7468,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7468,
											"end": 7488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7468,
											"end": 7488,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7468,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7520,
											"end": 7521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7502,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7557,
											"end": 7558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7550,
											"end": 7559,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7597,
											"end": 7608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7579,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7609,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7579,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7749,
											"end": 7756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7745,
											"end": 7760,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 7743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7739,
											"end": 7761,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7712,
											"end": 7721,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7692,
											"end": 7775,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7669,
											"end": 7808,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7788,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7788,
											"end": 7806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7788,
											"end": 7806,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7788,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 7808,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 7669,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7815,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 8001,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7821,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7869,
											"end": 7946,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7966,
											"end": 7970,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7956,
											"end": 7971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7990,
											"end": 7994,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 7995,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8192,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 8007,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8047,
											"end": 8048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8082,
											"end": 8083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8064,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8098,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8098,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8118,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8127,
											"end": 8162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8142,
											"end": 8160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8142,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8162,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8127,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8177,
											"end": 8186,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SecuritizeRedemption.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"asset()": "38d52e0f",
							"calculateOrig()": "83781fa9",
							"calculateWithCachedDecimals()": "9b3e9ab8",
							"calculateWithScalingFactor()": "5d0b41f8",
							"liquidityProvider()": "5b8bec55",
							"updateAsset(address)": "f141b52b",
							"updateLiquidityProvider(address)": "cd5c645c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateOrig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateWithCachedDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateWithScalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityProvider\",\"outputs\":[{\"internalType\":\"contract ILiquidityProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"updateAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"}],\"name\":\"updateLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SecuritizeRedemption.sol\":\"SecuritizeRedemption\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SecuritizeRedemption.sol\":{\"keccak256\":\"0xfd5ea805c4efd2463c611498a43c389a4ad23dadc3169b718355e6d34f4d5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://893b3fafff2a4cb9ab62c85ba0df6e47326a5487e62d41ae3e5d9f4bc22a9fbb\",\"dweb:/ipfs/QmfRC5U3DDuWzn9DZrc8iL8yfFbocxHSkj3eFhQ6Fsisyn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 855,
								"contract": "contracts/SecuritizeRedemption.sol:SecuritizeRedemption",
								"label": "liquidityProvider",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ILiquidityProvider)796"
							},
							{
								"astId": 858,
								"contract": "contracts/SecuritizeRedemption.sol:SecuritizeRedemption",
								"label": "asset",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)651"
							},
							{
								"astId": 860,
								"contract": "contracts/SecuritizeRedemption.sol:SecuritizeRedemption",
								"label": "cachedLiquidityDecimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 862,
								"contract": "contracts/SecuritizeRedemption.sol:SecuritizeRedemption",
								"label": "cachedAssetDecimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ILiquidityProvider)796": {
								"encoding": "inplace",
								"label": "contract ILiquidityProvider",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/SecuritizeRedemption.sol": {
				"ast": {
					"absolutePath": "contracts/SecuritizeRedemption.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"Erc20Token": [
							825
						],
						"ILiquidityProvider": [
							796
						],
						"LiquidityProvider": [
							852
						],
						"SecuritizeRedemption": [
							1202
						]
					},
					"id": 1203,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 652,
							"src": "64:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "72:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILiquidityProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 796,
							"linearizedBaseContracts": [
								796
							],
							"name": "ILiquidityProvider",
							"nameLocation": "199:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "43cd8f7e",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityToken",
									"nameLocation": "233:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:5"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "273:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$651",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 791,
														"name": "ERC20",
														"nameLocations": [
															"273:5:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 651,
														"src": "273:5:5"
													},
													"referencedDeclaration": 651,
													"src": "273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:7:5"
									},
									"scope": 796,
									"src": "224:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1203,
							"src": "189:93:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 797,
										"name": "ERC20",
										"nameLocations": [
											"307:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "307:5:5"
									},
									"id": 798,
									"nodeType": "InheritanceSpecifier",
									"src": "307:5:5"
								}
							],
							"canonicalName": "Erc20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 825,
							"linearizedBaseContracts": [
								825,
								651,
								41,
								755,
								729,
								785
							],
							"name": "Erc20Token",
							"nameLocation": "293:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 801,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "325:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "319:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 799,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "319:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "337:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "399:38:5",
										"statements": [
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 810,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "409:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 811,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "421:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "409:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "409:21:5"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6e616d65",
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60",
														"typeString": "literal_string \"name\""
													},
													"value": "name"
												},
												{
													"hexValue": "73796d626f6c",
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "389:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_be16b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4",
														"typeString": "literal_string \"symbol\""
													},
													"value": "symbol"
												}
											],
											"id": 808,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 805,
												"name": "ERC20",
												"nameLocations": [
													"375:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "375:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "375:23:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "364:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "358:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 802,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "358:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:17:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:5"
									},
									"scope": 825,
									"src": "346:91:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "508:33:5",
										"statements": [
											{
												"expression": {
													"id": 821,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "525:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 820,
												"id": 822,
												"nodeType": "Return",
												"src": "518:16:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "452:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 817,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "483:8:5"
									},
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "501:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 818,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "501:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:7:5"
									},
									"scope": 825,
									"src": "443:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1203,
							"src": "284:259:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 826,
										"name": "ILiquidityProvider",
										"nameLocations": [
											"575:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "575:18:5"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "575:18:5"
								}
							],
							"canonicalName": "LiquidityProvider",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 852,
							"linearizedBaseContracts": [
								852,
								796
							],
							"name": "LiquidityProvider",
							"nameLocation": "554:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5b8bec55",
									"id": 830,
									"mutability": "mutable",
									"name": "liquidityProvider",
									"nameLocation": "613:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 852,
									"src": "600:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 829,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 828,
											"name": "ERC20",
											"nameLocations": [
												"600:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "600:5:5"
										},
										"referencedDeclaration": 651,
										"src": "600:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "725:68:5",
										"statements": [
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "liquidityProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 837,
																"name": "liquidityProviderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "761:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 836,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "755:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "755:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "735:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "735:51:5"
											}
										]
									},
									"functionSelector": "cd5c645c",
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateLiquidityProvider",
									"nameLocation": "646:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "liquidityProviderAddress",
												"nameLocation": "678:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "670:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:34:5"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:0:5"
									},
									"scope": 852,
									"src": "637:156:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "855:41:5",
										"statements": [
											{
												"expression": {
													"id": 848,
													"name": "liquidityProvider",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 830,
													"src": "872:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"functionReturnParameters": 847,
												"id": 849,
												"nodeType": "Return",
												"src": "865:24:5"
											}
										]
									},
									"functionSelector": "43cd8f7e",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityToken",
									"nameLocation": "808:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:5"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "848:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$651",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 844,
														"name": "ERC20",
														"nameLocations": [
															"848:5:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 651,
														"src": "848:5:5"
													},
													"referencedDeclaration": 651,
													"src": "848:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:7:5"
									},
									"scope": 852,
									"src": "799:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1203,
							"src": "545:353:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SecuritizeRedemption",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1202,
							"linearizedBaseContracts": [
								1202
							],
							"name": "SecuritizeRedemption",
							"nameLocation": "909:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5b8bec55",
									"id": 855,
									"mutability": "mutable",
									"name": "liquidityProvider",
									"nameLocation": "962:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "936:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
										"typeString": "contract ILiquidityProvider"
									},
									"typeName": {
										"id": 854,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 853,
											"name": "ILiquidityProvider",
											"nameLocations": [
												"936:18:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 796,
											"src": "936:18:5"
										},
										"referencedDeclaration": 796,
										"src": "936:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
											"typeString": "contract ILiquidityProvider"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38d52e0f",
									"id": 858,
									"mutability": "mutable",
									"name": "asset",
									"nameLocation": "998:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "985:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 857,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 856,
											"name": "ERC20",
											"nameLocations": [
												"985:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "985:5:5"
										},
										"referencedDeclaration": 651,
										"src": "985:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 860,
									"mutability": "mutable",
									"name": "cachedLiquidityDecimals",
									"nameLocation": "1018:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1010:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 859,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1010:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 862,
									"mutability": "mutable",
									"name": "cachedAssetDecimals",
									"nameLocation": "1055:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1047:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 861,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1047:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "1151:323:5",
										"statements": [
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 867,
														"name": "liquidityProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "1161:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
															"typeString": "contract ILiquidityProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 869,
																"name": "_liquidityProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "1200:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 868,
															"name": "ILiquidityProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1181:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILiquidityProvider_$796_$",
																"typeString": "type(contract ILiquidityProvider)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1181:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
															"typeString": "contract ILiquidityProvider"
														}
													},
													"src": "1161:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
														"typeString": "contract ILiquidityProvider"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "1161:58:5"
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "liquidityTokenAddress",
														"nameLocation": "1238:21:5",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "1230:29:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1230:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 877,
																	"name": "liquidityProvider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "1283:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
																		"typeString": "contract ILiquidityProvider"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1301:14:5",
																"memberName": "liquidityToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "1283:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$651_$",
																	"typeString": "function () view external returns (contract ERC20)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1283:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														],
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1262:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1262:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1262:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1230:97:5"
											},
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 882,
														"name": "cachedLiquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1338:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "liquidityTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "1370:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 883,
																	"name": "ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "1364:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																		"typeString": "type(contract ERC20)"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1364:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$651",
																	"typeString": "contract ERC20"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1393:8:5",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 215,
															"src": "1364:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1364:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1338:65:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "1338:65:5"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "cachedAssetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "1413:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 894,
																				"name": "asset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "1449:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$651",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$651",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1441:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 892,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1441:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1441:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 891,
																	"name": "ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "1435:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																		"typeString": "type(contract ERC20)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$651",
																	"typeString": "contract ERC20"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1457:8:5",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 215,
															"src": "1435:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1435:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1413:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "1413:54:5"
											}
										]
									},
									"functionSelector": "cd5c645c",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateLiquidityProvider",
									"nameLocation": "1090:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "1122:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1114:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:28:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:5"
									},
									"scope": 1202,
									"src": "1081:393:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "1526:38:5",
										"statements": [
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 907,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1536:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 909,
																"name": "_asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "1550:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 908,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "1544:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1544:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "1536:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "1536:21:5"
											}
										]
									},
									"functionSelector": "f141b52b",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAsset",
									"nameLocation": "1489:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "1509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "1501:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:16:5"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:0:5"
									},
									"scope": 1202,
									"src": "1480:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "1638:808:5",
										"statements": [
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "1656:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "1648:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1648:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"hexValue": "31303030303030303030303030303030303030",
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1666:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1000000000000000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1648:37:5"
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1703:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "1695:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1695:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"initialValue": {
													"hexValue": "32303030303030",
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2000000_by_1",
														"typeString": "int_const 2000000"
													},
													"value": "2000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1695:22:5"
											},
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "liquidityTokenAddress",
														"nameLocation": "1736:21:5",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "1728:29:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1728:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 931,
																	"name": "liquidityProvider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "1781:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
																		"typeString": "contract ILiquidityProvider"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1799:14:5",
																"memberName": "liquidityToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "1781:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$651_$",
																	"typeString": "function () view external returns (contract ERC20)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1781:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														],
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1760:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 929,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1760:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1728:97:5"
											},
											{
												"assignments": [
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "liquidityDecimals",
														"nameLocation": "1843:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "1835:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1835:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 939,
																	"name": "liquidityTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "1869:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 938,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "1863:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1863:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1892:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "1863:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1835:67:5"
											},
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "assetDecimals",
														"nameLocation": "1921:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "1913:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1913:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 949,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 858,
																			"src": "1951:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1943:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1943:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1943:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 946,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "1937:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1937:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1959:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "1937:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1913:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "liquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "1984:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 956,
														"name": "assetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2004:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1984:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "1980:191:5",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "2019:152:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 960,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 958,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 920,
																							"src": "2058:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 959,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 924,
																							"src": "2068:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2058:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 961,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2057:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 967,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 962,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2077:2:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 965,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 963,
																										"name": "liquidityDecimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 937,
																										"src": "2082:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 964,
																										"name": "assetDecimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 945,
																										"src": "2102:13:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2082:33:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 966,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "2081:35:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2077:39:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 968,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2076:41:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2057:60:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 970,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2056:62:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2138:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 972,
																				"name": "liquidityDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "2142:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2138:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 974,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2137:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2056:104:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 918,
															"id": 976,
															"nodeType": "Return",
															"src": "2033:127:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 979,
														"name": "liquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2184:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 980,
														"name": "assetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2204:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "2180:205:5",
												"trueBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "2219:166:5",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 982,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 920,
																					"src": "2257:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 983,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 924,
																					"src": "2267:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2257:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 985,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2256:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2292:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 989,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 987,
																								"name": "assetDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 945,
																								"src": "2297:13:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 988,
																								"name": "liquidityDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 937,
																								"src": "2313:17:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2297:33:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 990,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2296:35:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2292:39:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 992,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2291:41:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2256:76:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2352:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 995,
																				"name": "liquidityDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "2356:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2352:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 997,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2351:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2256:118:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 918,
															"id": 999,
															"nodeType": "Return",
															"src": "2233:141:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1002,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "2402:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1003,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "2412:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2402:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1005,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2401:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2421:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1007,
																	"name": "assetDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "2425:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2421:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1009,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2420:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2401:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 1011,
												"nodeType": "Return",
												"src": "2394:45:5"
											}
										]
									},
									"functionSelector": "83781fa9",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateOrig",
									"nameLocation": "1592:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:2:5"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1629:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:9:5"
									},
									"scope": 1202,
									"src": "1583:863:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "2520:841:5",
										"statements": [
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "2538:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2530:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"hexValue": "31303030303030303030303030303030303030",
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2548:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1000000000000000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:37:5"
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "2585:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2577:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1022,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1025,
												"initialValue": {
													"hexValue": "32303030303030",
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2592:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2000000_by_1",
														"typeString": "int_const 2000000"
													},
													"value": "2000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:22:5"
											},
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "liquidityTokenAddress",
														"nameLocation": "2618:21:5",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2610:29:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1026,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1030,
																	"name": "liquidityProvider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2663:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILiquidityProvider_$796",
																		"typeString": "contract ILiquidityProvider"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2681:14:5",
																"memberName": "liquidityToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "2663:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$651_$",
																	"typeString": "function () view external returns (contract ERC20)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														],
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2642:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1028,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2642:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2642:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:97:5"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "liquidityDecimals",
														"nameLocation": "2725:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2717:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2717:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1038,
																	"name": "liquidityTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "2751:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1037,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2745:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2745:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2774:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "2745:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2717:67:5"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "assetDecimals",
														"nameLocation": "2803:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2795:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2795:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1048,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 858,
																			"src": "2833:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ERC20_$651",
																				"typeString": "contract ERC20"
																			}
																		],
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2825:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1046,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2825:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2825:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1045,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "2819:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2819:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2841:8:5",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "2819:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2819:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2795:56:5"
											},
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "scalingFactor",
														"nameLocation": "2870:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2862:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1054,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2862:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"nodeType": "VariableDeclarationStatement",
												"src": "2862:21:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1057,
														"name": "liquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2897:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1058,
														"name": "assetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2917:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2897:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "2893:200:5",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "2932:161:5",
													"statements": [
														{
															"expression": {
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1060,
																	"name": "scalingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2946:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2962:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1062,
																					"name": "liquidityDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "2967:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1063,
																					"name": "assetDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1044,
																					"src": "2987:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2967:33:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1065,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2966:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2962:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2946:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1068,
															"nodeType": "ExpressionStatement",
															"src": "2946:55:5"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1071,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1069,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1019,
																							"src": "3024:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1070,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1023,
																							"src": "3034:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3024:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1072,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3023:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1073,
																				"name": "scalingFactor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "3042:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3023:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3022:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3060:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1077,
																				"name": "liquidityDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1036,
																				"src": "3064:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3060:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1079,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3059:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3022:60:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1017,
															"id": 1081,
															"nodeType": "Return",
															"src": "3015:67:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1084,
														"name": "liquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "3106:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1085,
														"name": "assetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3126:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3106:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "IfStatement",
												"src": "3102:198:5",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "3141:159:5",
													"statements": [
														{
															"expression": {
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1087,
																	"name": "scalingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "3155:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3171:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1089,
																					"name": "assetDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1044,
																					"src": "3176:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1090,
																					"name": "liquidityDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "3192:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3176:33:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1092,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3175:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3171:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3155:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "3155:55:5"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1096,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1019,
																					"src": "3232:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1097,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "3242:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3232:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1099,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3231:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1100,
																		"name": "scalingFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "3250:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3231:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3267:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1103,
																				"name": "liquidityDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1036,
																				"src": "3271:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3267:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1105,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3266:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3231:58:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1017,
															"id": 1107,
															"nodeType": "Return",
															"src": "3224:65:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1110,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "3317:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1111,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "3327:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3317:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1113,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3316:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3336:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1115,
																	"name": "assetDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3340:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3336:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3335:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3316:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1119,
												"nodeType": "Return",
												"src": "3309:45:5"
											}
										]
									},
									"functionSelector": "5d0b41f8",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWithScalingFactor",
									"nameLocation": "2461:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:9:5"
									},
									"scope": 1202,
									"src": "2452:909:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "3449:735:5",
										"statements": [
											{
												"assignments": [
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "3467:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3459:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3459:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"hexValue": "31303030303030303030303030303030303030",
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3477:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1000000000000000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3459:37:5"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "3514:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3506:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3506:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"hexValue": "32303030303030",
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3521:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2000000_by_1",
														"typeString": "int_const 2000000"
													},
													"value": "2000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3506:22:5"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "scalingFactor",
														"nameLocation": "3547:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3539:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"nodeType": "VariableDeclarationStatement",
												"src": "3539:21:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "cachedLiquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3574:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1138,
														"name": "cachedAssetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "3600:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3574:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "3570:262:5",
												"trueBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "3621:211:5",
													"statements": [
														{
															"expression": {
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1140,
																	"name": "scalingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "3635:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3651:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1142,
																					"name": "cachedLiquidityDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "3656:23:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1143,
																					"name": "cachedAssetDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 862,
																					"src": "3682:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3656:45:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1145,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3655:47:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3651:51:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3635:67:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1148,
															"nodeType": "ExpressionStatement",
															"src": "3635:67:5"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1151,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1149,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1127,
																							"src": "3741:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1150,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1131,
																							"src": "3751:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3741:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1152,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3740:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1153,
																				"name": "scalingFactor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "3759:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3740:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1155,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3739:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3793:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1157,
																				"name": "cachedLiquidityDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "3797:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3793:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1159,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3792:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3739:82:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1125,
															"id": 1161,
															"nodeType": "Return",
															"src": "3716:105:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "cachedLiquidityDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3845:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1165,
														"name": "cachedAssetDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "3871:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3845:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "IfStatement",
												"src": "3841:276:5",
												"trueBody": {
													"id": 1188,
													"nodeType": "Block",
													"src": "3892:225:5",
													"statements": [
														{
															"expression": {
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1167,
																	"name": "scalingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "3906:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3922:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1169,
																					"name": "cachedAssetDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 862,
																					"src": "3927:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1170,
																					"name": "cachedLiquidityDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "3949:23:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3927:45:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1172,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3926:47:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3922:51:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3906:67:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1175,
															"nodeType": "ExpressionStatement",
															"src": "3906:67:5"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1176,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "4011:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1177,
																					"name": "rate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "4021:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4011:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1179,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4010:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1180,
																		"name": "scalingFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "4045:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4010:48:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4078:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1183,
																				"name": "cachedLiquidityDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "4082:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4078:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4077:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4010:96:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1125,
															"id": 1187,
															"nodeType": "Return",
															"src": "3987:119:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "4134:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1191,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "4144:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4134:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1193,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4133:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4153:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1195,
																	"name": "cachedAssetDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "4157:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4153:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1197,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4152:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4133:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1199,
												"nodeType": "Return",
												"src": "4126:51:5"
											}
										]
									},
									"functionSelector": "9b3e9ab8",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWithCachedDecimals",
									"nameLocation": "3389:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3416:2:5"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3440:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:5"
									},
									"scope": 1202,
									"src": "3380:804:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1203,
							"src": "900:3286:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:4148:5"
				},
				"id": 5
			}
		}
	}
}