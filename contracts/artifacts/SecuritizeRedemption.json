{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE8 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B3E9AB8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9B3E9AB8 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xDCFFA7F7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xF141B52B EQ PUSH2 0x15A JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x5D0B41F8 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x83781FA9 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x3C7 JUMPI DUP2 DUP4 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x450 JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x424 JUMPI DUP3 DUP3 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x40D SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x450 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x431 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP6 DUP8 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x657 JUMPI DUP2 PUSH1 0xA PUSH2 0x613 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP6 DUP8 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x641 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6DB JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x6B0 JUMPI DUP2 PUSH1 0xA PUSH2 0x66C SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP3 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP6 DUP8 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x69A SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6DB JUMP JUMPDEST DUP1 PUSH1 0xA PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x752 JUMPI PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x729 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP5 PUSH2 0x735 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x73F SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x749 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x76D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x789 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP5 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0xA9C JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP5 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4F PUSH2 0xB4A PUSH2 0xB45 DUP5 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB60 DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB71 DUP3 PUSH2 0xB56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB81 DUP2 PUSH2 0xB67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9A PUSH0 DUP4 ADD DUP5 PUSH2 0xB78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAA DUP3 PUSH2 0xB56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD3 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEB DUP2 PUSH2 0xBD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC04 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xC18 DUP3 PUSH2 0xB0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC28 DUP2 PUSH2 0xC0E JUMP JUMPDEST DUP2 EQ PUSH2 0xC32 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC43 DUP2 PUSH2 0xC1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5D PUSH2 0xC0A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC6B DUP5 DUP3 DUP6 ADD PUSH2 0xC35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC7E DUP3 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8E DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP2 EQ PUSH2 0xC98 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA9 DUP2 PUSH2 0xC85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCC3 PUSH2 0xC0A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCD1 DUP5 DUP3 DUP6 ADD PUSH2 0xC9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEF DUP2 PUSH2 0xCDA JUMP JUMPDEST DUP2 EQ PUSH2 0xCF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0A DUP2 PUSH2 0xCE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0xC0A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD32 DUP5 DUP3 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD72 DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7D DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD95 JUMPI PUSH2 0xD94 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xDF0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCB PUSH2 0xD3B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xDDB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xDE9 DUP6 PUSH2 0xD9B JUMP JUMPDEST SWAP5 POP PUSH2 0xDB0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE08 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST DUP2 PUSH2 0xE15 JUMPI PUSH0 SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE35 JUMPI PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE47 JUMPI PUSH2 0xE46 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0xD3B JUMP JUMPDEST JUMPDEST POP PUSH2 0xEC3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE99 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xE94 JUMPI PUSH2 0xE93 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEBC PUSH2 0xD3B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED4 DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDF DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP PUSH2 0xF0C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xDF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF1E DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF29 DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF37 DUP2 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0xD3B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF8C DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF55 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xE9 0xDD LOG3 PUSH12 0x5EEF4181BA38BDDDCF3AB7DE ADDMOD 0xB0 EXTCODEHASH ADDRESS SWAP6 CALL DELEGATECALL 0xCE 0x5D RETURNDATACOPY DUP5 0xB4 DUP15 0xD9 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
			"sourceMap": "1034:4059:5:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@asset_858": {
					"entryPoint": 374,
					"id": 858,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@calculateOrig_1013": {
					"entryPoint": 1107,
					"id": 1013,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@calculateWithCachedDecimalsAndScalingFactor_1272": {
					"entryPoint": 2495,
					"id": 1272,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@calculateWithCachedDecimals_1192": {
					"entryPoint": 1758,
					"id": 1192,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@calculateWithScalingFactor_1121": {
					"entryPoint": 446,
					"id": 1121,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@liquidityProvider_855": {
					"entryPoint": 411,
					"id": 855,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@updateAsset_914": {
					"entryPoint": 2762,
					"id": 914,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@updateLiquidityProvider_902": {
					"entryPoint": 2015,
					"id": 902,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_t_address": {
					"entryPoint": 3125,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_contract$_ERC20_$651_fromMemory": {
					"entryPoint": 3227,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint8_fromMemory": {
					"entryPoint": 3324,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 3145,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_contract$_ERC20_$651_fromMemory": {
					"entryPoint": 3247,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint8_fromMemory": {
					"entryPoint": 3344,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
					"entryPoint": 2936,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack": {
					"entryPoint": 2993,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 3042,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
					"entryPoint": 2951,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed": {
					"entryPoint": 3008,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 3057,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
					"entryPoint": 3970,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_helper": {
					"entryPoint": 3495,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 2
				},
				"checked_exp_t_uint256_t_uint256": {
					"entryPoint": 3786,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_unsigned": {
					"entryPoint": 3577,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 3860,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_sub_t_uint256": {
					"entryPoint": 3432,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 3086,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_contract$_ERC20_$651": {
					"entryPoint": 3188,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 2829,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 3033,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint8": {
					"entryPoint": 3290,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_ERC20_$651_to_t_address": {
					"entryPoint": 2919,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_ILiquidityProvider_$796_to_t_address": {
					"entryPoint": 2976,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_address": {
					"entryPoint": 2902,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_uint160": {
					"entryPoint": 2869,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 2860,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 3387,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
					"entryPoint": 3925,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 3082,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"shift_right_1_unsigned": {
					"entryPoint": 3483,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"validator_revert_t_address": {
					"entryPoint": 3103,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_contract$_ERC20_$651": {
					"entryPoint": 3205,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint8": {
					"entryPoint": 3302,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:8195:6",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "52:81:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "62:65:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "77:5:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "84:42:6",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "73:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "73:54:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "62:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "34:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "44:7:6",
										"type": ""
									}
								],
								"src": "7:126:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "171:28:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "181:12:6",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "188:5:6"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "181:3:6"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "157:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "167:3:6",
										"type": ""
									}
								],
								"src": "139:60:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "265:82:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "275:66:6",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "333:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "315:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:24:6"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "306:8:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "306:34:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "288:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "288:53:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "275:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "245:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "255:9:6",
										"type": ""
									}
								],
								"src": "205:142:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "413:66:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "423:50:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "467:5:6"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "436:30:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "436:37:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "423:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "393:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "403:9:6",
										"type": ""
									}
								],
								"src": "353:126:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "558:66:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "568:50:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "612:5:6"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "581:30:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "581:37:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "568:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_ERC20_$651_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "538:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "548:9:6",
										"type": ""
									}
								],
								"src": "485:139:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "708:79:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "725:3:6"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "774:5:6"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_ERC20_$651_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "730:43:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "730:50:6"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "718:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "718:63:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "718:63:6"
										}
									]
								},
								"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "696:5:6",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "703:3:6",
										"type": ""
									}
								],
								"src": "630:157:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "904:137:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "914:26:6",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "926:9:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "937:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "922:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "922:18:6"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "914:4:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1007:6:6"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1020:9:6"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1031:1:6",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1016:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1016:17:6"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "950:56:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "950:84:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "950:84:6"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "876:9:6",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "888:6:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "899:4:6",
										"type": ""
									}
								],
								"src": "793:248:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1133:66:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1143:50:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1187:5:6"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "1156:30:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1156:37:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "1143:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_ILiquidityProvider_$796_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1113:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "1123:9:6",
										"type": ""
									}
								],
								"src": "1047:152:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1296:92:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1313:3:6"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1375:5:6"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_ILiquidityProvider_$796_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "1318:56:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1318:63:6"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1306:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1306:76:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1306:76:6"
										}
									]
								},
								"name": "abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1284:5:6",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1291:3:6",
										"type": ""
									}
								],
								"src": "1205:183:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1518:150:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1528:26:6",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1540:9:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1551:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1536:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1536:18:6"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1528:4:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1634:6:6"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1647:9:6"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1658:1:6",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1643:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1643:17:6"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1564:69:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1564:97:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1564:97:6"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1490:9:6",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1502:6:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1513:4:6",
										"type": ""
									}
								],
								"src": "1394:274:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1719:32:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1729:16:6",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1740:5:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1729:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1701:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1711:7:6",
										"type": ""
									}
								],
								"src": "1674:77:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1822:53:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1839:3:6"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1862:5:6"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1844:17:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1844:24:6"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1832:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1832:37:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1832:37:6"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1810:5:6",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1817:3:6",
										"type": ""
									}
								],
								"src": "1757:118:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1979:124:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1989:26:6",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2001:9:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2012:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1997:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1997:18:6"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1989:4:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2069:6:6"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2082:9:6"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2093:1:6",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2078:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "2078:17:6"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2025:43:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2025:71:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2025:71:6"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1951:9:6",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1963:6:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1974:4:6",
										"type": ""
									}
								],
								"src": "1881:222:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2149:35:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2159:19:6",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2175:2:6",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2169:5:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2169:9:6"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2159:6:6"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "2142:6:6",
										"type": ""
									}
								],
								"src": "2109:75:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2279:28:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2296:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2299:1:6",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2289:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2289:12:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2289:12:6"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "2190:117:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2402:28:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2419:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2422:1:6",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2412:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2412:12:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2412:12:6"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "2313:117:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2481:51:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2491:35:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2520:5:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2502:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2502:24:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2491:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2463:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2473:7:6",
										"type": ""
									}
								],
								"src": "2436:96:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2581:79:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2638:16:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2647:1:6",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2650:1:6",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2640:6:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "2640:12:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2640:12:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2604:5:6"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2611:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:24:6"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2601:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "2601:35:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2594:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2594:43:6"
											},
											"nodeType": "YulIf",
											"src": "2591:63:6"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2574:5:6",
										"type": ""
									}
								],
								"src": "2538:122:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2718:87:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2728:29:6",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "2750:6:6"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "2737:12:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2737:20:6"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2728:5:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2793:5:6"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "2766:26:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2766:33:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2766:33:6"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "2696:6:6",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2704:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2712:5:6",
										"type": ""
									}
								],
								"src": "2666:139:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2877:263:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2923:83:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "2925:77:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "2925:79:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2925:79:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2898:7:6"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2907:9:6"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2894:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "2894:23:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2919:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2890:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2890:32:6"
											},
											"nodeType": "YulIf",
											"src": "2887:119:6"
										},
										{
											"nodeType": "YulBlock",
											"src": "3016:117:6",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3031:15:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3045:1:6",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3035:6:6",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3060:63:6",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3095:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3106:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:22:6"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3115:7:6"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "3070:20:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3070:53:6"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3060:6:6"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2847:9:6",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2858:7:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2870:6:6",
										"type": ""
									}
								],
								"src": "2811:329:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3204:51:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3214:35:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3243:5:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "3225:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3225:24:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "3214:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_contract$_ERC20_$651",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3186:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "3196:7:6",
										"type": ""
									}
								],
								"src": "3146:109:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3317:92:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3387:16:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3396:1:6",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3399:1:6",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3389:6:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "3389:12:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3389:12:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3340:5:6"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3378:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_contract$_ERC20_$651",
																	"nodeType": "YulIdentifier",
																	"src": "3347:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:37:6"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3337:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3337:48:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3330:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3330:56:6"
											},
											"nodeType": "YulIf",
											"src": "3327:76:6"
										}
									]
								},
								"name": "validator_revert_t_contract$_ERC20_$651",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3310:5:6",
										"type": ""
									}
								],
								"src": "3261:148:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3491:93:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3501:22:6",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "3516:6:6"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3510:5:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3510:13:6"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3501:5:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3572:5:6"
													}
												],
												"functionName": {
													"name": "validator_revert_t_contract$_ERC20_$651",
													"nodeType": "YulIdentifier",
													"src": "3532:39:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3532:46:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3532:46:6"
										}
									]
								},
								"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "3469:6:6",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "3477:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3485:5:6",
										"type": ""
									}
								],
								"src": "3415:169:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3680:287:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3726:83:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "3728:77:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "3728:79:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3728:79:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3701:7:6"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3710:9:6"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "3697:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3697:23:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3722:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "3693:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3693:32:6"
											},
											"nodeType": "YulIf",
											"src": "3690:119:6"
										},
										{
											"nodeType": "YulBlock",
											"src": "3819:141:6",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3834:15:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3848:1:6",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3838:6:6",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3863:87:6",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:22:6"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3942:7:6"
															}
														],
														"functionName": {
															"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "3873:44:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3873:77:6"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3863:6:6"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_contract$_ERC20_$651_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3650:9:6",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "3661:7:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3673:6:6",
										"type": ""
									}
								],
								"src": "3590:377:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4016:43:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4026:27:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "4041:5:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4048:4:6",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "4037:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4037:16:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "4026:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3998:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "4008:7:6",
										"type": ""
									}
								],
								"src": "3973:86:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4106:77:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4161:16:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4170:1:6",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4173:1:6",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "4163:6:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "4163:12:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4163:12:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4129:5:6"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4152:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4136:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:22:6"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "4126:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "4126:33:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "4119:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4119:41:6"
											},
											"nodeType": "YulIf",
											"src": "4116:61:6"
										}
									]
								},
								"name": "validator_revert_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4099:5:6",
										"type": ""
									}
								],
								"src": "4065:118:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4250:78:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4260:22:6",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "4275:6:6"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "4269:5:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4269:13:6"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4260:5:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "4316:5:6"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "4291:24:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4291:31:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4291:31:6"
										}
									]
								},
								"name": "abi_decode_t_uint8_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "4228:6:6",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "4236:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4244:5:6",
										"type": ""
									}
								],
								"src": "4189:139:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4409:272:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4455:83:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4457:77:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "4457:79:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4457:79:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4430:7:6"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4439:9:6"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4426:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "4426:23:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4451:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4422:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4422:32:6"
											},
											"nodeType": "YulIf",
											"src": "4419:119:6"
										},
										{
											"nodeType": "YulBlock",
											"src": "4548:126:6",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "4563:15:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4577:1:6",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "4567:6:6",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "4592:72:6",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4636:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4647:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:22:6"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4656:7:6"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint8_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "4602:29:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "4602:62:6"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "4592:6:6"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint8_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4379:9:6",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4390:7:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4402:6:6",
										"type": ""
									}
								],
								"src": "4334:347:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4715:152:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4732:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4735:77:6",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "4725:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4725:88:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4725:88:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4829:1:6",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4832:4:6",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "4822:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4822:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4822:15:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4853:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4856:4:6",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "4846:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4846:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4846:15:6"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "4687:180:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4918:149:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4928:25:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "4951:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "4933:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4933:20:6"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "4928:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "4962:25:6",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "4985:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "4967:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4967:20:6"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "4962:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "4996:17:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5008:1:6"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5011:1:6"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5004:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5004:9:6"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "4996:4:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5038:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "5040:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5040:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "5040:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "diff",
														"nodeType": "YulIdentifier",
														"src": "5029:4:6"
													},
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5035:1:6"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5026:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5026:11:6"
											},
											"nodeType": "YulIf",
											"src": "5023:37:6"
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "4904:1:6",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "4907:1:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "4913:4:6",
										"type": ""
									}
								],
								"src": "4873:194:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5124:51:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5134:34:6",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5159:1:6",
														"type": "",
														"value": "1"
													},
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5162:5:6"
													}
												],
												"functionName": {
													"name": "shr",
													"nodeType": "YulIdentifier",
													"src": "5155:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5155:13:6"
											},
											"variableNames": [
												{
													"name": "newValue",
													"nodeType": "YulIdentifier",
													"src": "5134:8:6"
												}
											]
										}
									]
								},
								"name": "shift_right_1_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "5105:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "newValue",
										"nodeType": "YulTypedName",
										"src": "5115:8:6",
										"type": ""
									}
								],
								"src": "5073:102:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5254:775:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5264:15:6",
											"value": {
												"name": "_power",
												"nodeType": "YulIdentifier",
												"src": "5273:6:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "5264:5:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "5288:14:6",
											"value": {
												"name": "_base",
												"nodeType": "YulIdentifier",
												"src": "5297:5:6"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "5288:4:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5346:677:6",
												"statements": [
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "5434:22:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "5436:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5436:18:6"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5436:18:6"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5412:4:6"
																},
																{
																	"arguments": [
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:6"
																		},
																		{
																			"name": "base",
																			"nodeType": "YulIdentifier",
																			"src": "5427:4:6"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5418:14:6"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "5409:2:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5409:24:6"
														},
														"nodeType": "YulIf",
														"src": "5406:50:6"
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "5501:419:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5881:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5894:5:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5901:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5890:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5890:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "5881:5:6"
																		}
																	]
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "5476:8:6"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5486:1:6",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "5472:3:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5472:16:6"
														},
														"nodeType": "YulIf",
														"src": "5469:451:6"
													},
													{
														"nodeType": "YulAssignment",
														"src": "5933:23:6",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5945:4:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5951:4:6"
																}
															],
															"functionName": {
																"name": "mul",
																"nodeType": "YulIdentifier",
																"src": "5941:3:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5941:15:6"
														},
														"variableNames": [
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5933:4:6"
															}
														]
													},
													{
														"nodeType": "YulAssignment",
														"src": "5969:44:6",
														"value": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6004:8:6"
																}
															],
															"functionName": {
																"name": "shift_right_1_unsigned",
																"nodeType": "YulIdentifier",
																"src": "5981:22:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5981:32:6"
														},
														"variableNames": [
															{
																"name": "exponent",
																"nodeType": "YulIdentifier",
																"src": "5969:8:6"
															}
														]
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "5322:8:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5332:1:6",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5319:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5319:15:6"
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
												"src": "5335:2:6",
												"statements": []
											},
											"pre": {
												"nodeType": "YulBlock",
												"src": "5315:3:6",
												"statements": []
											},
											"src": "5311:712:6"
										}
									]
								},
								"name": "checked_exp_helper",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "_power",
										"nodeType": "YulTypedName",
										"src": "5209:6:6",
										"type": ""
									},
									{
										"name": "_base",
										"nodeType": "YulTypedName",
										"src": "5217:5:6",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "5224:8:6",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "5234:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "5242:5:6",
										"type": ""
									},
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "5249:4:6",
										"type": ""
									}
								],
								"src": "5181:848:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6095:1013:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6290:20:6",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6292:10:6",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6301:1:6",
															"type": "",
															"value": "1"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6292:5:6"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "6303:5:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "6280:8:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6273:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6273:16:6"
											},
											"nodeType": "YulIf",
											"src": "6270:40:6"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6335:20:6",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6337:10:6",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6346:1:6",
															"type": "",
															"value": "0"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6337:5:6"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "6348:5:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "6329:4:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6322:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6322:12:6"
											},
											"nodeType": "YulIf",
											"src": "6319:36:6"
										},
										{
											"cases": [
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "6465:20:6",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "6467:10:6",
																"value": {
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6476:1:6",
																	"type": "",
																	"value": "1"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6467:5:6"
																	}
																]
															},
															{
																"nodeType": "YulLeave",
																"src": "6478:5:6"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "6458:27:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6463:1:6",
														"type": "",
														"value": "1"
													}
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "6509:176:6",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "6544:22:6",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "6546:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6546:18:6"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "6546:18:6"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "6529:8:6"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6539:3:6",
																			"type": "",
																			"value": "255"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "6526:2:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6526:17:6"
																},
																"nodeType": "YulIf",
																"src": "6523:43:6"
															},
															{
																"nodeType": "YulAssignment",
																"src": "6579:25:6",
																"value": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6592:1:6",
																			"type": "",
																			"value": "2"
																		},
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "6595:8:6"
																		}
																	],
																	"functionName": {
																		"name": "exp",
																		"nodeType": "YulIdentifier",
																		"src": "6588:3:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6588:16:6"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6579:5:6"
																	}
																]
															},
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "6635:22:6",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "6637:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6637:18:6"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "6637:18:6"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "6623:5:6"
																		},
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:6"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "6620:2:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6620:14:6"
																},
																"nodeType": "YulIf",
																"src": "6617:40:6"
															},
															{
																"nodeType": "YulLeave",
																"src": "6670:5:6"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "6494:191:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6499:1:6",
														"type": "",
														"value": "2"
													}
												}
											],
											"expression": {
												"name": "base",
												"nodeType": "YulIdentifier",
												"src": "6415:4:6"
											},
											"nodeType": "YulSwitch",
											"src": "6408:277:6"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6817:123:6",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6831:28:6",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6844:4:6"
																},
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6850:8:6"
																}
															],
															"functionName": {
																"name": "exp",
																"nodeType": "YulIdentifier",
																"src": "6840:3:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "6840:19:6"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6831:5:6"
															}
														]
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "6890:22:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "6892:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6892:18:6"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6892:18:6"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6878:5:6"
																},
																{
																	"name": "max",
																	"nodeType": "YulIdentifier",
																	"src": "6885:3:6"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "6875:2:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "6875:14:6"
														},
														"nodeType": "YulIf",
														"src": "6872:40:6"
													},
													{
														"nodeType": "YulLeave",
														"src": "6925:5:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6720:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6726:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:12:6"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6734:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:2:6",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6731:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:16:6"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "6713:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "6713:35:6"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6769:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6775:3:6",
																		"type": "",
																		"value": "307"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6766:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6766:13:6"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6784:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6794:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6781:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6781:16:6"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "6762:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "6762:36:6"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "6697:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6697:111:6"
											},
											"nodeType": "YulIf",
											"src": "6694:246:6"
										},
										{
											"nodeType": "YulAssignment",
											"src": "6950:57:6",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6984:1:6",
														"type": "",
														"value": "1"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "6987:4:6"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "6993:8:6"
													},
													{
														"name": "max",
														"nodeType": "YulIdentifier",
														"src": "7003:3:6"
													}
												],
												"functionName": {
													"name": "checked_exp_helper",
													"nodeType": "YulIdentifier",
													"src": "6965:18:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6965:42:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "6950:5:6"
												},
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "6957:4:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7046:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7048:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "7048:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7048:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "7023:5:6"
													},
													{
														"arguments": [
															{
																"name": "max",
																"nodeType": "YulIdentifier",
																"src": "7034:3:6"
															},
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7039:4:6"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "7030:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "7030:14:6"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "7020:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7020:25:6"
											},
											"nodeType": "YulIf",
											"src": "7017:51:6"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7077:25:6",
											"value": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "7090:5:6"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7097:4:6"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "7086:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7086:16:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7077:5:6"
												}
											]
										}
									]
								},
								"name": "checked_exp_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "6065:4:6",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "6071:8:6",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "6081:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "6089:5:6",
										"type": ""
									}
								],
								"src": "6035:1073:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7180:219:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7190:31:6",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7216:4:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7198:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7198:23:6"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "7190:4:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7230:39:6",
											"value": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7260:8:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7242:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7242:27:6"
											},
											"variableNames": [
												{
													"name": "exponent",
													"nodeType": "YulIdentifier",
													"src": "7230:8:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7279:113:6",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7309:4:6"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7315:8:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7325:66:6",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "checked_exp_unsigned",
													"nodeType": "YulIdentifier",
													"src": "7288:20:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7288:104:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7279:5:6"
												}
											]
										}
									]
								},
								"name": "checked_exp_t_uint256_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "7155:4:6",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "7161:8:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "7174:5:6",
										"type": ""
									}
								],
								"src": "7114:285:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7453:362:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7463:25:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7486:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7468:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7468:20:6"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "7463:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7497:25:6",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7520:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7502:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7502:20:6"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "7497:1:6"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "7531:28:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7554:1:6"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7557:1:6"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "7550:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7550:9:6"
											},
											"variables": [
												{
													"name": "product_raw",
													"nodeType": "YulTypedName",
													"src": "7535:11:6",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7568:41:6",
											"value": {
												"arguments": [
													{
														"name": "product_raw",
														"nodeType": "YulIdentifier",
														"src": "7597:11:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7579:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7579:30:6"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "7568:7:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7786:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7788:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "7788:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7788:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7719:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7712:9:6"
															},
															{
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7742:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "7749:7:6"
																			},
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "7758:1:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:15:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7739:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:22:6"
															}
														],
														"functionName": {
															"name": "or",
															"nodeType": "YulIdentifier",
															"src": "7692:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "7692:83:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7672:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7672:113:6"
											},
											"nodeType": "YulIf",
											"src": "7669:139:6"
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "7436:1:6",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "7439:1:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "7445:7:6",
										"type": ""
									}
								],
								"src": "7405:410:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7849:152:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7866:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7869:77:6",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7859:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7859:88:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7859:88:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7963:1:6",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7966:4:6",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7956:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7956:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7956:15:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7987:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7990:4:6",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "7980:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7980:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7980:15:6"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "7821:180:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8049:143:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8059:25:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8082:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8064:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8064:20:6"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8059:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8093:25:6",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8116:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8098:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8098:20:6"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8093:1:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8140:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "8142:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "8142:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8142:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8137:1:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "8130:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8130:9:6"
											},
											"nodeType": "YulIf",
											"src": "8127:35:6"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8172:14:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8181:1:6"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8184:1:6"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "8177:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8177:9:6"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "8172:1:6"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "8038:1:6",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "8041:1:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "8047:1:6",
										"type": ""
									}
								],
								"src": "8007:185:6"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILiquidityProvider_$796_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILiquidityProvider_$796_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_ERC20_$651(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$651(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$651(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$651_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$651(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$651_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$651_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
					"id": 6,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c80639b3e9ab8116100595780639b3e9ab814610102578063cd5c645c14610120578063dcffa7f71461013c578063f141b52b1461015a57610086565b806338d52e0f1461008a5780635b8bec55146100a85780635d0b41f8146100c657806383781fa9146100e4575b5f80fd5b610092610176565b60405161009f9190610b87565b60405180910390f35b6100b061019b565b6040516100bd9190610bc0565b60405180910390f35b6100ce6101be565b6040516100db9190610bf1565b60405180910390f35b6100ec610453565b6040516100f99190610bf1565b60405180910390f35b61010a6106de565b6040516101179190610bf1565b60405180910390f35b61013a60048036038101906101359190610c49565b6107df565b005b6101446109bf565b6040516101519190610bf1565b60405180910390f35b610174600480360381019061016f9190610c49565b610aca565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102609190610caf565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d09190610d10565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610340573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103649190610d10565b60ff1690505f818311156103c757818361037e9190610d68565b600a61038a9190610eca565b905082600a6103999190610eca565b8186886103a69190610f14565b6103b09190610f14565b6103ba9190610f82565b9650505050505050610450565b818310156104245782826103db9190610d68565b600a6103e79190610eca565b905082600a6103f69190610eca565b8186886104039190610f14565b61040d9190610f82565b6104179190610f82565b9650505050505050610450565b81600a6104319190610eca565b858761043d9190610f14565b6104479190610f82565b96505050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f59190610caf565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610541573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105659190610d10565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105f99190610d10565b60ff169050808211156106575781600a6106139190610eca565b818361061f9190610d68565b600a61062b9190610eca565b85876106379190610f14565b6106419190610f14565b61064b9190610f82565b955050505050506106db565b808210156106b05781600a61066c9190610eca565b82826106789190610d68565b600a6106849190610eca565b85876106909190610f14565b61069a9190610f82565b6106a49190610f82565b955050505050506106db565b80600a6106bd9190610eca565b84866106c99190610f14565b6106d39190610f82565b955050505050505b90565b5f80670de0b6b3a764000090505f621e84809050600354600254111561075257600254600a61070d9190610eca565b60035460025461071d9190610d68565b600a6107299190610eca565b82846107359190610f14565b61073f9190610f14565b6107499190610f82565b925050506107dc565b60035460025410156107b257600254600a61076d9190610eca565b60025460035461077d9190610d68565b600a6107899190610eca565b82846107959190610f14565b61079f9190610f82565b6107a99190610f82565b925050506107dc565b600354600a6107c19190610eca565b81836107cd9190610f14565b6107d79190610f82565b925050505b90565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610888573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ac9190610caf565b90508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091b9190610d10565b60ff1660028190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b29190610d10565b60ff166003819055505050565b5f80670de0b6b3a764000090505f621e848090505f6003546002541115610a38576003546002546109f09190610d68565b600a6109fc9190610eca565b9050600254600a610a0d9190610eca565b818385610a1a9190610f14565b610a249190610f14565b610a2e9190610f82565b9350505050610ac7565b6003546002541015610a9c57600254600354610a549190610d68565b600a610a609190610eca565b9050600254600a610a719190610eca565b818385610a7e9190610f14565b610a889190610f82565b610a929190610f82565b9350505050610ac7565b600354600a610aab9190610eca565b8284610ab79190610f14565b610ac19190610f82565b93505050505b90565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610b4f610b4a610b4584610b0d565b610b2c565b610b0d565b9050919050565b5f610b6082610b35565b9050919050565b5f610b7182610b56565b9050919050565b610b8181610b67565b82525050565b5f602082019050610b9a5f830184610b78565b92915050565b5f610baa82610b56565b9050919050565b610bba81610ba0565b82525050565b5f602082019050610bd35f830184610bb1565b92915050565b5f819050919050565b610beb81610bd9565b82525050565b5f602082019050610c045f830184610be2565b92915050565b5f80fd5b5f610c1882610b0d565b9050919050565b610c2881610c0e565b8114610c32575f80fd5b50565b5f81359050610c4381610c1f565b92915050565b5f60208284031215610c5e57610c5d610c0a565b5b5f610c6b84828501610c35565b91505092915050565b5f610c7e82610c0e565b9050919050565b610c8e81610c74565b8114610c98575f80fd5b50565b5f81519050610ca981610c85565b92915050565b5f60208284031215610cc457610cc3610c0a565b5b5f610cd184828501610c9b565b91505092915050565b5f60ff82169050919050565b610cef81610cda565b8114610cf9575f80fd5b50565b5f81519050610d0a81610ce6565b92915050565b5f60208284031215610d2557610d24610c0a565b5b5f610d3284828501610cfc565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d7282610bd9565b9150610d7d83610bd9565b9250828203905081811115610d9557610d94610d3b565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115610df057808604811115610dcc57610dcb610d3b565b5b6001851615610ddb5780820291505b8081029050610de985610d9b565b9450610db0565b94509492505050565b5f82610e085760019050610ec3565b81610e15575f9050610ec3565b8160018114610e2b5760028114610e3557610e64565b6001915050610ec3565b60ff841115610e4757610e46610d3b565b5b8360020a915084821115610e5e57610e5d610d3b565b5b50610ec3565b5060208310610133831016604e8410600b8410161715610e995782820a905083811115610e9457610e93610d3b565b5b610ec3565b610ea68484846001610da7565b92509050818404811115610ebd57610ebc610d3b565b5b81810290505b9392505050565b5f610ed482610bd9565b9150610edf83610bd9565b9250610f0c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610df9565b905092915050565b5f610f1e82610bd9565b9150610f2983610bd9565b9250828202610f3781610bd9565b91508282048414831517610f4e57610f4d610d3b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f8c82610bd9565b9150610f9783610bd9565b925082610fa757610fa6610f55565b5b82820490509291505056fea26469706673582212203be9dda36b5eef4181ba38bdddcf3ab7de08b03f3095f1f4ce5d3e84b48ed9f664736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B3E9AB8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9B3E9AB8 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xDCFFA7F7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xF141B52B EQ PUSH2 0x15A JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x5D0B41F8 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x83781FA9 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x3C7 JUMPI DUP2 DUP4 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x450 JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x424 JUMPI DUP3 DUP3 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x40D SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x450 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x431 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP6 DUP8 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x657 JUMPI DUP2 PUSH1 0xA PUSH2 0x613 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP6 DUP8 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x641 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6DB JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x6B0 JUMPI DUP2 PUSH1 0xA PUSH2 0x66C SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP3 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP6 DUP8 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x69A SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6DB JUMP JUMPDEST DUP1 PUSH1 0xA PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x752 JUMPI PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x729 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP5 PUSH2 0x735 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x73F SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x749 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x76D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x789 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP5 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xA24 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0xA9C JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0xA PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xA88 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST DUP3 DUP5 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4F PUSH2 0xB4A PUSH2 0xB45 DUP5 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB60 DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB71 DUP3 PUSH2 0xB56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB81 DUP2 PUSH2 0xB67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9A PUSH0 DUP4 ADD DUP5 PUSH2 0xB78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBAA DUP3 PUSH2 0xB56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD3 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEB DUP2 PUSH2 0xBD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC04 PUSH0 DUP4 ADD DUP5 PUSH2 0xBE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xC18 DUP3 PUSH2 0xB0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC28 DUP2 PUSH2 0xC0E JUMP JUMPDEST DUP2 EQ PUSH2 0xC32 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC43 DUP2 PUSH2 0xC1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5D PUSH2 0xC0A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC6B DUP5 DUP3 DUP6 ADD PUSH2 0xC35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC7E DUP3 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8E DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP2 EQ PUSH2 0xC98 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA9 DUP2 PUSH2 0xC85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCC3 PUSH2 0xC0A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCD1 DUP5 DUP3 DUP6 ADD PUSH2 0xC9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEF DUP2 PUSH2 0xCDA JUMP JUMPDEST DUP2 EQ PUSH2 0xCF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD0A DUP2 PUSH2 0xCE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0xC0A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD32 DUP5 DUP3 DUP6 ADD PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD72 DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7D DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD95 JUMPI PUSH2 0xD94 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xDF0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCB PUSH2 0xD3B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xDDB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xDE9 DUP6 PUSH2 0xD9B JUMP JUMPDEST SWAP5 POP PUSH2 0xDB0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE08 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST DUP2 PUSH2 0xE15 JUMPI PUSH0 SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE2B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE35 JUMPI PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE47 JUMPI PUSH2 0xE46 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0xD3B JUMP JUMPDEST JUMPDEST POP PUSH2 0xEC3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE99 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xE94 JUMPI PUSH2 0xE93 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEBC PUSH2 0xD3B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED4 DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDF DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP PUSH2 0xF0C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xDF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF1E DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF29 DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF37 DUP2 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF4E JUMPI PUSH2 0xF4D PUSH2 0xD3B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF8C DUP3 PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 DUP4 PUSH2 0xBD9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF55 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xE9 0xDD LOG3 PUSH12 0x5EEF4181BA38BDDDCF3AB7DE ADDMOD 0xB0 EXTCODEHASH ADDRESS SWAP6 CALL DELEGATECALL 0xCE 0x5D RETURNDATACOPY DUP5 0xB4 DUP15 0xD9 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
			"sourceMap": "1034:4059:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1119:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1070:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2599:909;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1717:863;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3514:711;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1215:393;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4243:848;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:84;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1119:18;;;;;;;;;;;;;:::o;1070:43::-;;;;;;;;;;;;:::o;2599:909::-;2658:7;2677:15;2695:19;2677:37;;2724:12;2739:7;2724:22;;2757:29;2810:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2757:97;;2864:25;2898:21;2892:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2864:67;;;;2942:21;2980:5;;;;;;;;;;;2966:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2942:56;;;;3009:21;3064:13;3044:17;:33;3040:200;;;3134:13;3114:17;:33;;;;:::i;:::-;3109:2;:39;;;;:::i;:::-;3093:55;;3211:17;3207:2;:21;;;;:::i;:::-;3189:13;3181:4;3171:7;:14;;;;:::i;:::-;3170:32;;;;:::i;:::-;3169:60;;;;:::i;:::-;3162:67;;;;;;;;;;3040:200;3273:13;3253:17;:33;3249:198;;;3339:17;3323:13;:33;;;;:::i;:::-;3318:2;:39;;;;:::i;:::-;3302:55;;3418:17;3414:2;:21;;;;:::i;:::-;3397:13;3389:4;3379:7;:14;;;;:::i;:::-;3378:32;;;;:::i;:::-;:58;;;;:::i;:::-;3371:65;;;;;;;;;;3249:198;3487:13;3483:2;:17;;;;:::i;:::-;3474:4;3464:7;:14;;;;:::i;:::-;3463:38;;;;:::i;:::-;3456:45;;;;;;;;2599:909;;:::o;1717:863::-;1763:7;1782:15;1800:19;1782:37;;1829:12;1844:7;1829:22;;1862:29;1915:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1862:97;;1969:25;2003:21;1997:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1969:67;;;;2047:21;2085:5;;;;;;;;;;;2071:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2047:56;;;;2138:13;2118:17;:33;2114:191;;;2276:17;2272:2;:21;;;;:::i;:::-;2236:13;2216:17;:33;;;;:::i;:::-;2211:2;:39;;;;:::i;:::-;2202:4;2192:7;:14;;;;:::i;:::-;2191:60;;;;:::i;:::-;2190:104;;;;:::i;:::-;2167:127;;;;;;;;;2114:191;2338:13;2318:17;:33;2314:205;;;2490:17;2486:2;:21;;;;:::i;:::-;2447:17;2431:13;:33;;;;:::i;:::-;2426:2;:39;;;;:::i;:::-;2401:4;2391:7;:14;;;;:::i;:::-;2390:76;;;;:::i;:::-;:118;;;;:::i;:::-;2367:141;;;;;;;;;2314:205;2559:13;2555:2;:17;;;;:::i;:::-;2546:4;2536:7;:14;;;;:::i;:::-;2535:38;;;;:::i;:::-;2528:45;;;;;;;1717:863;;:::o;3514:711::-;3574:7;3593:15;3611:19;3593:37;;3640:12;3655:7;3640:22;;3703:19;;3677:23;;:45;3673:241;;;3879:23;;3875:2;:27;;;;:::i;:::-;3833:19;;3807:23;;:45;;;;:::i;:::-;3802:2;:51;;;;:::i;:::-;3773:4;3763:7;:14;;;;:::i;:::-;3762:92;;;;:::i;:::-;3761:142;;;;:::i;:::-;3738:165;;;;;;3673:241;3953:19;;3927:23;;:45;3923:235;;;4123:23;;4119:2;:27;;;;:::i;:::-;4074:23;;4052:19;;:45;;;;:::i;:::-;4047:2;:51;;;;:::i;:::-;4022:4;4012:7;:14;;;;:::i;:::-;4011:88;;;;:::i;:::-;:136;;;;:::i;:::-;3988:159;;;;;;3923:235;4198:19;;4194:2;:23;;;;:::i;:::-;4185:4;4175:7;:14;;;;:::i;:::-;4174:44;;;;:::i;:::-;4167:51;;;;3514:711;;:::o;1215:393::-;1334:18;1295:17;;:58;;;;;;;;;;;;;;;;;;1364:29;1417:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1364:97;;1504:21;1498:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1472:65;;:23;:65;;;;1583:5;;;;;;;;;;;1569:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1547:54;;:19;:54;;;;1285:323;1215:393;:::o;4243:848::-;4343:7;4366:15;4384:19;4366:37;;4413:12;4428:7;4413:22;;4446:21;4507:19;;4481:23;;:45;4477:262;;;4589:19;;4563:23;;:45;;;;:::i;:::-;4558:2;:51;;;;:::i;:::-;4542:67;;4704:23;;4700:2;:27;;;;:::i;:::-;4666:13;4658:4;4648:7;:14;;;;:::i;:::-;4647:32;;;;:::i;:::-;4646:82;;;;:::i;:::-;4623:105;;;;;;;4477:262;4778:19;;4752:23;;:45;4748:276;;;4856:23;;4834:19;;:45;;;;:::i;:::-;4829:2;:51;;;;:::i;:::-;4813:67;;4989:23;;4985:2;:27;;;;:::i;:::-;4952:13;4928:4;4918:7;:14;;;;:::i;:::-;4917:48;;;;:::i;:::-;:96;;;;:::i;:::-;4894:119;;;;;;;4748:276;5064:19;;5060:2;:23;;;;:::i;:::-;5051:4;5041:7;:14;;;;:::i;:::-;5040:44;;;;:::i;:::-;5033:51;;;;;4243:848;;:::o;1614:84::-;1684:6;1670:5;;:21;;;;;;;;;;;;;;;;;;1614:84;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1047:152::-;1123:9;1156:37;1187:5;1156:37;:::i;:::-;1143:50;;1047:152;;;:::o;1205:183::-;1318:63;1375:5;1318:63;:::i;:::-;1313:3;1306:76;1205:183;;:::o;1394:274::-;1513:4;1551:2;1540:9;1536:18;1528:26;;1564:97;1658:1;1647:9;1643:17;1634:6;1564:97;:::i;:::-;1394:274;;;;:::o;1674:77::-;1711:7;1740:5;1729:16;;1674:77;;;:::o;1757:118::-;1844:24;1862:5;1844:24;:::i;:::-;1839:3;1832:37;1757:118;;:::o;1881:222::-;1974:4;2012:2;2001:9;1997:18;1989:26;;2025:71;2093:1;2082:9;2078:17;2069:6;2025:71;:::i;:::-;1881:222;;;;:::o;2190:117::-;2299:1;2296;2289:12;2436:96;2473:7;2502:24;2520:5;2502:24;:::i;:::-;2491:35;;2436:96;;;:::o;2538:122::-;2611:24;2629:5;2611:24;:::i;:::-;2604:5;2601:35;2591:63;;2650:1;2647;2640:12;2591:63;2538:122;:::o;2666:139::-;2712:5;2750:6;2737:20;2728:29;;2766:33;2793:5;2766:33;:::i;:::-;2666:139;;;;:::o;2811:329::-;2870:6;2919:2;2907:9;2898:7;2894:23;2890:32;2887:119;;;2925:79;;:::i;:::-;2887:119;3045:1;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3016:117;2811:329;;;;:::o;3146:109::-;3196:7;3225:24;3243:5;3225:24;:::i;:::-;3214:35;;3146:109;;;:::o;3261:148::-;3347:37;3378:5;3347:37;:::i;:::-;3340:5;3337:48;3327:76;;3399:1;3396;3389:12;3327:76;3261:148;:::o;3415:169::-;3485:5;3516:6;3510:13;3501:22;;3532:46;3572:5;3532:46;:::i;:::-;3415:169;;;;:::o;3590:377::-;3673:6;3722:2;3710:9;3701:7;3697:23;3693:32;3690:119;;;3728:79;;:::i;:::-;3690:119;3848:1;3873:77;3942:7;3933:6;3922:9;3918:22;3873:77;:::i;:::-;3863:87;;3819:141;3590:377;;;;:::o;3973:86::-;4008:7;4048:4;4041:5;4037:16;4026:27;;3973:86;;;:::o;4065:118::-;4136:22;4152:5;4136:22;:::i;:::-;4129:5;4126:33;4116:61;;4173:1;4170;4163:12;4116:61;4065:118;:::o;4189:139::-;4244:5;4275:6;4269:13;4260:22;;4291:31;4316:5;4291:31;:::i;:::-;4189:139;;;;:::o;4334:347::-;4402:6;4451:2;4439:9;4430:7;4426:23;4422:32;4419:119;;;4457:79;;:::i;:::-;4419:119;4577:1;4602:62;4656:7;4647:6;4636:9;4632:22;4602:62;:::i;:::-;4592:72;;4548:126;4334:347;;;;:::o;4687:180::-;4735:77;4732:1;4725:88;4832:4;4829:1;4822:15;4856:4;4853:1;4846:15;4873:194;4913:4;4933:20;4951:1;4933:20;:::i;:::-;4928:25;;4967:20;4985:1;4967:20;:::i;:::-;4962:25;;5011:1;5008;5004:9;4996:17;;5035:1;5029:4;5026:11;5023:37;;;5040:18;;:::i;:::-;5023:37;4873:194;;;;:::o;5073:102::-;5115:8;5162:5;5159:1;5155:13;5134:34;;5073:102;;;:::o;5181:848::-;5242:5;5249:4;5273:6;5264:15;;5297:5;5288:14;;5311:712;5332:1;5322:8;5319:15;5311:712;;;5427:4;5422:3;5418:14;5412:4;5409:24;5406:50;;;5436:18;;:::i;:::-;5406:50;5486:1;5476:8;5472:16;5469:451;;;5901:4;5894:5;5890:16;5881:25;;5469:451;5951:4;5945;5941:15;5933:23;;5981:32;6004:8;5981:32;:::i;:::-;5969:44;;5311:712;;;5181:848;;;;;;;:::o;6035:1073::-;6089:5;6280:8;6270:40;;6301:1;6292:10;;6303:5;;6270:40;6329:4;6319:36;;6346:1;6337:10;;6348:5;;6319:36;6415:4;6463:1;6458:27;;;;6499:1;6494:191;;;;6408:277;;6458:27;6476:1;6467:10;;6478:5;;;6494:191;6539:3;6529:8;6526:17;6523:43;;;6546:18;;:::i;:::-;6523:43;6595:8;6592:1;6588:16;6579:25;;6630:3;6623:5;6620:14;6617:40;;;6637:18;;:::i;:::-;6617:40;6670:5;;;6408:277;;6794:2;6784:8;6781:16;6775:3;6769:4;6766:13;6762:36;6744:2;6734:8;6731:16;6726:2;6720:4;6717:12;6713:35;6697:111;6694:246;;;6850:8;6844:4;6840:19;6831:28;;6885:3;6878:5;6875:14;6872:40;;;6892:18;;:::i;:::-;6872:40;6925:5;;6694:246;6965:42;7003:3;6993:8;6987:4;6984:1;6965:42;:::i;:::-;6950:57;;;;7039:4;7034:3;7030:14;7023:5;7020:25;7017:51;;;7048:18;;:::i;:::-;7017:51;7097:4;7090:5;7086:16;7077:25;;6035:1073;;;;;;:::o;7114:285::-;7174:5;7198:23;7216:4;7198:23;:::i;:::-;7190:31;;7242:27;7260:8;7242:27;:::i;:::-;7230:39;;7288:104;7325:66;7315:8;7309:4;7288:104;:::i;:::-;7279:113;;7114:285;;;;:::o;7405:410::-;7445:7;7468:20;7486:1;7468:20;:::i;:::-;7463:25;;7502:20;7520:1;7502:20;:::i;:::-;7497:25;;7557:1;7554;7550:9;7579:30;7597:11;7579:30;:::i;:::-;7568:41;;7758:1;7749:7;7745:15;7742:1;7739:22;7719:1;7712:9;7692:83;7669:139;;7788:18;;:::i;:::-;7669:139;7453:362;7405:410;;;;:::o;7821:180::-;7869:77;7866:1;7859:88;7966:4;7963:1;7956:15;7990:4;7987:1;7980:15;8007:185;8047:1;8064:20;8082:1;8064:20;:::i;:::-;8059:25;;8098:20;8116:1;8098:20;:::i;:::-;8093:25;;8137:1;8127:35;;8142:18;;:::i;:::-;8127:35;8184:1;8181;8177:9;8172:14;;8007:185;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "814400",
				"executionCost": "849",
				"totalCost": "815249"
			},
			"external": {
				"asset()": "infinite",
				"calculateOrig()": "infinite",
				"calculateWithCachedDecimals()": "infinite",
				"calculateWithCachedDecimalsAndScalingFactor()": "infinite",
				"calculateWithScalingFactor()": "infinite",
				"liquidityProvider()": "infinite",
				"updateAsset(address)": "24781",
				"updateLiquidityProvider(address)": "infinite"
			}
		},
		"methodIdentifiers": {
			"asset()": "38d52e0f",
			"calculateOrig()": "83781fa9",
			"calculateWithCachedDecimals()": "9b3e9ab8",
			"calculateWithCachedDecimalsAndScalingFactor()": "dcffa7f7",
			"calculateWithScalingFactor()": "5d0b41f8",
			"liquidityProvider()": "5b8bec55",
			"updateAsset(address)": "f141b52b",
			"updateLiquidityProvider(address)": "cd5c645c"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "asset",
			"outputs": [
				{
					"internalType": "contract ERC20",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateOrig",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateWithCachedDecimals",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateWithCachedDecimalsAndScalingFactor",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateWithScalingFactor",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "liquidityProvider",
			"outputs": [
				{
					"internalType": "contract ILiquidityProvider",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_asset",
					"type": "address"
				}
			],
			"name": "updateAsset",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_liquidityProvider",
					"type": "address"
				}
			],
			"name": "updateLiquidityProvider",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}