{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561000f575f80fd5b50610ebe8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c806383781fa91161005957806383781fa9146100d95780639b3e9ab8146100f7578063cd5c645c14610115578063f141b52b146101315761007b565b806338d52e0f1461007f5780635b8bec551461009d5780635d0b41f8146100bb575b5f80fd5b61008761014d565b6040516100949190610a5d565b60405180910390f35b6100a5610172565b6040516100b29190610a96565b60405180910390f35b6100c3610195565b6040516100d09190610ac7565b60405180910390f35b6100e161042a565b6040516100ee9190610ac7565b60405180910390f35b6100ff6106b5565b60405161010c9190610ac7565b60405180910390f35b61012f600480360381019061012a9190610b1f565b6107c0565b005b61014b60048036038101906101469190610b1f565b6109a0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102379190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610283573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a79190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033b9190610be6565b60ff1690505f8183111561039e5781836103559190610c3e565b600a6103619190610da0565b905082600a6103709190610da0565b81868861037d9190610dea565b6103879190610dea565b6103919190610e58565b9650505050505050610427565b818310156103fb5782826103b29190610c3e565b600a6103be9190610da0565b905082600a6103cd9190610da0565b8186886103da9190610dea565b6103e49190610e58565b6103ee9190610e58565b9650505050505050610427565b81600a6104089190610da0565b85876104149190610dea565b61041e9190610e58565b96505050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104cc9190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610518573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053c9190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d09190610be6565b60ff1690508082111561062e5781600a6105ea9190610da0565b81836105f69190610c3e565b600a6106029190610da0565b858761060e9190610dea565b6106189190610dea565b6106229190610e58565b955050505050506106b2565b808210156106875781600a6106439190610da0565b828261064f9190610c3e565b600a61065b9190610da0565b85876106679190610dea565b6106719190610e58565b61067b9190610e58565b955050505050506106b2565b80600a6106949190610da0565b84866106a09190610dea565b6106aa9190610e58565b955050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f600354600254111561072e576003546002546106e69190610c3e565b600a6106f29190610da0565b9050600254600a6107039190610da0565b8183856107109190610dea565b61071a9190610dea565b6107249190610e58565b93505050506107bd565b60035460025410156107925760025460035461074a9190610c3e565b600a6107569190610da0565b9050600254600a6107679190610da0565b8183856107749190610dea565b61077e9190610e58565b6107889190610e58565b93505050506107bd565b600354600a6107a19190610da0565b82846107ad9190610dea565b6107b79190610e58565b93505050505b90565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088d9190610b85565b90508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108fc9190610be6565b60ff1660028190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109939190610be6565b60ff166003819055505050565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a25610a20610a1b846109e3565b610a02565b6109e3565b9050919050565b5f610a3682610a0b565b9050919050565b5f610a4782610a2c565b9050919050565b610a5781610a3d565b82525050565b5f602082019050610a705f830184610a4e565b92915050565b5f610a8082610a2c565b9050919050565b610a9081610a76565b82525050565b5f602082019050610aa95f830184610a87565b92915050565b5f819050919050565b610ac181610aaf565b82525050565b5f602082019050610ada5f830184610ab8565b92915050565b5f80fd5b5f610aee826109e3565b9050919050565b610afe81610ae4565b8114610b08575f80fd5b50565b5f81359050610b1981610af5565b92915050565b5f60208284031215610b3457610b33610ae0565b5b5f610b4184828501610b0b565b91505092915050565b5f610b5482610ae4565b9050919050565b610b6481610b4a565b8114610b6e575f80fd5b50565b5f81519050610b7f81610b5b565b92915050565b5f60208284031215610b9a57610b99610ae0565b5b5f610ba784828501610b71565b91505092915050565b5f60ff82169050919050565b610bc581610bb0565b8114610bcf575f80fd5b50565b5f81519050610be081610bbc565b92915050565b5f60208284031215610bfb57610bfa610ae0565b5b5f610c0884828501610bd2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c4882610aaf565b9150610c5383610aaf565b9250828203905081811115610c6b57610c6a610c11565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115610cc657808604811115610ca257610ca1610c11565b5b6001851615610cb15780820291505b8081029050610cbf85610c71565b9450610c86565b94509492505050565b5f82610cde5760019050610d99565b81610ceb575f9050610d99565b8160018114610d015760028114610d0b57610d3a565b6001915050610d99565b60ff841115610d1d57610d1c610c11565b5b8360020a915084821115610d3457610d33610c11565b5b50610d99565b5060208310610133831016604e8410600b8410161715610d6f5782820a905083811115610d6a57610d69610c11565b5b610d99565b610d7c8484846001610c7d565b92509050818404811115610d9357610d92610c11565b5b81810290505b9392505050565b5f610daa82610aaf565b9150610db583610aaf565b9250610de27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ccf565b905092915050565b5f610df482610aaf565b9150610dff83610aaf565b9250828202610e0d81610aaf565b91508282048414831517610e2457610e23610c11565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e6282610aaf565b9150610e6d83610aaf565b925082610e7d57610e7c610e2b565b5b82820490509291505056fea2646970667358221220993d71bb92f2659513d94eb6777b50094a91e4f788410b28c954f5c761d903a164736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEBE DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83781FA9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x83781FA9 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9B3E9AB8 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF141B52B EQ PUSH2 0x131 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5D0B41F8 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x39E JUMPI DUP2 DUP4 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x370 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3FB JUMPI DUP3 DUP3 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x62E JUMPI DUP2 PUSH1 0xA PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x618 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x687 JUMPI DUP2 PUSH1 0xA PUSH2 0x643 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x703 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x71A SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x756 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 PUSH2 0xA20 PUSH2 0xA1B DUP5 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 DUP3 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA47 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA70 PUSH0 DUP4 ADD DUP5 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA80 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0xA76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC1 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADA PUSH0 DUP4 ADD DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xAEE DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFE DUP2 PUSH2 0xAE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xB08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB19 DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB33 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB54 DUP3 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0xB4A JUMP JUMPDEST DUP2 EQ PUSH2 0xB6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA7 DUP5 DUP3 DUP6 ADD PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC5 DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE0 DUP2 PUSH2 0xBBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC08 DUP5 DUP3 DUP6 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC48 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xC53 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6A PUSH2 0xC11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCBF DUP6 PUSH2 0xC71 JUMP JUMPDEST SWAP5 POP PUSH2 0xC86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xCDE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH2 0xCEB JUMPI PUSH0 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD0B JUMPI PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD99 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xD7C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC7D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP PUSH2 0xDE2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF4 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDFF DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE0D DUP2 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE62 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xE6D DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0xE2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 RETURNDATASIZE PUSH18 0xBB92F2659513D94EB6777B50094A91E4F788 COINBASE SIGNEXTEND 0x28 0xC9 SLOAD CREATE2 0xC7 PUSH2 0xD903 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
			"sourceMap": "900:3286:5:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@asset_858": {
					"entryPoint": 333,
					"id": 858,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@calculateOrig_1013": {
					"entryPoint": 1066,
					"id": 1013,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@calculateWithCachedDecimals_1201": {
					"entryPoint": 1717,
					"id": 1201,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@calculateWithScalingFactor_1121": {
					"entryPoint": 405,
					"id": 1121,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@liquidityProvider_855": {
					"entryPoint": 370,
					"id": 855,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@updateAsset_914": {
					"entryPoint": 2464,
					"id": 914,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@updateLiquidityProvider_902": {
					"entryPoint": 1984,
					"id": 902,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_t_address": {
					"entryPoint": 2827,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_contract$_ERC20_$651_fromMemory": {
					"entryPoint": 2929,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint8_fromMemory": {
					"entryPoint": 3026,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 2847,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_contract$_ERC20_$651_fromMemory": {
					"entryPoint": 2949,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint8_fromMemory": {
					"entryPoint": 3046,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
					"entryPoint": 2638,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack": {
					"entryPoint": 2695,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 2744,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
					"entryPoint": 2653,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed": {
					"entryPoint": 2710,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 2759,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
					"entryPoint": 3672,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_helper": {
					"entryPoint": 3197,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 2
				},
				"checked_exp_t_uint256_t_uint256": {
					"entryPoint": 3488,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_unsigned": {
					"entryPoint": 3279,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 3562,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_sub_t_uint256": {
					"entryPoint": 3134,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 2788,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_contract$_ERC20_$651": {
					"entryPoint": 2890,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 2531,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 2735,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint8": {
					"entryPoint": 2992,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_ERC20_$651_to_t_address": {
					"entryPoint": 2621,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_ILiquidityProvider_$796_to_t_address": {
					"entryPoint": 2678,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_address": {
					"entryPoint": 2604,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_uint160": {
					"entryPoint": 2571,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 2562,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 3089,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
					"entryPoint": 3627,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 2784,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"shift_right_1_unsigned": {
					"entryPoint": 3185,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"validator_revert_t_address": {
					"entryPoint": 2805,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_contract$_ERC20_$651": {
					"entryPoint": 2907,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint8": {
					"entryPoint": 3004,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:8195:6",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "52:81:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "62:65:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "77:5:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "84:42:6",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "73:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "73:54:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "62:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "34:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "44:7:6",
										"type": ""
									}
								],
								"src": "7:126:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "171:28:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "181:12:6",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "188:5:6"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "181:3:6"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "157:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "167:3:6",
										"type": ""
									}
								],
								"src": "139:60:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "265:82:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "275:66:6",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "333:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "315:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:24:6"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "306:8:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "306:34:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "288:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "288:53:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "275:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "245:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "255:9:6",
										"type": ""
									}
								],
								"src": "205:142:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "413:66:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "423:50:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "467:5:6"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "436:30:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "436:37:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "423:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "393:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "403:9:6",
										"type": ""
									}
								],
								"src": "353:126:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "558:66:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "568:50:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "612:5:6"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "581:30:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "581:37:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "568:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_ERC20_$651_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "538:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "548:9:6",
										"type": ""
									}
								],
								"src": "485:139:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "708:79:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "725:3:6"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "774:5:6"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_ERC20_$651_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "730:43:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "730:50:6"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "718:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "718:63:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "718:63:6"
										}
									]
								},
								"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "696:5:6",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "703:3:6",
										"type": ""
									}
								],
								"src": "630:157:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "904:137:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "914:26:6",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "926:9:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "937:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "922:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "922:18:6"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "914:4:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1007:6:6"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1020:9:6"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1031:1:6",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1016:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1016:17:6"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "950:56:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "950:84:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "950:84:6"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "876:9:6",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "888:6:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "899:4:6",
										"type": ""
									}
								],
								"src": "793:248:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1133:66:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1143:50:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1187:5:6"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "1156:30:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1156:37:6"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "1143:9:6"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_ILiquidityProvider_$796_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1113:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "1123:9:6",
										"type": ""
									}
								],
								"src": "1047:152:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1296:92:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1313:3:6"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1375:5:6"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_ILiquidityProvider_$796_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "1318:56:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1318:63:6"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1306:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1306:76:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1306:76:6"
										}
									]
								},
								"name": "abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1284:5:6",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1291:3:6",
										"type": ""
									}
								],
								"src": "1205:183:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1518:150:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1528:26:6",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1540:9:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1551:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1536:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1536:18:6"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1528:4:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1634:6:6"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1647:9:6"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1658:1:6",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1643:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1643:17:6"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1564:69:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1564:97:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1564:97:6"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1490:9:6",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1502:6:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1513:4:6",
										"type": ""
									}
								],
								"src": "1394:274:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1719:32:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1729:16:6",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1740:5:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1729:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1701:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1711:7:6",
										"type": ""
									}
								],
								"src": "1674:77:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1822:53:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1839:3:6"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1862:5:6"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1844:17:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "1844:24:6"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1832:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1832:37:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1832:37:6"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1810:5:6",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1817:3:6",
										"type": ""
									}
								],
								"src": "1757:118:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1979:124:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1989:26:6",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2001:9:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2012:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1997:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "1997:18:6"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1989:4:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2069:6:6"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2082:9:6"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2093:1:6",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2078:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "2078:17:6"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2025:43:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2025:71:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2025:71:6"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1951:9:6",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1963:6:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1974:4:6",
										"type": ""
									}
								],
								"src": "1881:222:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2149:35:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2159:19:6",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2175:2:6",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2169:5:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2169:9:6"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2159:6:6"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "2142:6:6",
										"type": ""
									}
								],
								"src": "2109:75:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2279:28:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2296:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2299:1:6",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2289:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2289:12:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2289:12:6"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "2190:117:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2402:28:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2419:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2422:1:6",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2412:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2412:12:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2412:12:6"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "2313:117:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2481:51:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2491:35:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2520:5:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2502:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2502:24:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2491:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2463:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2473:7:6",
										"type": ""
									}
								],
								"src": "2436:96:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2581:79:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2638:16:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2647:1:6",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2650:1:6",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2640:6:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "2640:12:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2640:12:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2604:5:6"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2611:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:24:6"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2601:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "2601:35:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2594:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2594:43:6"
											},
											"nodeType": "YulIf",
											"src": "2591:63:6"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2574:5:6",
										"type": ""
									}
								],
								"src": "2538:122:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2718:87:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2728:29:6",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "2750:6:6"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "2737:12:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2737:20:6"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2728:5:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2793:5:6"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "2766:26:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2766:33:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2766:33:6"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "2696:6:6",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2704:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2712:5:6",
										"type": ""
									}
								],
								"src": "2666:139:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2877:263:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2923:83:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "2925:77:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "2925:79:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2925:79:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2898:7:6"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2907:9:6"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2894:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "2894:23:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2919:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2890:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "2890:32:6"
											},
											"nodeType": "YulIf",
											"src": "2887:119:6"
										},
										{
											"nodeType": "YulBlock",
											"src": "3016:117:6",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3031:15:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3045:1:6",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3035:6:6",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3060:63:6",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3095:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3106:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:22:6"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3115:7:6"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "3070:20:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3070:53:6"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3060:6:6"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2847:9:6",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2858:7:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2870:6:6",
										"type": ""
									}
								],
								"src": "2811:329:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3204:51:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3214:35:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3243:5:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "3225:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3225:24:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "3214:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_contract$_ERC20_$651",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3186:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "3196:7:6",
										"type": ""
									}
								],
								"src": "3146:109:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3317:92:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3387:16:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3396:1:6",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3399:1:6",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3389:6:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "3389:12:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3389:12:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3340:5:6"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3378:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_contract$_ERC20_$651",
																	"nodeType": "YulIdentifier",
																	"src": "3347:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:37:6"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3337:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3337:48:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3330:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3330:56:6"
											},
											"nodeType": "YulIf",
											"src": "3327:76:6"
										}
									]
								},
								"name": "validator_revert_t_contract$_ERC20_$651",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3310:5:6",
										"type": ""
									}
								],
								"src": "3261:148:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3491:93:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3501:22:6",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "3516:6:6"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3510:5:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3510:13:6"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3501:5:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3572:5:6"
													}
												],
												"functionName": {
													"name": "validator_revert_t_contract$_ERC20_$651",
													"nodeType": "YulIdentifier",
													"src": "3532:39:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3532:46:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3532:46:6"
										}
									]
								},
								"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "3469:6:6",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "3477:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3485:5:6",
										"type": ""
									}
								],
								"src": "3415:169:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3680:287:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3726:83:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "3728:77:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "3728:79:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3728:79:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3701:7:6"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3710:9:6"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "3697:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3697:23:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3722:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "3693:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "3693:32:6"
											},
											"nodeType": "YulIf",
											"src": "3690:119:6"
										},
										{
											"nodeType": "YulBlock",
											"src": "3819:141:6",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3834:15:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3848:1:6",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3838:6:6",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3863:87:6",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:22:6"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3942:7:6"
															}
														],
														"functionName": {
															"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "3873:44:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "3873:77:6"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3863:6:6"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_contract$_ERC20_$651_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3650:9:6",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "3661:7:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3673:6:6",
										"type": ""
									}
								],
								"src": "3590:377:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4016:43:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4026:27:6",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "4041:5:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4048:4:6",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "4037:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4037:16:6"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "4026:7:6"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3998:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "4008:7:6",
										"type": ""
									}
								],
								"src": "3973:86:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4106:77:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4161:16:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4170:1:6",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4173:1:6",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "4163:6:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "4163:12:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4163:12:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4129:5:6"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4152:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4136:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:22:6"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "4126:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "4126:33:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "4119:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4119:41:6"
											},
											"nodeType": "YulIf",
											"src": "4116:61:6"
										}
									]
								},
								"name": "validator_revert_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4099:5:6",
										"type": ""
									}
								],
								"src": "4065:118:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4250:78:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4260:22:6",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "4275:6:6"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "4269:5:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4269:13:6"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4260:5:6"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "4316:5:6"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "4291:24:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4291:31:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4291:31:6"
										}
									]
								},
								"name": "abi_decode_t_uint8_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "4228:6:6",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "4236:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4244:5:6",
										"type": ""
									}
								],
								"src": "4189:139:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4409:272:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4455:83:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4457:77:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "4457:79:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4457:79:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4430:7:6"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4439:9:6"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4426:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "4426:23:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4451:2:6",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4422:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4422:32:6"
											},
											"nodeType": "YulIf",
											"src": "4419:119:6"
										},
										{
											"nodeType": "YulBlock",
											"src": "4548:126:6",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "4563:15:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4577:1:6",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "4567:6:6",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "4592:72:6",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4636:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4647:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:22:6"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4656:7:6"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint8_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "4602:29:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "4602:62:6"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "4592:6:6"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint8_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4379:9:6",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4390:7:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4402:6:6",
										"type": ""
									}
								],
								"src": "4334:347:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4715:152:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4732:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4735:77:6",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "4725:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4725:88:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4725:88:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4829:1:6",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4832:4:6",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "4822:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4822:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4822:15:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4853:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4856:4:6",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "4846:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4846:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4846:15:6"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "4687:180:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4918:149:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4928:25:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "4951:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "4933:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4933:20:6"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "4928:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "4962:25:6",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "4985:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "4967:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "4967:20:6"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "4962:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "4996:17:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5008:1:6"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5011:1:6"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5004:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5004:9:6"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "4996:4:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5038:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "5040:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5040:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "5040:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "diff",
														"nodeType": "YulIdentifier",
														"src": "5029:4:6"
													},
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "5035:1:6"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5026:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5026:11:6"
											},
											"nodeType": "YulIf",
											"src": "5023:37:6"
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "4904:1:6",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "4907:1:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "4913:4:6",
										"type": ""
									}
								],
								"src": "4873:194:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5124:51:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5134:34:6",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5159:1:6",
														"type": "",
														"value": "1"
													},
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5162:5:6"
													}
												],
												"functionName": {
													"name": "shr",
													"nodeType": "YulIdentifier",
													"src": "5155:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5155:13:6"
											},
											"variableNames": [
												{
													"name": "newValue",
													"nodeType": "YulIdentifier",
													"src": "5134:8:6"
												}
											]
										}
									]
								},
								"name": "shift_right_1_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "5105:5:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "newValue",
										"nodeType": "YulTypedName",
										"src": "5115:8:6",
										"type": ""
									}
								],
								"src": "5073:102:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5254:775:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5264:15:6",
											"value": {
												"name": "_power",
												"nodeType": "YulIdentifier",
												"src": "5273:6:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "5264:5:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "5288:14:6",
											"value": {
												"name": "_base",
												"nodeType": "YulIdentifier",
												"src": "5297:5:6"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "5288:4:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5346:677:6",
												"statements": [
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "5434:22:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "5436:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5436:18:6"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5436:18:6"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5412:4:6"
																},
																{
																	"arguments": [
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:6"
																		},
																		{
																			"name": "base",
																			"nodeType": "YulIdentifier",
																			"src": "5427:4:6"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5418:14:6"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "5409:2:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5409:24:6"
														},
														"nodeType": "YulIf",
														"src": "5406:50:6"
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "5501:419:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5881:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5894:5:6"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5901:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5890:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5890:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "5881:5:6"
																		}
																	]
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "5476:8:6"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5486:1:6",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "5472:3:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5472:16:6"
														},
														"nodeType": "YulIf",
														"src": "5469:451:6"
													},
													{
														"nodeType": "YulAssignment",
														"src": "5933:23:6",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5945:4:6"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5951:4:6"
																}
															],
															"functionName": {
																"name": "mul",
																"nodeType": "YulIdentifier",
																"src": "5941:3:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5941:15:6"
														},
														"variableNames": [
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5933:4:6"
															}
														]
													},
													{
														"nodeType": "YulAssignment",
														"src": "5969:44:6",
														"value": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6004:8:6"
																}
															],
															"functionName": {
																"name": "shift_right_1_unsigned",
																"nodeType": "YulIdentifier",
																"src": "5981:22:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "5981:32:6"
														},
														"variableNames": [
															{
																"name": "exponent",
																"nodeType": "YulIdentifier",
																"src": "5969:8:6"
															}
														]
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "5322:8:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5332:1:6",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5319:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "5319:15:6"
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
												"src": "5335:2:6",
												"statements": []
											},
											"pre": {
												"nodeType": "YulBlock",
												"src": "5315:3:6",
												"statements": []
											},
											"src": "5311:712:6"
										}
									]
								},
								"name": "checked_exp_helper",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "_power",
										"nodeType": "YulTypedName",
										"src": "5209:6:6",
										"type": ""
									},
									{
										"name": "_base",
										"nodeType": "YulTypedName",
										"src": "5217:5:6",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "5224:8:6",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "5234:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "5242:5:6",
										"type": ""
									},
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "5249:4:6",
										"type": ""
									}
								],
								"src": "5181:848:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6095:1013:6",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6290:20:6",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6292:10:6",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6301:1:6",
															"type": "",
															"value": "1"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6292:5:6"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "6303:5:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "6280:8:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6273:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6273:16:6"
											},
											"nodeType": "YulIf",
											"src": "6270:40:6"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6335:20:6",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6337:10:6",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6346:1:6",
															"type": "",
															"value": "0"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6337:5:6"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "6348:5:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "6329:4:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6322:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6322:12:6"
											},
											"nodeType": "YulIf",
											"src": "6319:36:6"
										},
										{
											"cases": [
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "6465:20:6",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "6467:10:6",
																"value": {
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6476:1:6",
																	"type": "",
																	"value": "1"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6467:5:6"
																	}
																]
															},
															{
																"nodeType": "YulLeave",
																"src": "6478:5:6"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "6458:27:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6463:1:6",
														"type": "",
														"value": "1"
													}
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "6509:176:6",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "6544:22:6",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "6546:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6546:18:6"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "6546:18:6"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "6529:8:6"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6539:3:6",
																			"type": "",
																			"value": "255"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "6526:2:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6526:17:6"
																},
																"nodeType": "YulIf",
																"src": "6523:43:6"
															},
															{
																"nodeType": "YulAssignment",
																"src": "6579:25:6",
																"value": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6592:1:6",
																			"type": "",
																			"value": "2"
																		},
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "6595:8:6"
																		}
																	],
																	"functionName": {
																		"name": "exp",
																		"nodeType": "YulIdentifier",
																		"src": "6588:3:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6588:16:6"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6579:5:6"
																	}
																]
															},
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "6635:22:6",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "6637:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6637:18:6"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "6637:18:6"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "6623:5:6"
																		},
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:6"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "6620:2:6"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6620:14:6"
																},
																"nodeType": "YulIf",
																"src": "6617:40:6"
															},
															{
																"nodeType": "YulLeave",
																"src": "6670:5:6"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "6494:191:6",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6499:1:6",
														"type": "",
														"value": "2"
													}
												}
											],
											"expression": {
												"name": "base",
												"nodeType": "YulIdentifier",
												"src": "6415:4:6"
											},
											"nodeType": "YulSwitch",
											"src": "6408:277:6"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6817:123:6",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6831:28:6",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6844:4:6"
																},
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6850:8:6"
																}
															],
															"functionName": {
																"name": "exp",
																"nodeType": "YulIdentifier",
																"src": "6840:3:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "6840:19:6"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6831:5:6"
															}
														]
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "6890:22:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "6892:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6892:18:6"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6892:18:6"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6878:5:6"
																},
																{
																	"name": "max",
																	"nodeType": "YulIdentifier",
																	"src": "6885:3:6"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "6875:2:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "6875:14:6"
														},
														"nodeType": "YulIf",
														"src": "6872:40:6"
													},
													{
														"nodeType": "YulLeave",
														"src": "6925:5:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6720:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6726:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:12:6"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6734:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:2:6",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6731:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:16:6"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "6713:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "6713:35:6"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6769:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6775:3:6",
																		"type": "",
																		"value": "307"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6766:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6766:13:6"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6784:8:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6794:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6781:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6781:16:6"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "6762:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "6762:36:6"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "6697:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6697:111:6"
											},
											"nodeType": "YulIf",
											"src": "6694:246:6"
										},
										{
											"nodeType": "YulAssignment",
											"src": "6950:57:6",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6984:1:6",
														"type": "",
														"value": "1"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "6987:4:6"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "6993:8:6"
													},
													{
														"name": "max",
														"nodeType": "YulIdentifier",
														"src": "7003:3:6"
													}
												],
												"functionName": {
													"name": "checked_exp_helper",
													"nodeType": "YulIdentifier",
													"src": "6965:18:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "6965:42:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "6950:5:6"
												},
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "6957:4:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7046:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7048:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "7048:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7048:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "7023:5:6"
													},
													{
														"arguments": [
															{
																"name": "max",
																"nodeType": "YulIdentifier",
																"src": "7034:3:6"
															},
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7039:4:6"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "7030:3:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "7030:14:6"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "7020:2:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7020:25:6"
											},
											"nodeType": "YulIf",
											"src": "7017:51:6"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7077:25:6",
											"value": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "7090:5:6"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7097:4:6"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "7086:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7086:16:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7077:5:6"
												}
											]
										}
									]
								},
								"name": "checked_exp_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "6065:4:6",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "6071:8:6",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "6081:3:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "6089:5:6",
										"type": ""
									}
								],
								"src": "6035:1073:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7180:219:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7190:31:6",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7216:4:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7198:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7198:23:6"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "7190:4:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7230:39:6",
											"value": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7260:8:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7242:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7242:27:6"
											},
											"variableNames": [
												{
													"name": "exponent",
													"nodeType": "YulIdentifier",
													"src": "7230:8:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7279:113:6",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7309:4:6"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7315:8:6"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7325:66:6",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "checked_exp_unsigned",
													"nodeType": "YulIdentifier",
													"src": "7288:20:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7288:104:6"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7279:5:6"
												}
											]
										}
									]
								},
								"name": "checked_exp_t_uint256_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "7155:4:6",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "7161:8:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "7174:5:6",
										"type": ""
									}
								],
								"src": "7114:285:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7453:362:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7463:25:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7486:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7468:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7468:20:6"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "7463:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7497:25:6",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7520:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7502:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7502:20:6"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "7497:1:6"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "7531:28:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7554:1:6"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7557:1:6"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "7550:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7550:9:6"
											},
											"variables": [
												{
													"name": "product_raw",
													"nodeType": "YulTypedName",
													"src": "7535:11:6",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7568:41:6",
											"value": {
												"arguments": [
													{
														"name": "product_raw",
														"nodeType": "YulIdentifier",
														"src": "7597:11:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7579:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7579:30:6"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "7568:7:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7786:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7788:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "7788:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7788:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7719:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7712:9:6"
															},
															{
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7742:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "7749:7:6"
																			},
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "7758:1:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:15:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7739:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:22:6"
															}
														],
														"functionName": {
															"name": "or",
															"nodeType": "YulIdentifier",
															"src": "7692:2:6"
														},
														"nodeType": "YulFunctionCall",
														"src": "7692:83:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "7672:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7672:113:6"
											},
											"nodeType": "YulIf",
											"src": "7669:139:6"
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "7436:1:6",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "7439:1:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "7445:7:6",
										"type": ""
									}
								],
								"src": "7405:410:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7849:152:6",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7866:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7869:77:6",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7859:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7859:88:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7859:88:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7963:1:6",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7966:4:6",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7956:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7956:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7956:15:6"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7987:1:6",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7990:4:6",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "7980:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "7980:15:6"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7980:15:6"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "7821:180:6"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8049:143:6",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8059:25:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8082:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8064:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8064:20:6"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8059:1:6"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8093:25:6",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8116:1:6"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8098:17:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8098:20:6"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8093:1:6"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8140:22:6",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "8142:16:6"
															},
															"nodeType": "YulFunctionCall",
															"src": "8142:18:6"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8142:18:6"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8137:1:6"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "8130:6:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8130:9:6"
											},
											"nodeType": "YulIf",
											"src": "8127:35:6"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8172:14:6",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8181:1:6"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8184:1:6"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "8177:3:6"
												},
												"nodeType": "YulFunctionCall",
												"src": "8177:9:6"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "8172:1:6"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "8038:1:6",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "8041:1:6",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "8047:1:6",
										"type": ""
									}
								],
								"src": "8007:185:6"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILiquidityProvider_$796_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILiquidityProvider_$796_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILiquidityProvider_$796__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILiquidityProvider_$796_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_ERC20_$651(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$651(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$651(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$651_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$651(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$651_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$651_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
					"id": 6,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c806383781fa91161005957806383781fa9146100d95780639b3e9ab8146100f7578063cd5c645c14610115578063f141b52b146101315761007b565b806338d52e0f1461007f5780635b8bec551461009d5780635d0b41f8146100bb575b5f80fd5b61008761014d565b6040516100949190610a5d565b60405180910390f35b6100a5610172565b6040516100b29190610a96565b60405180910390f35b6100c3610195565b6040516100d09190610ac7565b60405180910390f35b6100e161042a565b6040516100ee9190610ac7565b60405180910390f35b6100ff6106b5565b60405161010c9190610ac7565b60405180910390f35b61012f600480360381019061012a9190610b1f565b6107c0565b005b61014b60048036038101906101469190610b1f565b6109a0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102379190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610283573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102a79190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610317573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061033b9190610be6565b60ff1690505f8183111561039e5781836103559190610c3e565b600a6103619190610da0565b905082600a6103709190610da0565b81868861037d9190610dea565b6103879190610dea565b6103919190610e58565b9650505050505050610427565b818310156103fb5782826103b29190610c3e565b600a6103be9190610da0565b905082600a6103cd9190610da0565b8186886103da9190610dea565b6103e49190610e58565b6103ee9190610e58565b9650505050505050610427565b81600a6104089190610da0565b85876104149190610dea565b61041e9190610e58565b96505050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104cc9190610b85565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610518573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053c9190610be6565b60ff1690505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d09190610be6565b60ff1690508082111561062e5781600a6105ea9190610da0565b81836105f69190610c3e565b600a6106029190610da0565b858761060e9190610dea565b6106189190610dea565b6106229190610e58565b955050505050506106b2565b808210156106875781600a6106439190610da0565b828261064f9190610c3e565b600a61065b9190610da0565b85876106679190610dea565b6106719190610e58565b61067b9190610e58565b955050505050506106b2565b80600a6106949190610da0565b84866106a09190610dea565b6106aa9190610e58565b955050505050505b90565b5f80670de0b6b3a764000090505f621e848090505f600354600254111561072e576003546002546106e69190610c3e565b600a6106f29190610da0565b9050600254600a6107039190610da0565b8183856107109190610dea565b61071a9190610dea565b6107249190610e58565b93505050506107bd565b60035460025410156107925760025460035461074a9190610c3e565b600a6107569190610da0565b9050600254600a6107679190610da0565b8183856107749190610dea565b61077e9190610e58565b6107889190610e58565b93505050506107bd565b600354600a6107a19190610da0565b82846107ad9190610dea565b6107b79190610e58565b93505050505b90565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd8f7e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088d9190610b85565b90508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108fc9190610be6565b60ff1660028190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109939190610be6565b60ff166003819055505050565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610a25610a20610a1b846109e3565b610a02565b6109e3565b9050919050565b5f610a3682610a0b565b9050919050565b5f610a4782610a2c565b9050919050565b610a5781610a3d565b82525050565b5f602082019050610a705f830184610a4e565b92915050565b5f610a8082610a2c565b9050919050565b610a9081610a76565b82525050565b5f602082019050610aa95f830184610a87565b92915050565b5f819050919050565b610ac181610aaf565b82525050565b5f602082019050610ada5f830184610ab8565b92915050565b5f80fd5b5f610aee826109e3565b9050919050565b610afe81610ae4565b8114610b08575f80fd5b50565b5f81359050610b1981610af5565b92915050565b5f60208284031215610b3457610b33610ae0565b5b5f610b4184828501610b0b565b91505092915050565b5f610b5482610ae4565b9050919050565b610b6481610b4a565b8114610b6e575f80fd5b50565b5f81519050610b7f81610b5b565b92915050565b5f60208284031215610b9a57610b99610ae0565b5b5f610ba784828501610b71565b91505092915050565b5f60ff82169050919050565b610bc581610bb0565b8114610bcf575f80fd5b50565b5f81519050610be081610bbc565b92915050565b5f60208284031215610bfb57610bfa610ae0565b5b5f610c0884828501610bd2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c4882610aaf565b9150610c5383610aaf565b9250828203905081811115610c6b57610c6a610c11565b5b92915050565b5f8160011c9050919050565b5f808291508390505b6001851115610cc657808604811115610ca257610ca1610c11565b5b6001851615610cb15780820291505b8081029050610cbf85610c71565b9450610c86565b94509492505050565b5f82610cde5760019050610d99565b81610ceb575f9050610d99565b8160018114610d015760028114610d0b57610d3a565b6001915050610d99565b60ff841115610d1d57610d1c610c11565b5b8360020a915084821115610d3457610d33610c11565b5b50610d99565b5060208310610133831016604e8410600b8410161715610d6f5782820a905083811115610d6a57610d69610c11565b5b610d99565b610d7c8484846001610c7d565b92509050818404811115610d9357610d92610c11565b5b81810290505b9392505050565b5f610daa82610aaf565b9150610db583610aaf565b9250610de27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ccf565b905092915050565b5f610df482610aaf565b9150610dff83610aaf565b9250828202610e0d81610aaf565b91508282048414831517610e2457610e23610c11565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e6282610aaf565b9150610e6d83610aaf565b925082610e7d57610e7c610e2b565b5b82820490509291505056fea2646970667358221220993d71bb92f2659513d94eb6777b50094a91e4f788410b28c954f5c761d903a164736f6c63430008140033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83781FA9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x83781FA9 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9B3E9AB8 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xCD5C645C EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xF141B52B EQ PUSH2 0x131 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5B8BEC55 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5D0B41F8 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x39E JUMPI DUP2 DUP4 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x370 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3FB JUMPI DUP3 DUP3 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xA PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP7 DUP9 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP PUSH2 0x427 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x62E JUMPI DUP2 PUSH1 0xA PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x602 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x618 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x687 JUMPI DUP2 PUSH1 0xA PUSH2 0x643 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x65B SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x667 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x6B2 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP7 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 PUSH3 0x1E8480 SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x72E JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x703 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x71A SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xA PUSH2 0x756 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0xA PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP2 DUP4 DUP6 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43CD8F7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA25 PUSH2 0xA20 PUSH2 0xA1B DUP5 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 DUP3 PUSH2 0xA0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA47 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA70 PUSH0 DUP4 ADD DUP5 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA80 DUP3 PUSH2 0xA2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0xA76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC1 DUP2 PUSH2 0xAAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADA PUSH0 DUP4 ADD DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xAEE DUP3 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFE DUP2 PUSH2 0xAE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xB08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB19 DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB34 JUMPI PUSH2 0xB33 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB41 DUP5 DUP3 DUP6 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB54 DUP3 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0xB4A JUMP JUMPDEST DUP2 EQ PUSH2 0xB6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA7 DUP5 DUP3 DUP6 ADD PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC5 DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE0 DUP2 PUSH2 0xBBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC08 DUP5 DUP3 DUP6 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC48 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xC53 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6A PUSH2 0xC11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xCC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xCB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xCBF DUP6 PUSH2 0xC71 JUMP JUMPDEST SWAP5 POP PUSH2 0xC86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xCDE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH2 0xCEB JUMPI PUSH0 SWAP1 POP PUSH2 0xD99 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD01 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD0B JUMPI PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xD99 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD1C PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD33 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP PUSH2 0xD99 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xD6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST PUSH2 0xD99 JUMP JUMPDEST PUSH2 0xD7C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xC7D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD92 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDAA DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDB5 DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP PUSH2 0xDE2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF4 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xDFF DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE0D DUP2 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xC11 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE62 DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP2 POP PUSH2 0xE6D DUP4 PUSH2 0xAAF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0xE2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 RETURNDATASIZE PUSH18 0xBB92F2659513D94EB6777B50094A91E4F788 COINBASE SIGNEXTEND 0x28 0xC9 SLOAD CREATE2 0xC7 PUSH2 0xD903 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
			"sourceMap": "900:3286:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;936:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2452:909;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1583:863;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3380:804;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1081:393;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1480:84;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;985:18;;;;;;;;;;;;;:::o;936:43::-;;;;;;;;;;;;:::o;2452:909::-;2511:7;2530:15;2548:19;2530:37;;2577:12;2592:7;2577:22;;2610:29;2663:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2610:97;;2717:25;2751:21;2745:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2717:67;;;;2795:21;2833:5;;;;;;;;;;;2819:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2795:56;;;;2862:21;2917:13;2897:17;:33;2893:200;;;2987:13;2967:17;:33;;;;:::i;:::-;2962:2;:39;;;;:::i;:::-;2946:55;;3064:17;3060:2;:21;;;;:::i;:::-;3042:13;3034:4;3024:7;:14;;;;:::i;:::-;3023:32;;;;:::i;:::-;3022:60;;;;:::i;:::-;3015:67;;;;;;;;;;2893:200;3126:13;3106:17;:33;3102:198;;;3192:17;3176:13;:33;;;;:::i;:::-;3171:2;:39;;;;:::i;:::-;3155:55;;3271:17;3267:2;:21;;;;:::i;:::-;3250:13;3242:4;3232:7;:14;;;;:::i;:::-;3231:32;;;;:::i;:::-;:58;;;;:::i;:::-;3224:65;;;;;;;;;;3102:198;3340:13;3336:2;:17;;;;:::i;:::-;3327:4;3317:7;:14;;;;:::i;:::-;3316:38;;;;:::i;:::-;3309:45;;;;;;;;2452:909;;:::o;1583:863::-;1629:7;1648:15;1666:19;1648:37;;1695:12;1710:7;1695:22;;1728:29;1781:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:97;;1835:25;1869:21;1863:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1835:67;;;;1913:21;1951:5;;;;;;;;;;;1937:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1913:56;;;;2004:13;1984:17;:33;1980:191;;;2142:17;2138:2;:21;;;;:::i;:::-;2102:13;2082:17;:33;;;;:::i;:::-;2077:2;:39;;;;:::i;:::-;2068:4;2058:7;:14;;;;:::i;:::-;2057:60;;;;:::i;:::-;2056:104;;;;:::i;:::-;2033:127;;;;;;;;;1980:191;2204:13;2184:17;:33;2180:205;;;2356:17;2352:2;:21;;;;:::i;:::-;2313:17;2297:13;:33;;;;:::i;:::-;2292:2;:39;;;;:::i;:::-;2267:4;2257:7;:14;;;;:::i;:::-;2256:76;;;;:::i;:::-;:118;;;;:::i;:::-;2233:141;;;;;;;;;2180:205;2425:13;2421:2;:17;;;;:::i;:::-;2412:4;2402:7;:14;;;;:::i;:::-;2401:38;;;;:::i;:::-;2394:45;;;;;;;1583:863;;:::o;3380:804::-;3440:7;3459:15;3477:19;3459:37;;3506:12;3521:7;3506:22;;3539:21;3600:19;;3574:23;;:45;3570:262;;;3682:19;;3656:23;;:45;;;;:::i;:::-;3651:2;:51;;;;:::i;:::-;3635:67;;3797:23;;3793:2;:27;;;;:::i;:::-;3759:13;3751:4;3741:7;:14;;;;:::i;:::-;3740:32;;;;:::i;:::-;3739:82;;;;:::i;:::-;3716:105;;;;;;;3570:262;3871:19;;3845:23;;:45;3841:276;;;3949:23;;3927:19;;:45;;;;:::i;:::-;3922:2;:51;;;;:::i;:::-;3906:67;;4082:23;;4078:2;:27;;;;:::i;:::-;4045:13;4021:4;4011:7;:14;;;;:::i;:::-;4010:48;;;;:::i;:::-;:96;;;;:::i;:::-;3987:119;;;;;;;3841:276;4157:19;;4153:2;:23;;;;:::i;:::-;4144:4;4134:7;:14;;;;:::i;:::-;4133:44;;;;:::i;:::-;4126:51;;;;;3380:804;;:::o;1081:393::-;1200:18;1161:17;;:58;;;;;;;;;;;;;;;;;;1230:29;1283:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1230:97;;1370:21;1364:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1338:65;;:23;:65;;;;1449:5;;;;;;;;;;;1435:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1413:54;;:19;:54;;;;1151:323;1081:393;:::o;1480:84::-;1550:6;1536:5;;:21;;;;;;;;;;;;;;;;;;1480:84;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1047:152::-;1123:9;1156:37;1187:5;1156:37;:::i;:::-;1143:50;;1047:152;;;:::o;1205:183::-;1318:63;1375:5;1318:63;:::i;:::-;1313:3;1306:76;1205:183;;:::o;1394:274::-;1513:4;1551:2;1540:9;1536:18;1528:26;;1564:97;1658:1;1647:9;1643:17;1634:6;1564:97;:::i;:::-;1394:274;;;;:::o;1674:77::-;1711:7;1740:5;1729:16;;1674:77;;;:::o;1757:118::-;1844:24;1862:5;1844:24;:::i;:::-;1839:3;1832:37;1757:118;;:::o;1881:222::-;1974:4;2012:2;2001:9;1997:18;1989:26;;2025:71;2093:1;2082:9;2078:17;2069:6;2025:71;:::i;:::-;1881:222;;;;:::o;2190:117::-;2299:1;2296;2289:12;2436:96;2473:7;2502:24;2520:5;2502:24;:::i;:::-;2491:35;;2436:96;;;:::o;2538:122::-;2611:24;2629:5;2611:24;:::i;:::-;2604:5;2601:35;2591:63;;2650:1;2647;2640:12;2591:63;2538:122;:::o;2666:139::-;2712:5;2750:6;2737:20;2728:29;;2766:33;2793:5;2766:33;:::i;:::-;2666:139;;;;:::o;2811:329::-;2870:6;2919:2;2907:9;2898:7;2894:23;2890:32;2887:119;;;2925:79;;:::i;:::-;2887:119;3045:1;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3016:117;2811:329;;;;:::o;3146:109::-;3196:7;3225:24;3243:5;3225:24;:::i;:::-;3214:35;;3146:109;;;:::o;3261:148::-;3347:37;3378:5;3347:37;:::i;:::-;3340:5;3337:48;3327:76;;3399:1;3396;3389:12;3327:76;3261:148;:::o;3415:169::-;3485:5;3516:6;3510:13;3501:22;;3532:46;3572:5;3532:46;:::i;:::-;3415:169;;;;:::o;3590:377::-;3673:6;3722:2;3710:9;3701:7;3697:23;3693:32;3690:119;;;3728:79;;:::i;:::-;3690:119;3848:1;3873:77;3942:7;3933:6;3922:9;3918:22;3873:77;:::i;:::-;3863:87;;3819:141;3590:377;;;;:::o;3973:86::-;4008:7;4048:4;4041:5;4037:16;4026:27;;3973:86;;;:::o;4065:118::-;4136:22;4152:5;4136:22;:::i;:::-;4129:5;4126:33;4116:61;;4173:1;4170;4163:12;4116:61;4065:118;:::o;4189:139::-;4244:5;4275:6;4269:13;4260:22;;4291:31;4316:5;4291:31;:::i;:::-;4189:139;;;;:::o;4334:347::-;4402:6;4451:2;4439:9;4430:7;4426:23;4422:32;4419:119;;;4457:79;;:::i;:::-;4419:119;4577:1;4602:62;4656:7;4647:6;4636:9;4632:22;4602:62;:::i;:::-;4592:72;;4548:126;4334:347;;;;:::o;4687:180::-;4735:77;4732:1;4725:88;4832:4;4829:1;4822:15;4856:4;4853:1;4846:15;4873:194;4913:4;4933:20;4951:1;4933:20;:::i;:::-;4928:25;;4967:20;4985:1;4967:20;:::i;:::-;4962:25;;5011:1;5008;5004:9;4996:17;;5035:1;5029:4;5026:11;5023:37;;;5040:18;;:::i;:::-;5023:37;4873:194;;;;:::o;5073:102::-;5115:8;5162:5;5159:1;5155:13;5134:34;;5073:102;;;:::o;5181:848::-;5242:5;5249:4;5273:6;5264:15;;5297:5;5288:14;;5311:712;5332:1;5322:8;5319:15;5311:712;;;5427:4;5422:3;5418:14;5412:4;5409:24;5406:50;;;5436:18;;:::i;:::-;5406:50;5486:1;5476:8;5472:16;5469:451;;;5901:4;5894:5;5890:16;5881:25;;5469:451;5951:4;5945;5941:15;5933:23;;5981:32;6004:8;5981:32;:::i;:::-;5969:44;;5311:712;;;5181:848;;;;;;;:::o;6035:1073::-;6089:5;6280:8;6270:40;;6301:1;6292:10;;6303:5;;6270:40;6329:4;6319:36;;6346:1;6337:10;;6348:5;;6319:36;6415:4;6463:1;6458:27;;;;6499:1;6494:191;;;;6408:277;;6458:27;6476:1;6467:10;;6478:5;;;6494:191;6539:3;6529:8;6526:17;6523:43;;;6546:18;;:::i;:::-;6523:43;6595:8;6592:1;6588:16;6579:25;;6630:3;6623:5;6620:14;6617:40;;;6637:18;;:::i;:::-;6617:40;6670:5;;;6408:277;;6794:2;6784:8;6781:16;6775:3;6769:4;6766:13;6762:36;6744:2;6734:8;6731:16;6726:2;6720:4;6717:12;6713:35;6697:111;6694:246;;;6850:8;6844:4;6840:19;6831:28;;6885:3;6878:5;6875:14;6872:40;;;6892:18;;:::i;:::-;6872:40;6925:5;;6694:246;6965:42;7003:3;6993:8;6987:4;6984:1;6965:42;:::i;:::-;6950:57;;;;7039:4;7034:3;7030:14;7023:5;7020:25;7017:51;;;7048:18;;:::i;:::-;7017:51;7097:4;7090:5;7086:16;7077:25;;6035:1073;;;;;;:::o;7114:285::-;7174:5;7198:23;7216:4;7198:23;:::i;:::-;7190:31;;7242:27;7260:8;7242:27;:::i;:::-;7230:39;;7288:104;7325:66;7315:8;7309:4;7288:104;:::i;:::-;7279:113;;7114:285;;;;:::o;7405:410::-;7445:7;7468:20;7486:1;7468:20;:::i;:::-;7463:25;;7502:20;7520:1;7502:20;:::i;:::-;7497:25;;7557:1;7554;7550:9;7579:30;7597:11;7579:30;:::i;:::-;7568:41;;7758:1;7749:7;7745:15;7742:1;7739:22;7719:1;7712:9;7692:83;7669:139;;7788:18;;:::i;:::-;7669:139;7453:362;7405:410;;;;:::o;7821:180::-;7869:77;7866:1;7859:88;7966:4;7963:1;7956:15;7990:4;7987:1;7980:15;8007:185;8047:1;8064:20;8082:1;8064:20;:::i;:::-;8059:25;;8098:20;8116:1;8098:20;:::i;:::-;8093:25;;8137:1;8127:35;;8142:18;;:::i;:::-;8127:35;8184:1;8181;8177:9;8172:14;;8007:185;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "754800",
				"executionCost": "784",
				"totalCost": "755584"
			},
			"external": {
				"asset()": "infinite",
				"calculateOrig()": "infinite",
				"calculateWithCachedDecimals()": "infinite",
				"calculateWithScalingFactor()": "infinite",
				"liquidityProvider()": "infinite",
				"updateAsset(address)": "24781",
				"updateLiquidityProvider(address)": "infinite"
			}
		},
		"methodIdentifiers": {
			"asset()": "38d52e0f",
			"calculateOrig()": "83781fa9",
			"calculateWithCachedDecimals()": "9b3e9ab8",
			"calculateWithScalingFactor()": "5d0b41f8",
			"liquidityProvider()": "5b8bec55",
			"updateAsset(address)": "f141b52b",
			"updateLiquidityProvider(address)": "cd5c645c"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "asset",
			"outputs": [
				{
					"internalType": "contract ERC20",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateOrig",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateWithCachedDecimals",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateWithScalingFactor",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "liquidityProvider",
			"outputs": [
				{
					"internalType": "contract ILiquidityProvider",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_asset",
					"type": "address"
				}
			],
			"name": "updateAsset",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_liquidityProvider",
					"type": "address"
				}
			],
			"name": "updateLiquidityProvider",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}